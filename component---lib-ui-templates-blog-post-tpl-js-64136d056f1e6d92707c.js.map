{"version":3,"sources":["webpack:///./lib/ui/templates/BlogPostTpl.js"],"names":["BlogPostTpl","props","_this","_Component","call","this","readingTime","Math","random","window","tick","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default","setInterval","state","setState","prevState","render","blogPost","data","markdownRemark","frontmatter","html","cover","date","title","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","Fragment","ui_partials__WEBPACK_IMPORTED_MODULE_6__","Object","assign","className","toFixed","style","marginLeft","marginRight","maxWidth","gatsby_image__WEBPACK_IMPORTED_MODULE_5___default","fluid","childImageSharp","alt","ui_components__WEBPACK_IMPORTED_MODULE_7__","space","dangerouslySetInnerHTML","__html","Component","propTypes","shape","object","isRequired","pageQuery"],"mappings":"qRAQqBA,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,KACA,IAAMC,EAA8B,IAAhBC,KAAKC,SAFR,MAGK,oBAAXC,SACTP,EAAKQ,KAAOR,EAAKQ,KAAKC,KAAVC,QAAAV,KACZW,YAAYX,EAAKQ,KAAM,MAEzBR,EAAKY,MAAQ,CACXR,eAReJ,sCAYnBQ,gBACEL,KAAKU,SAAS,SAAAC,GAAS,MAAK,CAC1BV,YAAaU,EAAUV,YAA8B,GAAhBC,KAAKC,SAAgB,QAI9DS,kBACE,IAAMC,EAAWb,KAAKJ,MAAMkB,KAAKC,eACzBC,EAAsBH,EAAtBG,YAAaC,EAASJ,EAATI,KACbC,EAAuBF,EAAvBE,MAAOC,EAAgBH,EAAhBG,KAAMC,EAAUJ,EAAVI,MACrB,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAADC,OAAAC,OAAA,GAAY3B,KAAKJ,MAAjB,CAAwBwB,MAAOA,KAC/BC,EAAAC,EAAAC,cAACE,EAAA,EAAWzB,KAAKJ,MACfyB,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,QAAMK,UAAU,SAAhB,iBACiB5B,KAAKS,MAAMR,YAAY4B,QAAQ,GADhD,YAGAR,EAAAC,EAAAC,cAAA,MAAIK,UAAU,QAAQR,GACtBC,EAAAC,EAAAC,cAAA,QAAMK,UAAU,SAAST,IAE3BE,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEK,MAAO,CACLC,WAAY,OACZC,YAAa,OACbC,SAAU,UAGXf,EACCG,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAKa,MAAOjB,EAAMkB,gBAAgBD,MAAOE,IAAKjB,IAC5C,KACJC,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMC,MAAM,KACVlB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAME,wBAAyB,CAAEC,OAAQxB,aA7CdyB,aAsDzC/C,EAAYgD,UAAY,CACtB7B,KAAM8B,gBAAM,CACV7B,eAAgB8B,SAAOC,aACtBA,YAGE,IAAMC,EAAS","file":"component---lib-ui-templates-blog-post-tpl-js-64136d056f1e6d92707c.js","sourcesContent":["import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\nimport Img from \"gatsby-image\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Copy, Tile } from \"ui/components\";\n\nexport default class BlogPostTpl extends Component {\n  constructor(props) {\n    super(props);\n    const readingTime = Math.random() * 300;\n    if (typeof window !== \"undefined\") {\n      this.tick = this.tick.bind(this);\n      setInterval(this.tick, 3000);\n    }\n    this.state = {\n      readingTime\n    };\n  }\n\n  tick() {\n    this.setState(prevState => ({\n      readingTime: prevState.readingTime + Math.random() * 15 - 4\n    }));\n  }\n\n  render() {\n    const blogPost = this.props.data.markdownRemark;\n    const { frontmatter, html } = blogPost;\n    const { cover, date, title } = frontmatter;\n    return (\n      <>\n        <Helmet {...this.props} title={title} />\n        <Layout {...this.props}>\n          <Header>\n            <span className=\"small\">\n              Reading Time: {this.state.readingTime.toFixed(2)} seconds\n            </span>\n            <h1 className=\"hero\">{title}</h1>\n            <span className=\"small\">{date}</span>\n          </Header>\n          <Body\n            style={{\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              maxWidth: \"900px\"\n            }}\n          >\n            {cover ? (\n              <Img fluid={cover.childImageSharp.fluid} alt={title} />\n            ) : null}\n            <Tile space=\"h\">\n              <Copy dangerouslySetInnerHTML={{ __html: html }} />\n            </Tile>\n          </Body>\n        </Layout>\n      </>\n    );\n  }\n}\n\nBlogPostTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query BlogPostsByUID($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        cover {\n          childImageSharp {\n            fluid(\n              maxWidth: 800\n              quality: 90\n              traceSVG: { color: \"lightgray\" }\n            ) {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}