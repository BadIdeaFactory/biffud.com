{"version":3,"file":"component---lib-ui-templates-blog-post-tpl-js-31cc12b16215bb990a77.js","mappings":"wNAQqBA,EAAAA,SAAAA,GACnB,WAAYC,GAAQ,IAAD,EACjB,cAAMA,IAAN,KACA,IAAMC,EAA8B,IAAhBC,KAAKC,SAFR,MAGK,oBAAXC,SACT,EAAKC,KAAO,EAAKA,KAAKC,MAAV,YAOd,EAAKC,MAAQ,CACXN,YAAAA,GAZe,GADAF,EAAAA,EAAAA,GAAAA,EAAAA,GAelB,kBAwCA,OAxCA,EAEDM,KAAA,WACEG,KAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BT,YAAaS,EAAUT,YAA8B,GAAhBC,KAAKC,SAAgB,OAE7D,EAEDQ,OAAA,WACE,IAAMC,EAAWJ,KAAKR,MAAMa,KAAKC,eACzBC,EAAsBH,EAAtBG,YAAaC,EAASJ,EAATI,KACbC,EAAuBF,EAAvBE,MAAOC,EAAgBH,EAAhBG,KAAMC,EAAUJ,EAAVI,MACrB,OACE,gCACE,gBAAC,KAAD,iBAAYX,KAAKR,MAAjB,CAAwBmB,MAAOA,KAC/B,gBAAC,KAAWX,KAAKR,MACf,gBAAC,KAAD,KACE,wBAAMoB,UAAU,SAAhB,iBACiBZ,KAAKD,MAAMN,YAAYoB,QAAQ,GADhD,YAGA,sBAAID,UAAU,QAAQD,GACtB,wBAAMC,UAAU,SAASF,IAE3B,gBAAC,KAAD,CACEI,MAAO,CACLC,WAAY,OACZC,YAAa,OACbC,SAAU,UAGXR,EACC,gBAAC,IAAD,CAAKS,MAAOT,EAAMU,gBAAgBD,MAAOE,IAAKT,IAC5C,KACJ,gBAAC,KAAD,CAAMU,MAAM,KACV,gBAAC,KAAD,CAAMC,wBAAyB,CAAEC,OAAQf,UAMpD,EAvDkBjB,CAAoBiC,EAAAA","sources":["webpack://biffud.com/./lib/ui/templates/BlogPostTpl.js"],"sourcesContent":["import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\nimport Img from \"gatsby-image\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Copy, Tile } from \"ui/components\";\n\nexport default class BlogPostTpl extends Component {\n  constructor(props) {\n    super(props);\n    const readingTime = Math.random() * 300;\n    if (typeof window !== \"undefined\") {\n      this.tick = this.tick.bind(this);\n      //setInterval(this.tick, 3000);\n      // Note the above line was removed because it was causing\n      // the page to flash every 3 seconds.\n      // See https://github.com/BadIdeaFactory/biffud.com/issues/99\n      // for further details.\n    }\n    this.state = {\n      readingTime\n    };\n  }\n\n  tick() {\n    this.setState(prevState => ({\n      readingTime: prevState.readingTime + Math.random() * 15 - 4\n    }));\n  }\n\n  render() {\n    const blogPost = this.props.data.markdownRemark;\n    const { frontmatter, html } = blogPost;\n    const { cover, date, title } = frontmatter;\n    return (\n      <>\n        <Helmet {...this.props} title={title} />\n        <Layout {...this.props}>\n          <Header>\n            <span className=\"small\">\n              Reading Time: {this.state.readingTime.toFixed(2)} seconds\n            </span>\n            <h1 className=\"hero\">{title}</h1>\n            <span className=\"small\">{date}</span>\n          </Header>\n          <Body\n            style={{\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              maxWidth: \"900px\"\n            }}\n          >\n            {cover ? (\n              <Img fluid={cover.childImageSharp.fluid} alt={title} />\n            ) : null}\n            <Tile space=\"h\">\n              <Copy dangerouslySetInnerHTML={{ __html: html }} />\n            </Tile>\n          </Body>\n        </Layout>\n      </>\n    );\n  }\n}\n\nBlogPostTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query BlogPostsByUID($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        cover {\n          childImageSharp {\n            fluid(\n              maxWidth: 800\n              quality: 90\n              traceSVG: { color: \"lightgray\" }\n            ) {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["BlogPostTpl","props","readingTime","Math","random","window","tick","bind","state","this","setState","prevState","render","blogPost","data","markdownRemark","frontmatter","html","cover","date","title","className","toFixed","style","marginLeft","marginRight","maxWidth","fluid","childImageSharp","alt","space","dangerouslySetInnerHTML","__html","Component"],"sourceRoot":""}