{"version":3,"file":"component---src-pages-playground-tsx-00752847e5442cc04b36.js","mappings":"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","sources":["webpack://biffud.com/./lib/ui/templates/ContactTpl.tsx","webpack://biffud.com/./lib/ui/templates/EmojiTpl.tsx","webpack://biffud.com/./lib/ui/templates/ProjectItemTpl.tsx","webpack://biffud.com/./lib/ui/templates/AboutTpl.tsx","webpack://biffud.com/./lib/ui/templates/BlogListingTpl.tsx","webpack://biffud.com/./lib/ui/templates/MediaTpl.tsx","webpack://biffud.com/./lib/ui/templates/Playground.tsx","webpack://biffud.com/./src/pages/playground.tsx","webpack://biffud.com/./lib/ui/templates/ProjectListingTpl.tsx","webpack://biffud.com/./lib/ui/templates/ofPeople/Person.tsx","webpack://biffud.com/./lib/ui/templates/ofPeople/PersonModal.tsx","webpack://biffud.com/./lib/ui/templates/PeopleTpl.tsx","webpack://biffud.com/./lib/ui/templates/ofHome/Section.tsx","webpack://biffud.com/./lib/ui/templates/ofHome/Clients.tsx","webpack://biffud.com/./lib/ui/templates/ofHome/Projects.tsx","webpack://biffud.com/./lib/ui/templates/ofHome/Services.tsx","webpack://biffud.com/./lib/ui/templates/ofHome/Testimonials.tsx","webpack://biffud.com/./lib/ui/templates/HomeTpl.tsx","webpack://biffud.com/./lib/ui/templates/LandingTpl.tsx","webpack://biffud.com/./lib/ui/templates/BlogPostTpl.tsx","webpack://biffud.com/./lib/ui/templates/FAQListingTpl.tsx"],"sourcesContent":["import React from \"react\";\nimport { graphql, type PageProps } from \"gatsby\";\nimport styled from \"styled-components\";\n\nimport { Action, Icon, Tile } from \"ui/components\";\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { setSpace } from \"ui/mixins\";\n\nconst ContactHolder = styled(Tile)`\n  ${setSpace(\"pah\")};\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 600px;\n  text-align: center;\n`;\nconst Social = styled.ul`\n  ${setSpace(\"mtl\")};\n  text-align: left;\n`;\n\nconst SocialItem = styled.li`\n  ${setSpace(\"mts\")};\n  i {\n    ${setSpace(\"mrs\")};\n  }\n`;\n\nconst ContactTpl = ({ data, ...props }: PageProps<Queries.ContactTplQuery>) => {\n  const { frontmatter } = data.markdownRemark ?? {};\n  const { title, heading, subheading, email, facebookid, twitterid, githubid } =\n    frontmatter ?? {};\n\n  return (\n    <>\n      <Helmet {...props} title={title ?? \"\"} />\n      <Layout {...props}>\n        <Body>\n          <Header>\n            <h1 className=\"hero\">{heading}</h1>\n            <p className=\"para\">{subheading}</p>\n          </Header>\n          <ContactHolder>\n            <Action button obfuscated email={email} />\n            <Social>\n              {twitterid ? (\n                <SocialItem>\n                  <Action href={`https://twitter.com/${twitterid}`}>\n                    <Icon name=\"twitter\" size=\"s\" />\n                    {twitterid}\n                  </Action>\n                </SocialItem>\n              ) : null}\n              {githubid ? (\n                <SocialItem>\n                  <Action href={`https://github.com/${githubid}`} size=\"s\">\n                    <Icon name=\"github\" />\n                    {githubid}\n                  </Action>\n                </SocialItem>\n              ) : null}\n              {facebookid ? (\n                <SocialItem>\n                  <Action href={`https://facebook.com/${facebookid}`} size=\"s\">\n                    <Icon name=\"facebook\" />\n                    {facebookid}\n                  </Action>\n                </SocialItem>\n              ) : null}\n            </Social>\n          </ContactHolder>\n        </Body>\n      </Layout>\n    </>\n  );\n};\n\nexport default ContactTpl;\n\nexport const pageQuery = graphql`\n  query ContactTpl($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n        email\n        facebookid\n        twitterid\n        githubid\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { graphql, type PageProps } from \"gatsby\";\nimport styled from \"styled-components\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Icon, Tile } from \"ui/components\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace } from \"ui/mixins\";\n\nconst EmojiHolder = styled(Tile)`\n  ${setSpace(\"pak\")};\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 600px;\n  text-align: center;\n  ${breakpoint.phone} {\n    ${setSpace(\"pvh\")};\n  }\n  i {\n    ${setSpace(\"mbl\")};\n    color: ${({ theme }) => theme.actionColor};\n    display: inline-block;\n    font-size: 240px;\n    height: 240px;\n    line-height: 240px;\n    width: 240px;\n    ${breakpoint.phone} {\n      font-size: 200px;\n      height: 200px;\n      line-height: 200px;\n      width: 200px;\n    }\n  }\n  h2 {\n    font-size: 36px;\n    color: ${({ theme }) => theme.actionColor};\n    font-weight: 800;\n    ${breakpoint.phone} {\n      font-size: 26px;\n    }\n  }\n`;\n\nconst EmojiTpl = ({ data, ...props }: PageProps<Queries.EmojiTplQuery>) => {\n  const { frontmatter } = data.markdownRemark ?? {};\n  const { title, heading, subheading } = frontmatter ?? {};\n\n  return (\n    <>\n      <Helmet {...props} title={title ?? \"\"} />\n      <Layout {...props}>\n        <Body>\n          <Header>\n            <h1 className=\"hero\">{heading}</h1>\n            <p className=\"para\">{subheading}</p>\n          </Header>\n          <EmojiHolder>\n            <Icon name=\"thinking\" />\n            <h2 className=\"name\">:thinkingface:</h2>\n          </EmojiHolder>\n        </Body>\n      </Layout>\n    </>\n  );\n};\n\nexport default EmojiTpl;\n\nexport const pageQuery = graphql`\n  query EmojiTpl($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { graphql, type PageProps } from \"gatsby\";\nimport styled from \"styled-components\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Actionbar, Action, Icon, Gallery, Tile } from \"ui/components\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst Flex = styled.div`\n  ${breakpoint.tabletUp} {\n    display: flex;\n    & div.sideA,\n    & div.sideB {\n      flex: 0 0 50%;\n    }\n    & div.sideA {\n      ${setSpace(\"prl\")};\n    }\n    & div.sideB {\n      ${setSpace(\"pll\")};\n    }\n  }\n`;\n\nconst BodyHd = styled(Flex)`\n  ${setSpace(\"mbl\")};\n  ${breakpoint.tabletUp} {\n    display: flex;\n  }\n  & div.sideB {\n    display: flex;\n  }\n  & div.time,\n  & div.code {\n    flex: 0 0 50%;\n  }\n  ${breakpoint.phone} {\n    & div.sideB {\n      ${setSpace(\"mtl\")}\n    }\n  }\n`;\n\nconst BodyBd = styled(Flex)`\n  ${setSpace(\"mvl\")};\n  a {\n    color: ${({ theme }) => theme.actionColor};\n    text-decoration: underline;\n  }\n`;\n\nconst BodyFt = styled.div`\n  ${setSpace(\"mth\")};\n  ${setType(\"s\")};\n`;\n\nconst Label = styled.h2`\n  ${setSpace(\"mbs\")};\n  ${setType(\"s\")};\n  color: ${({ theme }) => theme.dimmedColor};\n`;\n\nconst Name = styled.p`\n  ${setType(\"h\")};\n  font-weight: 800;\n  color: ${({ theme }) => theme.titleColor};\n  text-transform: uppercase;\n`;\n\nconst Tagline = styled.p`\n  ${setSpace(\"mbl\")};\n  ${setType(\"l\")};\n  font-weight: 600;\n  color: ${({ theme }) => theme.titleColor};\n`;\n\nconst Description = styled.div`\n  color: ${({ theme }) => theme.titleColor};\n  p {\n    &:not(:last-child) {\n      ${setSpace(\"mbm\")};\n    }\n  }\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    font-weight: 800;\n  }\n  a {\n    color: ${({ theme }) => theme.actionColor};\n  }\n  em {\n    font-style: italic;\n  }\n  strong {\n    color: ${({ theme }) => theme.titleColor};\n    font-weight: 800;\n  }\n  ul,\n  ol {\n    ${setType(\"s\")};\n  }\n  ul li:before {\n    ${setSpace(\"mrs\")};\n    color: ${({ theme }) => theme.color};\n    content: \"–\";\n    display: inline-block;\n  }\n  ol li {\n    list-style: decimal;\n  }\n  ${breakpoint.phone} {\n    ${setSpace(\"mbl\")};\n  }\n`;\n\nconst Meta = styled.p`\n  ${setType(\"s\")};\n  color: ${({ theme }) => theme.titleColor};\n  font-weight: 800;\n  text-transform: uppercase;\n`;\n\nconst Awards = styled.div`\n  ${setSpace(\"mtl\")};\n  ${setType(\"s\")};\n  color: ${({ theme }) => theme.titleColor};\n  li:before {\n    ${setSpace(\"mrx\")};\n    color: ${({ theme }) => theme.dimmedColor};\n    content: \"—\";\n  }\n  strong {\n    font-weight: 600;\n  }\n  i {\n    color: ${({ theme }) => theme.dimmedColor};\n  }\n`;\n\nconst Lists = styled.div`\n  ${setSpace(\"mtl\")};\n  ${setType(\"s\")};\n  color: ${({ theme }) => theme.titleColor};\n  display: flex;\n  & > * {\n    flex: 0 0 50%;\n  }\n  li:before {\n    ${setSpace(\"mrx\")};\n    color: ${({ theme }) => theme.dimmedColor};\n    content: \"—\";\n  }\n  i {\n    color: ${({ theme }) => theme.dimmedColor};\n  }\n`;\n\nconst ProjectItemTpl = (props: PageProps<Queries.PortfolioItemsByUIDQuery>) => {\n  const portfolioItem = props.data.markdownRemark;\n  const genericCover = props.data.defaultCover.edges[0].node.childImageSharp;\n  const { frontmatter, html } = portfolioItem ?? {};\n  const {\n    application,\n    awards,\n    bifpresents,\n    cover,\n    date,\n    slides,\n    link,\n    needs,\n    code,\n    source,\n    tagline,\n    timeframe,\n    title,\n  } = frontmatter ?? {};\n\n  const displayGallery = () => {\n    const images = [];\n    if (cover?.childImageSharp?.gatsbyImageData) {\n      images.push(cover.childImageSharp.gatsbyImageData);\n    }\n    if (slides) {\n      slides.forEach((slide) =>\n        images.push(slide?.childImageSharp?.gatsbyImageData)\n      );\n    }\n    return (\n      <Gallery images={images} defaultImage={genericCover!.gatsbyImageData} />\n    );\n  };\n\n  return (\n    <>\n      <Helmet {...props} title={title ?? \"\"} />\n      <Layout {...props}>\n        <Header>\n          <span className=\"small\">BIFFUD Presents</span>\n          <h1 className=\"hero\">{bifpresents}</h1>\n          <span className=\"small\">{date}</span>\n        </Header>\n        <Body>\n          <Tile space=\"h\">\n            <BodyHd>\n              <div className=\"sideA\">\n                <div className=\"name\">\n                  <Label>Project name</Label>\n                  <Name>{title}</Name>\n                </div>\n              </div>\n              <div className=\"sideB\">\n                <div className=\"time\">\n                  <Label>Timeframe</Label>\n                  <Meta>{timeframe}</Meta>\n                </div>\n                <div className=\"code\">\n                  <Label>Code</Label>\n                  <Meta>{code}</Meta>\n                </div>\n              </div>\n            </BodyHd>\n            <BodyBd>\n              <div className=\"sideA\">\n                <Label>Tagline</Label>\n                <Tagline>{tagline}</Tagline>\n                <Label>Description</Label>\n                <Description dangerouslySetInnerHTML={{ __html: html ?? \"\"}} />\n              </div>\n              <div className=\"sideB\">\n                <Label>Proofs of existence</Label>\n                {displayGallery()}\n                {awards && awards.length > 0 && (\n                  <Awards>\n                    <Label>Proofs of excellence</Label>\n                    <ul>\n                      {awards.map(({ name, url, description }, i) => {\n                        if (!name) return null;\n                        const AwardName = url ? (\n                          <>\n                            <a\n                              href={url}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              <strong>{name}</strong>\n                            </a>{\" \"}\n                            <Icon name=\"popout\" />\n                          </>\n                        ) : (\n                          <strong>{name}</strong>\n                        );\n\n                        return (\n                          <li key={`${name}_${i}`}>\n                            {AwardName}\n                            {description ? ` ${description}` : \"\"}\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  </Awards>\n                )}\n                <Lists>\n                  {source || application ? (\n                    <div className=\"sideB\" style={{ padding: \"0\" }}>\n                      <Label>More proofs</Label>\n                      <ul>\n                        {source ? (\n                          <li>\n                            <a\n                              href={source}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              Source code\n                            </a>{\" \"}\n                            <Icon name=\"popout\" />\n                          </li>\n                        ) : null}\n                        {application ? (\n                          <li>\n                            <a\n                              href={application}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              BIFFUD Application\n                            </a>{\" \"}\n                            <Icon name=\"popout\" />\n                          </li>\n                        ) : null}\n                      </ul>\n                    </div>\n                  ) : null}\n                  {Object.keys(needs).length > 0 ? (\n                    <div className=\"sideB\" style={{ padding: \"0\" }}>\n                      <Label>Needs</Label>\n                      <ul>\n                        {Object.keys(needs).map((need) => {\n                          const dict = {\n                            code: \"Code\",\n                            graphic: \"Graphic Design\",\n                            money: \"Money\",\n                            users: \"Users\",\n                            uxui: \"UX / UI Design\",\n                          };\n                          if (needs[need]) {\n                            return (\n                              <li key={need}>\n                                {need !== \"other\" ? dict[need] : needs[need]}\n                              </li>\n                            );\n                          }\n                          return null;\n                        })}\n                      </ul>\n                    </div>\n                  ) : null}\n                </Lists>\n              </div>\n            </BodyBd>\n            <BodyFt>\n              <Actionbar>\n                {link ? (\n                  <div>\n                    <Action button primary href={link}>\n                      Launch project\n                    </Action>\n                  </div>\n                ) : null}\n                <div>\n                  <Action href=\"https://patreon.com/biffud\" target=\"_blank\">\n                    Donate to support\n                  </Action>\n                </div>\n              </Actionbar>\n            </BodyFt>\n          </Tile>\n        </Body>\n      </Layout>\n    </>\n  );\n};\n\nexport default ProjectItemTpl;\n\nexport const pageQuery = graphql`\n  query PortfolioItemsByUID($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        active\n        application\n        slides {\n          childImageSharp {\n            gatsbyImageData(\n              width: 600\n              quality: 90\n              placeholder: DOMINANT_COLOR\n              layout: CONSTRAINED\n            )\n          }\n        }\n        bifpresents\n        date(formatString: \"MMM YYYY\")\n        link\n        code\n        source\n        tagline\n        timeframe\n        title\n        uid\n        awards {\n          name\n          url\n          description\n        }\n        needs {\n          code\n          graphic\n          money\n          uxui\n          users\n          other\n        }\n        cover {\n          childImageSharp {\n            gatsbyImageData(\n              width: 600\n              quality: 90\n              placeholder: DOMINANT_COLOR\n              layout: CONSTRAINED\n            )\n          }\n        }\n      }\n    }\n    defaultCover: allFile(\n      filter: { relativePath: { eq: \"images/default-cover.png\" } }\n    ) {\n      edges {\n        node {\n          childImageSharp {\n            gatsbyImageData(\n              width: 600\n              quality: 90\n              placeholder: DOMINANT_COLOR\n              layout: CONSTRAINED\n            )\n          }\n        }\n      }\n    }\n  }\n`;\n","import { graphql, type PageProps } from \"gatsby\";\nimport React from \"react\";\n\nimport { Copy, Tile } from \"ui/components\";\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\n\nconst AboutTpl = ({ data, ...props }: PageProps<Queries.AboutTplQuery>) => {\n  const { frontmatter, html } = data.markdownRemark ?? {};\n\n  return (\n    <>\n      <Helmet {...props} title={frontmatter?.title ?? \"\"} />\n      <Layout {...props}>\n        <Header>\n          <h1 className=\"hero\">{frontmatter?.heading ?? \"\"}</h1>\n          <p className=\"para\">{frontmatter?.subheading ?? \"\"}</p>\n        </Header>\n        <Body\n          style={{\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            maxWidth: \"900px\",\n          }}\n        >\n          <Tile space=\"h\">\n            <Copy dangerouslySetInnerHTML={{ __html: html ?? \"\" }} />\n          </Tile>\n        </Body>\n      </Layout>\n    </>\n  );\n};\n\nexport default AboutTpl;\n\nexport const pageQuery = graphql`\n  query AboutTpl($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { graphql, Link, type PageProps } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport styled from \"styled-components\";\n\nimport { Icon, Tile } from \"ui/components\";\nimport { breakpoint } from \"ui/settings\";\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst PostList = styled.ol`\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nconst Post = styled(Tile)`\n  ${setType(\"m\")};\n  grid-row-end: span 1;\n  position: relative;\n  ${breakpoint.phone} {\n    ${setSpace(\"mbl\")};\n  }\n`;\n\nconst PostCover = styled.div`\n  border: 2px solid ${({ theme }) => theme.actionColor};\n  ${setSpace(\"mbm\")};\n`;\n\nconst PostHd = styled.div`\n  ${setSpace(\"mbs\")};\n  align-items: flex-start;\n  display: flex;\n  justify-content: space-between;\n  h2,\n  span {\n    ${setType(\"l\")};\n    color: ${({ theme }) => theme.actionColor};\n    font-weight: 800;\n  }\n  span {\n    display: none;\n  }\n  ${breakpoint.desktopUp} {\n    span {\n      display: inline-block;\n    }\n  }\n`;\n\nconst PostBd = styled.div`\n  ${setSpace(\"mbm\")};\n  color: ${({ theme }) => theme.titleColor};\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nconst PostFt = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  span {\n    ${setType(\"s\")};\n    color: ${({ theme }) => theme.color};\n  }\n`;\n\nconst BlogListingTpl = (props: PageProps<Queries.BlogTplQuery>) => {\n  const { posts } = props.data;\n  const { frontmatter } = props.data.markdownRemark ?? {};\n\n  return (\n    <>\n      <Helmet {...props} title={frontmatter?.title ?? \"\"} />\n      <Layout {...props}>\n        <Header>\n          <h1 className=\"hero\">{frontmatter?.heading}</h1>\n          <p className=\"para\">{frontmatter?.subheading}</p>\n        </Header>\n        <Body>\n          <PostList>\n            {posts.edges.map(({ node }) => {\n              const { timeToRead } = node;\n              const { cover, date, summary, title, uid } =\n                node.frontmatter ?? {};\n\n              return (\n                <Post key={uid} as=\"li\">\n                  <Tile to={`/tldr/${uid}`} as={Link}>\n                    {cover?.childImageSharp?.gatsbyImageData ? (\n                      <PostCover>\n                        <GatsbyImage\n                          image={cover.childImageSharp.gatsbyImageData}\n                          alt={title ?? \"\"}\n                        />\n                      </PostCover>\n                    ) : null}\n                    <PostHd>\n                      <h2 className=\"title\">{title}</h2>\n                      <span>\n                        <Icon name=\"arrow-right\" text=\"Read more…\" />\n                      </span>\n                    </PostHd>\n                    <PostBd>\n                      <p className=\"summary\">{summary}</p>\n                    </PostBd>\n                    <PostFt>\n                      <span>{date}</span>\n                      <span>{timeToRead} min read</span>\n                    </PostFt>\n                  </Tile>\n                </Post>\n              );\n            })}\n          </PostList>\n        </Body>\n      </Layout>\n    </>\n  );\n};\n\nexport default BlogListingTpl;\n\nexport const pageQuery = graphql`\n  query BlogTpl($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n      }\n    }\n    posts: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/pages/tldr/.*post.md/\" } }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      edges {\n        node {\n          id\n          timeToRead\n          frontmatter {\n            uid\n            cover {\n              childImageSharp {\n                gatsbyImageData(\n                  height: 240\n                  quality: 100\n                  placeholder: DOMINANT_COLOR\n                  layout: FULL_WIDTH\n                )\n              }\n            }\n            date(formatString: \"MMMM D, YYYY\")\n            summary\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { graphql, type PageProps } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport styled from \"styled-components\";\n\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Copy, Icon, Tile } from \"ui/components\";\n\nconst MentionsList = styled.ol`\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\ninterface MentionProps {\n  readonly $highlight: boolean;\n}\n\nconst Mention = styled(Tile)<MentionProps>`\n  ${setType(\"m\")};\n  grid-row-end: span 1;\n  position: relative;\n  ${breakpoint.phone} {\n    ${setSpace(\"mbl\")};\n  }\n  ${({ $highlight }) =>\n    $highlight\n      ? `\n        grid-column: 1 / span 2;\n        grid-row: 1 / 2;\n        justify-self: stretch;\n        align-self: stretch;\n      `\n      : ``};\n`;\n\nconst MentionCover = styled.div`\n  ${setSpace(\"mbm\")};\n  border: 2px solid ${({ theme }) => theme.actionColor};\n  display: block;\n`;\n\nconst MentionHd = styled.div`\n  align-items: flex-start;\n  display: flex;\n  justify-content: space-between;\n  h2,\n  span {\n    ${setType(\"l\")};\n    color: ${({ theme }) => theme.actionColor};\n    font-weight: 800;\n  }\n`;\n\nconst MentionBd = styled.div`\n  ${setSpace(\"mts\")};\n  color: ${({ theme }) => theme.titleColor};\n  ${Copy} {\n    ${setSpace(\"mbs\")};\n  }\n`;\n\nconst MediaTpl = (props: PageProps<Queries.MediaTplQuery>) => {\n  const { mentions } = props.data;\n  const { frontmatter } = props.data.markdownRemark ?? {};\n\n  return (\n    <>\n      <Helmet {...props} title={frontmatter?.title ?? \"\"} />\n      <Layout {...props}>\n        <Header>\n          <h1 className=\"hero\">{frontmatter?.heading}</h1>\n          <p className=\"para\">{frontmatter?.subheading}</p>\n        </Header>\n        <Body>\n          <MentionsList>\n            {mentions.edges.map(({ node }) => {\n              const { html } = node;\n              const { cover, publication, source, highlight, title } =\n                node.frontmatter ?? {};\n\n              return (\n                <Mention as=\"li\" $highlight={highlight ?? false} key={title}>\n                  <Tile href={source} target=\"_blank\" as=\"a\">\n                    {cover?.childImageSharp?.gatsbyImageData ? (\n                      <MentionCover>\n                        <GatsbyImage\n                          image={cover.childImageSharp.gatsbyImageData}\n                          alt={title ?? \"\"}\n                        />\n                      </MentionCover>\n                    ) : null}\n                    <MentionHd>\n                      <h2 className=\"title\">{title}</h2>\n                      <span>\n                        <Icon name=\"popout\" text=\"Read the article…\" />\n                      </span>\n                    </MentionHd>\n                    <MentionBd>\n                      {html ? (\n                        <Copy dangerouslySetInnerHTML={{ __html: html }} />\n                      ) : null}\n                      {/* eslint-disable-next-line no-irregular-whitespace */}\n                      <p>by {publication}</p>\n                    </MentionBd>\n                  </Tile>\n                </Mention>\n              );\n            })}\n          </MentionsList>\n        </Body>\n      </Layout>\n    </>\n  );\n};\n\nexport default MediaTpl;\n\nexport const pageQuery = graphql`\n  query MediaTpl($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n      }\n    }\n    mentions: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"//pages/fame/.*mention.md/\" } }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            date(formatString: \"MMMM YYYY\")\n            title\n            cover {\n              childImageSharp {\n                gatsbyImageData(\n                  height: 240\n                  quality: 100\n                  placeholder: DOMINANT_COLOR\n                  layout: FULL_WIDTH\n                )\n              }\n            }\n            link\n            highlight\n            publication\n            source\n            uid\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { scatteredBif1, scatteredBif2, scatteredBif3 } from \"assets/images\";\nimport { color, font } from \"ui/settings\";\nimport { setType } from \"ui/mixins\";\n\nconst Sample = styled.div`\n  font-family: ${font.sans};\n  overflow: hidden;\n  position: relative;\n  h1,\n  p,\n  span {\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n    max-width: 1000px;\n  }\n  .PlxEl {\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    bottom: 0;\n    left: 0;\n    position: absolute;\n    right: 0;\n    top: 0;\n  }\n  .PlxEl1 {\n    background-image: url(${scatteredBif1});\n  }\n  .PlxEl2 {\n    background-image: url(${scatteredBif2});\n  }\n  .PlxEl3 {\n    background-image: url(${scatteredBif3});\n  }\n  h1 {\n    ${setType(\"h\")};\n    font-weight: 800;\n    font-style: italic;\n  }\n  span {\n    position: relative;\n    z-index: 100;\n    ${setType(\"s\")};\n  }\n  p {\n    ${setType(\"m\")};\n  }\n`;\n\nconst Playground = () => {\n  const { hexArray } = color;\n  return (\n    <>\n      {hexArray.map((color, i) => (\n        <Sample\n          key={i}\n          style={{\n            background: color,\n            color: \"white\",\n            padding: \"100px\",\n            fontWeight: \"bold\",\n          }}\n        >\n          <div className=\"PlxEl PlxEl1\" />\n          <div className=\"PlxEl PlxEl2\" />\n          <div className=\"PlxEl PlxEl3\" />\n          <span>{color}</span>\n          <h1>\n            Bad Idea Factory is a collective of chaotic creatives using\n            technology to make people thinking face emoji. We have been working\n            in this space for hundreds of thousands of years.\n          </h1>\n          <p>\n            Bad Idea Factory is a collective of chaotic creatives using\n            technology to make people thinking face emoji. We have been working\n            in this space for hundreds of thousands of years.\n          </p>\n        </Sample>\n      ))}\n    </>\n  );\n};\n\nexport default Playground;\n","import React from \"react\";\n\nimport { Playground } from \"ui/templates\";\n\nconst PlaygroundPage: React.FC = (props) => {\n  return <Playground {...props} />\n}\n\nexport default PlaygroundPage;\n","import React from \"react\";\nimport { graphql, Link, type PageProps } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport styled from \"styled-components\";\n\nimport { Icon, Tile } from \"ui/components\";\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst Projects = styled.ol`\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 40px;\n    grid-template-columns: repeat(auto-fill, minmax(340px, 1fr));\n    margin-left: auto;\n    margin-right: auto;\n  }\n  ${breakpoint.desktopUp} {\n    grid-template-columns: repeat(auto-fill, minmax(380px, 1fr));\n  }\n`;\n\nconst Flag = styled.span`\n  ${setType(\"x\")};\n  ${setSpace(\"mlx\")};\n  color: ${({ theme }) => theme.dimmedColor};\n  font-weight: 800;\n  text-transform: uppercase;\n`;\n\nconst Project = styled.li`\n  grid-row-end: span 1;\n  ${breakpoint.phone} {\n    ${setSpace(\"mbl\")};\n  }\n  ${breakpoint.tabletUp} {\n    &:nth-child(even) {\n      transform: translateY(30px);\n    }\n  }\n`;\n\ninterface ProjectCoverProps {\n  readonly $hasPlaceholder: boolean;\n}\n\nconst ProjectCover = styled.div<ProjectCoverProps>`\n  ${setSpace(\"mbm\")};\n  border: 2px solid ${({ theme }) => theme.actionColor};\n  position: relative;\n  ${({ $hasPlaceholder, theme }) =>\n    $hasPlaceholder\n      ? `\n  .thinking {\n    color: ${theme.actionColor};\n    display: inline-block;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    i {\n      font-size: 80px !important;\n    }\n  }`\n      : ``};\n`;\n\nconst ProjectHd = styled.div`\n  ${setSpace(\"mbm\")};\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  span {\n    font-weight: 800;\n    text-transform: uppercase;\n  }\n  span.code {\n    align-items: center;\n    color: ${({ theme }) => theme.titleColor};\n    display: flex;\n  }\n  span.date {\n    color: ${({ theme }) => theme.dimmedColor};\n  }\n`;\n\nconst ProjectBd = styled.div`\n  align-items: flex-start;\n  display: flex;\n  justify-content: space-between;\n  h2,\n  span {\n    ${setType(\"l\")};\n    color: ${({ theme }) => theme.actionColor};\n    font-weight: 800;\n    text-transform: uppercase;\n  }\n  h2 {\n    max-width: 75%;\n  }\n  span {\n    display: none;\n  }\n  ${breakpoint.desktopUp} {\n    span {\n      display: inline-block;\n    }\n  }\n`;\n\nconst ProjectFt = styled.div`\n  color: ${({ theme }) => theme.titleColor};\n  p.summary {\n    ${setSpace(\"mts\")};\n  }\n`;\n\nconst ProjectListingTpl = (props: PageProps<Queries.ProjectsTplQuery>) => {\n  const { defaultCover, projects, markdownRemark } = props.data;\n  const genericCover = defaultCover.edges[0].node.childImageSharp;\n  const { frontmatter } = markdownRemark ?? {};\n\n  return (\n    <>\n      <Helmet {...props} title={frontmatter?.title ?? \"\"} />\n      <Layout {...props}>\n        <Header>\n          <h1 className=\"hero\">{frontmatter?.heading}</h1>\n          <p className=\"para\">{frontmatter?.subheading}</p>\n        </Header>\n        <Body>\n          <Projects>\n            {projects.edges.map(({ node }) => {\n              const { active, cover, date, code, tagline, title, uid } =\n                node.frontmatter ?? {};\n\n              return (\n                <Project key={uid} as=\"li\">\n                  <Tile as={Link} to={`/projects/${uid}`}>\n                    <ProjectHd>\n                      <span className=\"code\">\n                        {code} {!active ? <Flag>(Hibernated)</Flag> : null}\n                      </span>\n                      <span className=\"date\">{date}</span>\n                    </ProjectHd>\n                    <ProjectCover $hasPlaceholder={!cover}>\n                      <GatsbyImage\n                        image={\n                          cover?.childImageSharp?.gatsbyImageData\n                            ? cover.childImageSharp.gatsbyImageData\n                            : genericCover!.gatsbyImageData\n                        }\n                        alt={title ?? \"\"}\n                      />\n                      {!cover ? (\n                        <span className=\"thinking\">\n                          <Icon name=\"thinking\" size=\"h\" />\n                        </span>\n                      ) : null}\n                    </ProjectCover>\n                    <ProjectBd>\n                      <h2 className=\"title\">{title}</h2>\n                      <span>\n                        <Icon name=\"arrow-right\" text=\"Read more…\" />\n                      </span>\n                    </ProjectBd>\n                    <ProjectFt>\n                      <p className=\"summary\">{tagline}</p>\n                    </ProjectFt>\n                  </Tile>\n                </Project>\n              );\n            })}\n          </Projects>\n        </Body>\n      </Layout>\n    </>\n  );\n};\n\nexport default ProjectListingTpl;\n\nexport const pageQuery = graphql`\n  query ProjectsTpl($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n      }\n    }\n    defaultCover: allFile(\n      filter: { relativePath: { eq: \"images/default-cover.png\" } }\n    ) {\n      edges {\n        node {\n          childImageSharp {\n            gatsbyImageData(\n              width: 600\n              quality: 90\n              placeholder: DOMINANT_COLOR\n              layout: CONSTRAINED\n            )\n          }\n        }\n      }\n    }\n    projects: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/pages/projects/.*project.md/\" } }\n      sort: [{ frontmatter: { score: DESC } }, { frontmatter: { date: ASC } }]\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            uid\n            date(formatString: \"MMM YYYY\")\n            title\n            active\n            tagline\n            code\n            cover {\n              childImageSharp {\n                gatsbyImageData(\n                  width: 600\n                  quality: 90\n                  placeholder: DOMINANT_COLOR\n                  layout: CONSTRAINED\n                )\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport styled from \"styled-components\";\n\nimport { Action, Icon } from \"ui/components\";\nimport { breakpoint, time } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst Person = styled.li`\n  align-items: center;\n  background: white;\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  transition: box-shadow ${time.s}, transform ${time.s};\n  &:hover {\n    box-shadow: 6px 6px 0 0 ${({ theme }) => theme.actionDecor};\n    transform: translate(-1px, -1px);\n  }\n  ${breakpoint.tabletUp} {\n    ${setSpace(\"pan\")};\n    );\n  }\n`;\n\ninterface PersonPicProps {\n  readonly $hasAvatar: boolean;\n}\n\nconst PersonPic = styled.div<PersonPicProps>`\n  background: ${({ theme, $hasAvatar }) =>\n    $hasAvatar ? \"\" : theme.actionColor};\n  border: 2px solid ${({ theme }) => theme.background};\n  flex: 0 0 ${100 / 3}%;\n`;\n\nconst PersonDetails = styled.div`\n  ${setSpace(\"phm\")};\n  ${setType(\"s\")};\n  ${breakpoint.phone} {\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n  }\n`;\n\nconst PersonName = styled.h3`\n  ${setType(\"s\")};\n  color: ${({ theme }) => theme.color};\n  span {\n    display: block;\n    &:first-child {\n      ${setType(\"m\")};\n      color: ${({ theme }) => theme.actionColor};\n      font-weight: 800;\n    }\n  }\n`;\n\nconst PersonLinks = styled.div`\n  ${setSpace(\"mts\")};\n  & > * {\n    ${setSpace(\"mrs\")};\n    line-height: 1em;\n  }\n  ${breakpoint.phone} {\n    display: none;\n  }\n`;\n\ninterface MemberProps {\n  data: PersonNode;\n  defaultAvatar: any;\n}\n\nfunction Member(props: MemberProps) {\n  const { defaultAvatar } = props;\n  const { frontmatter } = props.data;\n  const {\n    uid,\n    avatar,\n    bluesky,\n    fname,\n    github,\n    lname,\n    mastodon,\n    twitter,\n    website,\n  } = frontmatter ?? {};\n\n  return (\n    <Link to={`/people/${uid}`}>\n      <Person>\n        <PersonPic $hasAvatar={avatar ? true : false}>\n          <GatsbyImage\n            image={\n              avatar?.childImageSharp?.gatsbyImageData\n                ? avatar.childImageSharp.gatsbyImageData\n                : defaultAvatar.gatsbyImageData\n            }\n            alt=\"\"\n          />\n        </PersonPic>\n        <PersonDetails>\n          <PersonName>\n            <span>{fname}</span> <span>{lname}</span>\n          </PersonName>\n          <PersonLinks>\n            {website ? (\n              <Action\n                onClick={(e: React.MouseEvent) => e.stopPropagation()}\n                href={`https://${website}/`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"website\" size=\"s\" />\n              </Action>\n            ) : null}\n            {bluesky ? (\n              <Action\n                onClick={(e: React.MouseEvent) => e.stopPropagation()}\n                href={`https://bsky.app/profile/${bluesky}`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"bluesky\" size=\"s\" />\n              </Action>\n            ) : null}\n            {mastodon ? (\n              <Action\n                onClick={(e: React.MouseEvent) => e.stopPropagation()}\n                href={`https://${mastodon}`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"mastodon\" size=\"s\" />\n              </Action>\n            ) : null}\n            {twitter ? (\n              <Action\n                onClick={(e: React.MouseEvent) => e.stopPropagation()}\n                href={`https://twitter.com/${twitter}`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"twitter\" size=\"s\" />\n              </Action>\n            ) : null}\n            {github ? (\n              <Action\n                onClick={(e: React.MouseEvent) => e.stopPropagation()}\n                href={`https://github.com/${github}`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"github\" size=\"s\" />\n              </Action>\n            ) : null}\n          </PersonLinks>\n        </PersonDetails>\n      </Person>\n    </Link>\n  );\n}\n\nexport default Member;\n","import React from \"react\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport styled from \"styled-components\";\n\nimport { Action, Copy, Icon, Modal } from \"ui/components\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst Person = styled.div`\n  ${setSpace(\"pbh\")};\n  ${breakpoint.tabletUp} {\n    display: flex;\n    flex-direction: row;\n  }\n`;\n\ninterface PersonPicProps {\n  readonly $hasAvatar: boolean;\n}\n\nconst PersonPic = styled.div<PersonPicProps>`\n  background: ${({ $hasAvatar, theme }) =>\n    !$hasAvatar ? theme.actionColor : \"\"};\n  ${breakpoint.tabletUp} {\n    flex: 0 0 ${100 / 4}%;\n  }\n  ${breakpoint.phone} {\n    ${setSpace(\"mbl\")};\n    & > * {\n      margin-left: auto;\n      margin-right: auto;\n      max-width: 200px;\n    }\n  }\n`;\nconst PersonDetails = styled.div`\n  ${setType(\"s\")};\n  ${breakpoint.tabletUp} {\n    ${setSpace(\"pll\")};\n  }\n`;\nconst PersonName = styled.h2`\n  ${setType(\"l\")};\n  font-weight: 800;\n  color: ${({ theme }) => theme.titleColor};\n`;\nconst PersonBio = styled.div`\n  ${setSpace(\"mvm\")};\n  ${setType(\"m\")};\n  color: ${({ theme }) => theme.titleColor};\n`;\nconst PersonQuote = styled.div`\n  ${setSpace(\"mvm\")};\n`;\nconst PersonSocial = styled.div`\n  & > * {\n    ${setSpace(\"mvx\")};\n  }\n  & > *:not(:last-child) {\n    ${setSpace(\"mrl\")};\n  }\n`;\n\ninterface PersonModalProps {\n  defaultAvatar: NonNullable<\n    Queries.PeopleTplQuery[\"defaultAvatar\"][\"edges\"][0][\"node\"][\"childImageSharp\"]\n  >;\n  data: PersonNode;\n  toggleModal: (obj: PersonNode) => void;\n}\n\nconst PersonModal: React.FC<PersonModalProps> = ({\n  defaultAvatar,\n  data,\n  toggleModal,\n}) => {\n  const { frontmatter, html } = data ?? {};\n  const {\n    avatar,\n    bluesky,\n    fname,\n    github,\n    lname,\n    mastodon,\n    quote,\n    twitter,\n    website,\n  } = frontmatter ?? {};\n\n  return (\n    <Modal toggleModal={toggleModal as VoidFunction}>\n      <Person>\n        <PersonPic $hasAvatar={avatar ? true : false}>\n          <GatsbyImage\n            image={\n              avatar?.childImageSharp?.gatsbyImageData\n                ? avatar.childImageSharp.gatsbyImageData\n                : defaultAvatar.gatsbyImageData\n            }\n            alt=\"\"\n          />\n        </PersonPic>\n        <PersonDetails>\n          <PersonName>\n            {fname} {lname}\n          </PersonName>\n          <PersonBio>\n            <Copy dangerouslySetInnerHTML={{ __html: html ?? \"\" }} />\n          </PersonBio>\n          <PersonQuote>{quote}</PersonQuote>\n          <PersonSocial>\n            {website && (\n              <Action\n                href={`https://${website}/`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"website\" /> Website\n              </Action>\n            )}\n            {bluesky && (\n              <Action\n                href={`https://bsky.app/profile/${bluesky}`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"bluesky\" /> Bluesky\n              </Action>\n            )}\n            {mastodon && (\n              <Action\n                href={`https://${mastodon}`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"mastodon\" /> Mastodon\n              </Action>\n            )}\n            {twitter && (\n              <Action\n                href={`https://twitter.com/${twitter}`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"twitter\" /> Twitter\n              </Action>\n            )}\n            {github && (\n              <Action\n                href={`https://github.com/${github}`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"github\" /> GitHub\n              </Action>\n            )}\n          </PersonSocial>\n        </PersonDetails>\n      </Person>\n    </Modal>\n  );\n};\n\nexport default PersonModal;\n","import React, { useState } from \"react\";\nimport { graphql, navigate, type PageProps } from \"gatsby\";\nimport styled from \"styled-components\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { breakpoint, time, track } from \"ui/settings\";\nimport { fadeIn } from \"ui/animations\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport Person from \"./ofPeople/Person\";\nimport PersonModal from \"./ofPeople/PersonModal\";\n\nconst PeopleSection = styled.section`\n  ${setSpace(\"mbk\")};\n`;\n\nconst People = styled.ul`\n  animation: ${fadeIn} ${time.l} linear;\n  width: 100%;\n  display: grid;\n  grid-gap: 10px;\n  ${breakpoint.phone} {\n    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n  }\n  ${breakpoint.tabletUp} {\n    grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));\n  }\n`;\n\nconst PeopleIntro = styled.div`\n  ${setSpace(\"mbh\")};\n  text-align: center;\n  h2 {\n    ${setSpace(\"mbm\")};\n    ${setSpace(\"phs\")};\n    ${setSpace(\"pvx\")};\n    ${setType(\"s\")};\n    background: white;\n    color: ${({ theme }) => theme.actionColor};\n    display: inline-block;\n    font-weight: 800;\n    letter-spacing: ${track.m};\n    text-transform: uppercase;\n  }\n  p {\n    ${setType(\"l\")};\n    color: white;\n  }\n`;\n\nconst PeopleTpl = (props: PageProps<Queries.PeopleTplQuery>) => {\n  const { defaultAvatar, overlords, members, accomplices, all } = props.data;\n  const { frontmatter } = props.data.markdownRemark ?? {};\n  const genericAvatar = defaultAvatar.edges[0].node.childImageSharp;\n\n  // For routing to a specific person\n  let personObj\n  if (typeof window !== \"undefined\") {\n    const personId = window.location.pathname\n      .replace(\"/people/\", \"\")\n      .replace(\"/\", \"\");\n    personObj = all.edges.find(\n      ({ node }: { node: PersonNode }) => node.frontmatter?.uid === personId\n    )?.node;\n  }\n\n  const [currentPerson, setCurrentPerson] = useState<PersonNode | null>(\n    personObj ?? null\n  );\n\n  // from the <Modal /> component when it closes force a navigation back to\n  // parent page\n  function closeModal() {\n    navigate(\"/people\");\n  }\n\n  return (\n    <>\n      <Helmet {...props} title={frontmatter?.title ?? \"\"} />\n      <Layout {...props}>\n        <Header>\n          <h1 className=\"hero\">{frontmatter?.heading}</h1>\n          <p className=\"para\">{frontmatter?.subheading}</p>\n        </Header>\n        <Body>\n          <PeopleSection>\n            <PeopleIntro>\n              <h2>{frontmatter?.overlordsHeading}</h2>\n              <p>{frontmatter?.overlordsDescr}</p>\n            </PeopleIntro>\n            <People>\n              {overlords.edges.map(({ node }: { node: PersonNode }) => (\n                <Person\n                  data={node}\n                  defaultAvatar={genericAvatar}\n                  key={node.frontmatter?.uid}\n                />\n              ))}\n            </People>\n          </PeopleSection>\n          <PeopleIntro>\n            <h2>{frontmatter?.membersHeading}</h2>\n            <p>{frontmatter?.membersDescr}</p>\n          </PeopleIntro>\n          <PeopleSection>\n            <People>\n              {members.edges.map(({ node }: { node: PersonNode }) => (\n                <Person\n                  data={node}\n                  defaultAvatar={genericAvatar}\n                  key={node.frontmatter?.uid}\n                />\n              ))}\n            </People>\n          </PeopleSection>\n          <PeopleSection>\n            <PeopleIntro>\n              <h2>{frontmatter?.accomplicesHeading}</h2>\n              <p>{frontmatter?.accomplicesDescr}</p>\n            </PeopleIntro>\n            <People>\n              {accomplices.edges.map(({ node }: { node: PersonNode }) => (\n                <Person\n                  data={node}\n                  defaultAvatar={genericAvatar}\n                  key={node.frontmatter?.uid}\n                />\n              ))}\n            </People>\n          </PeopleSection>\n        </Body>\n        {currentPerson !== null ? (\n          <PersonModal\n            toggleModal={closeModal}\n            data={currentPerson}\n            defaultAvatar={genericAvatar!}\n          />\n        ) : null}\n      </Layout>\n    </>\n  );\n};\n\nexport default PeopleTpl;\n\nexport const pageQuery = graphql`\n  query PeopleTpl($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n        accomplicesHeading\n        accomplicesDescr\n        membersHeading\n        membersDescr\n        overlordsHeading\n        overlordsDescr\n      }\n    }\n    defaultAvatar: allFile(\n      filter: { relativePath: { eq: \"images/default-avatar.png\" } }\n    ) {\n      edges {\n        node {\n          childImageSharp {\n            gatsbyImageData(\n              width: 240\n              height: 300\n              quality: 90\n              placeholder: DOMINANT_COLOR\n              layout: CONSTRAINED\n            )\n          }\n        }\n      }\n    }\n    overlords: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//pages/people/bios/*/.*/*.md/\" }\n        frontmatter: { role: { elemMatch: { overlord: { eq: true } } } }\n      }\n      sort: { frontmatter: { fname: ASC } }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            bluesky\n            fname\n            github\n            lname\n            mastodon\n            quote\n            score\n            twitter\n            website\n            uid\n            avatar {\n              childImageSharp {\n                gatsbyImageData(\n                  width: 240\n                  height: 300\n                  placeholder: DOMINANT_COLOR\n                  transformOptions: { cropFocus: CENTER }\n                  layout: CONSTRAINED\n                )\n              }\n            }\n          }\n        }\n      }\n    }\n    members: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//pages/people/bios/*/.*/*.md/\" }\n        frontmatter: { role: { elemMatch: { member: { eq: true } } } }\n      }\n      sort: { frontmatter: { fname: ASC } }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            bluesky\n            fname\n            github\n            lname\n            mastodon\n            quote\n            score\n            twitter\n            website\n            uid\n            avatar {\n              childImageSharp {\n                gatsbyImageData(\n                  width: 240\n                  height: 300\n                  placeholder: DOMINANT_COLOR\n                  transformOptions: { cropFocus: CENTER }\n                  layout: CONSTRAINED\n                )\n              }\n            }\n          }\n        }\n      }\n    }\n    accomplices: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//pages/people/bios/*/.*/*.md/\" }\n        frontmatter: { role: { elemMatch: { accomplice: { eq: true } } } }\n      }\n      sort: { frontmatter: { fname: ASC } }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            bluesky\n            fname\n            github\n            lname\n            mastodon\n            quote\n            score\n            twitter\n            website\n            uid\n            avatar {\n              childImageSharp {\n                gatsbyImageData(\n                  width: 240\n                  height: 300\n                  placeholder: DOMINANT_COLOR\n                  transformOptions: { cropFocus: CENTER }\n                  layout: CONSTRAINED\n                )\n              }\n            }\n          }\n        }\n      }\n    }\n    all: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"//pages/people/bios/*/.*/*.md/\" } }\n      sort: { frontmatter: { fname: ASC } }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            bluesky\n            fname\n            github\n            lname\n            mastodon\n            quote\n            score\n            twitter\n            website\n            uid\n            avatar {\n              childImageSharp {\n                gatsbyImageData(\n                  width: 240\n                  height: 300\n                  placeholder: DOMINANT_COLOR\n                  transformOptions: { cropFocus: CENTER }\n                  layout: CONSTRAINED\n                )\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nimport { setSpace } from \"ui/mixins\";\n\nconst Section = styled.div`\n  ${setSpace(\"mvk\")};\n  display: flex;\n  justify-content: center;\n  .el {\n    width: 100%;\n  }\n  &:not(:last-child) {\n    ${setSpace(\"pbk\")};\n  }\n`;\n\nexport default Section;\n","import React from \"react\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport styled from \"styled-components\";\n\nimport { Tile } from \"ui/components\";\nimport { Header } from \"ui/partials\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport Section from \"./Section\";\n\nconst Element = styled(Section)``;\nconst Title = styled.h1`\n  &.hero {\n    ${setType(\"h\")};\n  }\n`;\nconst Items = styled.ul`\n  width: 100%;\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n    & > * {\n      grid-row-end: span 1;\n    }\n  }\n`;\nconst Item = styled.li`\n  ${breakpoint.phone} {\n    &:not(:last-child) {\n      ${setSpace(\"mbx\")};\n    }\n  }\n`;\nconst ItemTitle = styled.h3`\n  ${setSpace(\"mbm\")};\n`;\nconst ItemText = styled.div`\n  color: ${({ theme }) => theme.color};\n  strong {\n    font-weight: 600;\n  }\n`;\n\ninterface ClientsProps {\n  clients: Queries.HomeTplQuery[\"clients\"][\"edges\"];\n  subtitle: string;\n  title: string;\n}\n\nfunction Clients(props: ClientsProps) {\n  const { clients, title, subtitle } = props;\n\n  return (\n    <Element as=\"section\">\n      <div className=\"el\">\n        <Header className=\"hd\">\n          <Title className=\"hero\">{title}</Title>\n          {subtitle ? <p className=\"para\">{subtitle}</p> : null}\n        </Header>\n        <Items>\n          {clients.map(({ node }) => {\n            const client = node.frontmatter;\n            return (\n              <Item key={node.id}>\n                <Tile href={client.link} target=\"_blank\" as=\"a\">\n                  <ItemTitle>\n                    <GatsbyImage\n                      image={client.logo.childImageSharp.gatsbyImageData}\n                      alt={client?.name ?? \"\"}\n                    />\n                  </ItemTitle>\n                  <ItemText\n                    dangerouslySetInnerHTML={{ __html: node.html ?? \"\" }}\n                  />\n                </Tile>\n              </Item>\n            );\n          })}\n        </Items>\n      </div>\n    </Element>\n  );\n}\n\nexport default Clients;\n","import { Link } from \"gatsby\";\nimport { GatsbyImage, type IGatsbyImageData } from \"gatsby-plugin-image\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { breakpoint } from \"ui/settings\";\nimport { Header } from \"ui/partials\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport { Tile, Icon } from \"ui/components\";\nimport Section from \"./Section\";\n\nconst Element = styled(Section)``;\nconst Title = styled.h1`\n  &.hero {\n    ${setType(\"h\")};\n  }\n`;\nconst Items = styled.ul`\n  width: 100%;\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fill, minmax(214px, 1fr));\n    margin-left: auto;\n    margin-right: auto;\n  }\n  ${breakpoint.desktopUp} {\n    grid-template-columns: repeat(auto-fill, minmax(291px, 1fr));\n  }\n`;\nconst Item = styled.li`\n  ${breakpoint.phone} {\n    &:not(:last-child) {\n      ${setSpace(\"mbx\")};\n    }\n  }\n`;\n\ninterface ItemImageProps {\n  readonly $hasPlaceholder: boolean;\n}\n\nconst ItemImage = styled.div<ItemImageProps>`\n  ${setSpace(\"mbm\")};\n  border: 2px solid ${({ theme }) => theme.actionColor};\n  position: relative;\n  ${({ $hasPlaceholder, theme }) =>\n    $hasPlaceholder\n      ? `\n    .thinking {\n      color: ${theme.actionColor};\n      display: inline-block;\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%);\n      i {\n        font-size: 80px !important;\n      }\n  `\n      : ``};\n`;\nconst ItemTitle = styled.div`\n  align-items: flex-start;\n  display: flex;\n  justify-content: space-between;\n  h3,\n  span {\n    ${setType(\"m\")};\n    color: ${({ theme }) => theme.actionColor};\n    font-weight: 800;\n    text-transform: uppercase;\n  }\n  h3 {\n    max-width: 75%;\n  }\n  span {\n    display: none;\n  }\n  ${breakpoint.desktopUp} {\n    span {\n      display: inline-block;\n    }\n  }\n`;\nconst ItemText = styled.p`\n  ${setSpace(\"mts\")};\n`;\n\ninterface ProjectsProps {\n  placeholder: IGatsbyImageData;\n  projects: ProjectList;\n  subtitle: string;\n  title: string;\n}\n\nfunction Projects(props: ProjectsProps) {\n  const { projects, title, subtitle } = props;\n  return (\n    <Element as=\"section\">\n      <div className=\"el\">\n        <Header className=\"hd\">\n          <Title className=\"hero\">{title}</Title>\n          {subtitle ? <p className=\"para\">{subtitle}</p> : null}\n        </Header>\n        <Items>\n          {projects.map(({ node }) => {\n            const project = node.frontmatter;\n\n            if (project === null) {\n              return null;\n            }\n\n            return (\n              <Item key={node.id}>\n                <Tile as={Link} to={`/projects/${project.uid}`}>\n                  <ItemImage $hasPlaceholder={!project.cover}>\n                    <GatsbyImage\n                      image={\n                        project.cover?.childImageSharp?.gatsbyImageData\n                          ? project.cover.childImageSharp.gatsbyImageData\n                          : props.placeholder\n                      }\n                      alt={project.title ?? \"\"}\n                    />\n                    {!project.cover ? (\n                      <span className=\"thinking\">\n                        <Icon name=\"thinking\" />\n                      </span>\n                    ) : null}\n                  </ItemImage>\n                  <ItemTitle>\n                    <h3 className=\"title\">{project.title}</h3>\n                    <span>\n                      <Icon name=\"arrow-right\" text=\"Read more…\" />\n                    </span>\n                  </ItemTitle>\n                  <ItemText>{project.tagline}</ItemText>\n                </Tile>\n              </Item>\n            );\n          })}\n        </Items>\n      </div>\n    </Element>\n  );\n}\n\nexport default Projects;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { breakpoint } from \"ui/settings\";\nimport { Header } from \"ui/partials\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport { Tile } from \"ui/components\";\nimport Section from \"./Section\";\n\nconst Element = styled(Section)``;\nconst Title = styled.h1`\n  &.hero {\n    ${setType(\"h\")};\n  }\n`;\nconst Items = styled.ul`\n  width: 100%;\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 10px;\n    grid-template-columns: repeat(auto-fill, minmax(330px, 1fr));\n    & > * {\n      grid-row-end: span 1;\n    }\n  }\n  ${breakpoint.desktopUp} {\n    grid-template-columns: repeat(auto-fill, minmax(221px, 1fr));\n  }\n`;\nconst Item = styled.li`\n  ${breakpoint.phone} {\n    &:not(:last-child) {\n      ${setSpace(\"mbx\")};\n    }\n  }\n`;\nconst ItemTitle = styled.h3`\n  ${setSpace(\"mbm\")};\n  ${setType(\"l\")};\n  font-weight: 800;\n`;\n\ninterface ServicesProps {\n  services: {\n    title: string;\n    text: string;\n  }[];\n  subtitle?: string;\n  title?: string;\n}\n\nfunction Services(props: ServicesProps) {\n  const { services, title, subtitle } = props;\n\n  return (\n    <Element as=\"section\">\n      <div className=\"el\">\n        <Header className=\"hd\">\n          <Title className=\"hero\">{title}</Title>\n          {subtitle ? <p className=\"para\">{subtitle}</p> : null}\n        </Header>\n        <Items>\n          {services.map((service, i) => (\n            <Item key={i}>\n              <Tile space=\"l\">\n                <ItemTitle className=\"TileTitle\">{service.title}</ItemTitle>\n                <p>{service.text}</p>\n              </Tile>\n            </Item>\n          ))}\n        </Items>\n      </div>\n    </Element>\n  );\n}\n\nexport default Services;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Tile } from \"ui/components\";\nimport { Header } from \"ui/partials\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport Section from \"./Section\";\n\nconst Element = styled(Section)``;\nconst Title = styled.h1`\n  &.hero {\n    ${setType(\"h\")};\n  }\n`;\nconst Items = styled.ul`\n  width: 100%;\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n    & > * {\n      grid-row-end: span 1;\n    }\n  }\n`;\n\ninterface ItemProp {\n  readonly $span: boolean\n}\n\nconst Item = styled.li<ItemProp>`\n  height: 100%;\n  .quote {\n    ${setSpace(\"mbs\")};\n    ${setSpace(\"pal\")};\n    position: relative;\n    &:after,\n    &:before {\n      color: ${({ theme }) => theme.background};\n      ${setType(\"k\")};\n      position: absolute;\n    }\n    &:before {\n      content: \"“\";\n      top: 0;\n      left: 0;\n    }\n    &:after {\n      content: \"”\";\n      bottom: 0;\n      right: 0;\n    }\n  }\n  .source {\n    ${setType(\"s\")};\n    text-align: right;\n  }\n  ${breakpoint.phone} {\n    &:not(:last-child) {\n      ${setSpace(\"mbx\")};\n    }\n  }\n  ${({ $span }) =>\n    $span ? `\n    grid-column: 1 / span 2;\n    grid-row: 1 / 2;\n    justify-self: stretch;\n    align-self: stretch;\n  `\n      : ``};\n`;\n\ninterface TestimonialsProps {\n  testimonials: {\n    source: string;\n    text: string;\n    span: boolean;\n  }[];\n  subtitle?: string;\n  title?: string;\n}\n\nfunction Testimonials(props: TestimonialsProps) {\n  const { testimonials, title, subtitle } = props;\n\n  return (\n    <Element as=\"section\">\n      <div className=\"el\">\n        <Header className=\"hd\">\n          <Title className=\"hero\">{title}</Title>\n          {subtitle ? <p className=\"para\">{subtitle}</p> : null}\n        </Header>\n        <Items>\n          {testimonials.map((testimonial, i) => (\n            <Item key={i} $span={testimonial.span}>\n              <Tile>\n                <blockquote className=\"quote\">\n                  <p>{testimonial.text}</p>\n                </blockquote>\n                <p className=\"source\">— {testimonial.source}</p>\n              </Tile>\n            </Item>\n          ))}\n        </Items>\n      </div>\n    </Element>\n  );\n}\n\nexport default Testimonials;\n","import React from \"react\";\nimport { graphql, type PageProps } from \"gatsby\";\n\nimport { Action, Actionbar } from \"ui/components\";\nimport { Helmet, Layout, Pitch } from \"ui/partials\";\n\nimport Clients from \"./ofHome/Clients\";\nimport Projects from \"./ofHome/Projects\";\nimport Services from \"./ofHome/Services\";\nimport Testimonials from \"./ofHome/Testimonials\";\n\nconst HomeTpl = (props: PageProps<Queries.HomeTplQuery>) => {\n  const { frontmatter } = props.data.markdownRemark ?? {};\n  const { clients, projects, defaultCover } = props.data;\n  const genericCover = defaultCover.edges[0].node.childImageSharp;\n\n  return (\n    <>\n      <Helmet {...props} title={frontmatter?.title ?? \"\"} />\n      <Layout {...props}>\n        <Pitch>\n          <h1 className=\"hero\">{frontmatter?.heading}</h1>\n          <Actionbar>\n            <Action\n              button\n              href=\"https://github.com/BadIdeaFactory/corporate/issues?q=is%3Aissue+is%3Aopen+label%3A%22project+application%22\"\n              target=\"_blank\"\n            >\n              Submit an idea\n            </Action>\n            <Action href=\"https://patreon.com/biffud\" target=\"_blank\">\n              Give us money\n            </Action>\n            <span className=\"join\">or</span>\n            <Action to=\"contact\">Engage our services</Action>\n          </Actionbar>\n        </Pitch>\n        <Projects\n          placeholder={genericCover?.gatsbyImageData}\n          projects={projects.edges}\n          subtitle={frontmatter?.projectsSubtitle}\n          title={frontmatter?.projectsTitle}\n        />\n        <Clients\n          title={frontmatter?.clientsTitle ?? \"\"}\n          subtitle={frontmatter?.clientsSubtitle ?? \"\"}\n          clients={clients.edges}\n        />\n        <Services\n          title={frontmatter?.servicesTitle}\n          subtitle={frontmatter?.servicesSubtitle}\n          services={frontmatter?.services}\n        />\n        <Services\n          title={frontmatter?.goodatTitle}\n          subtitle={frontmatter?.goodatSubtitle}\n          services={frontmatter?.goodat}\n        />\n        <Testimonials\n          title={frontmatter?.testimonialsTitle}\n          subtitle={frontmatter?.testimonialsSubtitle}\n          testimonials={frontmatter?.testimonials}\n        />\n      </Layout>\n    </>\n  );\n};\n\nexport default HomeTpl;\n\nexport const pageQuery = graphql`\n  query HomeTpl($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        contactCta\n        projectsCta\n        servicesTitle\n        servicesSubtitle\n        services {\n          title\n          text\n        }\n        testimonialsTitle\n        testimonialsSubtitle\n        testimonials {\n          text\n          source\n          span\n        }\n        goodatTitle\n        goodatSubtitle\n        goodat {\n          title\n          text\n        }\n        clientsSubtitle\n        clientsTitle\n        projectsSubtitle\n        projectsTitle\n      }\n    }\n    defaultCover: allFile(\n      filter: { relativePath: { eq: \"images/default-cover.png\" } }\n    ) {\n      edges {\n        node {\n          childImageSharp {\n            gatsbyImageData(\n              width: 800\n              height: 600\n              quality: 90\n              placeholder: DOMINANT_COLOR\n              transformOptions: { cropFocus: CENTER }\n              layout: CONSTRAINED\n            )\n          }\n        }\n      }\n    }\n    clients: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/pages/clients/.*client.md/\" } }\n      sort: { frontmatter: { score: DESC } }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            uid\n            name\n            score\n            link\n            logo {\n              childImageSharp {\n                gatsbyImageData(\n                  height: 40\n                  quality: 80\n                  placeholder: DOMINANT_COLOR\n                  layout: FIXED\n                )\n              }\n            }\n          }\n        }\n      }\n    }\n    projects: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/pages/projects/.*project.md/\" } }\n      limit: 3\n      sort: [\n        { frontmatter: { feature: DESC } }\n        { frontmatter: { score: ASC } }\n        { frontmatter: { date: ASC } }\n      ]\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            uid\n            title\n            active\n            feature\n            tagline\n            code\n            cover {\n              childImageSharp {\n                gatsbyImageData(\n                  width: 800\n                  height: 600\n                  quality: 90\n                  placeholder: DOMINANT_COLOR\n                  transformOptions: { cropFocus: CENTER }\n                  layout: CONSTRAINED\n                )\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { graphql, type PageProps } from \"gatsby\";\n\nimport { Actionbar, Action, Copy, Tile } from \"ui/components\";\nimport { Body, Pitch, Helmet, Layout } from \"ui/partials\";\n\nconst LandingTpl = (props: PageProps<Queries.LandingTplQuery>) => {\n  const { frontmatter, html } = props.data.markdownRemark ?? {};\n\n  return (\n    <>\n      <Helmet {...props} title={frontmatter?.title ?? \"\"} />\n      <Layout {...props}>\n        <Pitch>\n          <h1 className=\"hero\">{frontmatter?.heading}</h1>\n          <Actionbar>\n            <Action button to=\"/projects\">\n              {frontmatter?.projectsCta}\n            </Action>\n            <Action to=\"/contact\">{frontmatter?.contactCta}</Action>\n          </Actionbar>\n        </Pitch>\n        <Body\n          style={{\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            maxWidth: \"900px\",\n          }}\n        >\n          <Tile space=\"h\">\n            <Copy dangerouslySetInnerHTML={{ __html: html ?? \"\" }} />\n          </Tile>\n        </Body>\n      </Layout>\n    </>\n  );\n};\n\nexport default LandingTpl;\n\nexport const pageQuery = graphql`\n  query LandingTpl($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n        contactCta\n        projectsCta\n      }\n    }\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { graphql, type PageProps } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Copy, Tile } from \"ui/components\";\n\nconst BlogPostReadTimer = () => {\n  const [readingTime, setReadingTime] = useState<number>(Math.random() * 300);\n\n  function tick() {\n    setReadingTime((previous) => previous + Math.random() * 15 - 4);\n  }\n\n  useEffect(() => {\n    let timer: number;\n    if (typeof window !== \"undefined\") {\n      timer = window.setInterval(tick, 3000);\n    }\n\n    return () => {\n      if (typeof window !== \"undefined\") {\n        window.clearInterval(timer);\n      }\n    };\n  }, []);\n\n  return <span>{readingTime.toFixed(2)}</span>;\n};\n\nconst BlogPostTpl = ({\n  data,\n  ...props\n}: PageProps<Queries.BlogPostsByUIDQuery>) => {\n  const blogPost = data.markdownRemark;\n  const { frontmatter, html } = blogPost ?? {};\n  const { cover, date, title } = frontmatter ?? {};\n\n  return (\n    <>\n      <Helmet {...props} title={title ?? \"\"} />\n      <Layout {...props}>\n        <Header>\n          <span className=\"small\">\n            Reading Time: <BlogPostReadTimer /> seconds\n          </span>\n          <h1 className=\"hero\">{title}</h1>\n          <span className=\"small\">{date}</span>\n        </Header>\n        <Body\n          style={{\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            maxWidth: \"900px\",\n          }}\n        >\n          {cover?.childImageSharp?.gatsbyImageData ? (\n            <GatsbyImage\n              image={cover.childImageSharp.gatsbyImageData}\n              alt={title ?? \"\"}\n            />\n          ) : null}\n          <Tile space=\"h\">\n            <Copy dangerouslySetInnerHTML={{ __html: html ?? \"\" }} />\n          </Tile>\n        </Body>\n      </Layout>\n    </>\n  );\n};\n\nexport default BlogPostTpl;\n\nexport const pageQuery = graphql`\n  query BlogPostsByUID($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        cover {\n          childImageSharp {\n            gatsbyImageData(\n              width: 900\n              quality: 90\n              placeholder: DOMINANT_COLOR\n              layout: CONSTRAINED\n            )\n          }\n        }\n      }\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport { graphql, type PageProps } from \"gatsby\";\nimport styled from \"styled-components\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Copy, Tabs, Tab, Tile } from \"ui/components\";\nimport { setSpace } from \"ui/mixins\";\n\ninterface QuestionsProps {\n  readonly $isActive: boolean;\n}\n\nconst Questions = styled(Tile)<QuestionsProps>`\n  ${setSpace(\"pah\")};\n  display: ${({ $isActive }) => ($isActive ? \"block\" : \"none\")};\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 900px;\n`;\n\ntype TabState = \"partnership\" | \"membership\";\n\nconst FAQListingTpl = (props: PageProps<Queries.FAQListingTplQuery>) => {\n  const [tab, setTab] = useState<TabState>(\"partnership\");\n\n  function switchTab(tab: TabState) {\n    setTab(tab);\n  }\n\n  const { frontmatter } = props.data.markdownRemark ?? {};\n  const membershipQuestions = props.data.membership.edges[0].node.html ?? \"\";\n  const partnershipQuestions = props.data.partnership.edges[0].node.html ?? \"\";\n\n  return (\n    <>\n      <Helmet {...props} title=\"Frequently Asked Questions\" />\n      <Layout {...props}>\n        <Header>\n          <h1 className=\"hero\">{frontmatter?.heading ?? \"\"}</h1>\n          <p className=\"para\">{frontmatter?.subheading ?? \"\"}</p>\n        </Header>\n        <Body\n          style={{\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            maxWidth: \"900px\",\n          }}\n        >\n          <Tabs count={2}>\n            <Tab\n              handleClick={() => switchTab(\"partnership\")}\n              isActive={tab === \"partnership\"}\n            >\n              {frontmatter?.partnershipTab ?? \"\"}\n            </Tab>\n            <Tab\n              handleClick={() => switchTab(\"membership\")}\n              isActive={tab === \"membership\"}\n            >\n              {frontmatter?.membershipTab ?? \"\"}\n            </Tab>\n          </Tabs>\n          <Questions $isActive={tab === \"partnership\"}>\n            <Copy dangerouslySetInnerHTML={{ __html: partnershipQuestions }} />\n          </Questions>\n          <Questions $isActive={tab === \"membership\"}>\n            <Copy dangerouslySetInnerHTML={{ __html: membershipQuestions }} />\n          </Questions>\n        </Body>\n      </Layout>\n    </>\n  );\n};\n\nexport default FAQListingTpl;\n\nexport const pageQuery = graphql`\n  query FAQListingTpl($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n        membershipTab\n        partnershipTab\n      }\n    }\n    membership: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//pages/question/membership/*/.*/*.md/\" }\n      }\n      sort: { frontmatter: { score: ASC } }\n    ) {\n      edges {\n        node {\n          id\n          html\n        }\n      }\n    }\n    partnership: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//pages/question/partnership/*/.*/*.md/\" }\n      }\n      sort: { frontmatter: { score: DESC } }\n    ) {\n      edges {\n        node {\n          id\n          html\n        }\n      }\n    }\n  }\n`;\n"],"names":["ContactHolder","styled","Tile","withConfig","displayName","componentId","setSpace","Social","ul","SocialItem","li","_ref","_data$markdownRemark","data","props","frontmatter","markdownRemark","title","heading","subheading","email","facebookid","twitterid","githubid","React","Helmet","Object","assign","Layout","Body","Header","className","Action","button","obfuscated","href","Icon","name","size","EmojiHolder","breakpoint","phone","theme","actionColor","_ref2","_ref3","Flex","div","tabletUp","BodyHd","BodyBd","BodyFt","setType","Label","h2","dimmedColor","Name","p","titleColor","Tagline","_ref4","Description","_ref5","_ref6","_ref7","_ref8","color","Meta","_ref9","Awards","_ref10","_ref11","_ref12","Lists","_ref13","_ref14","_ref15","portfolioItem","genericCover","defaultCover","edges","node","childImageSharp","html","application","awards","bifpresents","cover","date","slides","link","needs","code","source","tagline","timeframe","space","dangerouslySetInnerHTML","__html","displayGallery","_cover$childImageShar","images","gatsbyImageData","push","forEach","slide","_slide$childImageShar","Gallery","defaultImage","length","map","_ref16","i","url","description","AwardName","target","rel","key","style","padding","keys","need","dict","graphic","money","users","uxui","Actionbar","primary","_frontmatter$title","_frontmatter$heading","_frontmatter$subheadi","marginLeft","marginRight","maxWidth","Copy","PostList","ol","Post","PostCover","PostHd","desktopUp","PostBd","PostFt","_props$data$markdownR","posts","_node$frontmatter","timeToRead","summary","uid","as","to","Link","GatsbyImage","image","alt","text","MentionsList","Mention","$highlight","MentionCover","MentionHd","MentionBd","mentions","publication","highlight","Sample","font","sans","scatteredBif1","scatteredBif2","scatteredBif3","Playground","hexArray","background","fontWeight","Projects","Flag","span","Project","ProjectCover","$hasPlaceholder","ProjectHd","ProjectBd","ProjectFt","projects","active","Person","time","s","actionDecor","PersonPic","$hasAvatar","PersonDetails","PersonName","h3","PersonLinks","_avatar$childImageSha","defaultAvatar","avatar","bluesky","fname","github","lname","mastodon","twitter","website","onClick","e","stopPropagation","PersonBio","PersonQuote","PersonSocial","toggleModal","quote","Modal","PeopleSection","section","People","fadeIn","l","PeopleIntro","track","m","_personObj","overlords","members","accomplices","all","genericAvatar","personObj","window","_all$edges$find","personId","location","pathname","replace","find","currentPerson","setCurrentPerson","useState","overlordsHeading","overlordsDescr","_node$frontmatter2","membersHeading","membersDescr","_node$frontmatter3","accomplicesHeading","accomplicesDescr","_node$frontmatter4","PersonModal","navigate","Element","Section","Title","h1","Items","Item","ItemTitle","ItemText","clients","subtitle","_client$name","_node$html","client","id","logo","ItemImage","_project$cover","_project$cover$childI","_project$title","project","placeholder","services","service","$span","testimonials","testimonial","_frontmatter$clientsT","_frontmatter$clientsS","Pitch","projectsSubtitle","projectsTitle","Clients","clientsTitle","clientsSubtitle","Services","servicesTitle","servicesSubtitle","goodatTitle","goodatSubtitle","goodat","Testimonials","testimonialsTitle","testimonialsSubtitle","projectsCta","contactCta","BlogPostReadTimer","readingTime","setReadingTime","Math","random","tick","previous","useEffect","timer","setInterval","clearInterval","toFixed","blogPost","Questions","$isActive","_props$data$membershi","_props$data$partnersh","_frontmatter$partners","_frontmatter$membersh","tab","setTab","switchTab","membershipQuestions","membership","partnershipQuestions","partnership","Tabs","count","Tab","handleClick","isActive","partnershipTab","membershipTab"],"sourceRoot":""}