{"version":3,"file":"component---lib-ui-templates-media-tpl-js-a02d4aee2db24e2367c6.js","mappings":"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","sources":["webpack://biffud.com/./lib/ui/templates/MediaTpl.js"],"sourcesContent":["import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Copy, Icon, Tile } from \"ui/components\";\n\nconst MentionsList = styled.ol`\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nconst Mention = styled(Tile)`\n  ${setType(\"m\")};\n  grid-row-end: span 1;\n  position: relative;\n  ${breakpoint.phone} {\n    ${setSpace(\"mbl\")};\n  }\n  ${({ $highlight }) =>\n    $highlight\n      ? `\n    grid-column: 1 / span 2;\n    grid-row: 1 / 2;\n    justify-self: stretch;\n    align-self: stretch;\n  `\n      : ``};\n`;\n\nconst MentionCover = styled.div`\n  ${setSpace(\"mbm\")};\n  border: 2px solid ${({ theme }) => theme.actionColor};\n  display: block;\n`;\n\nconst MentionHd = styled.div`\n  align-items: flex-start;\n  display: flex;\n  justify-content: space-between;\n  h2,\n  span {\n    ${setType(\"l\")};\n    color: ${({ theme }) => theme.actionColor};\n    font-weight: 800;\n  }\n`;\n\nconst MentionBd = styled.div`\n  ${setSpace(\"mts\")};\n  color: ${({ theme }) => theme.titleColor};\n  ${Copy} {\n    ${setSpace(\"mbs\")};\n  }\n`;\n\nexport default class MediaTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { mentions } = this.props.data;\n    const { frontmatter } = this.props.data.markdownRemark;\n    return <>\n      <Helmet {...this.props} title={frontmatter.title} />\n      <Layout {...this.props}>\n        <Header>\n          <h1 className=\"hero\">{frontmatter.heading}</h1>\n          <p className=\"para\">{frontmatter.subheading}</p>\n        </Header>\n        <Body>\n          <MentionsList>\n            {mentions.edges.map(({ node }) => {\n              const { html } = node;\n              const {\n                cover,\n                publication,\n                source,\n                highlight,\n                title\n              } = node.frontmatter;\n              return (\n                <Mention as=\"li\" $highlight={highlight} key={title}>\n                  <Tile href={source} target=\"_blank\" as=\"a\">\n                    {cover ? (\n                      <MentionCover>\n                        <GatsbyImage image={cover.childImageSharp.gatsbyImageData} alt={title} />\n                      </MentionCover>\n                    ) : null}\n                    <MentionHd>\n                      <h2 className=\"title\">{title}</h2>\n                      <span>\n                        <Icon name=\"popout\" text=\"Read the article…\" />\n                      </span>\n                    </MentionHd>\n                    <MentionBd>\n                      {html ? (\n                        <Copy dangerouslySetInnerHTML={{ __html: html }} />\n                      ) : null}\n                      {/* eslint-disable-next-line no-irregular-whitespace */}\n                      <p>by {publication}</p>\n                    </MentionBd>\n                  </Tile>\n                </Mention>\n              );\n            })}\n          </MentionsList>\n        </Body>\n      </Layout>\n    </>;\n  }\n}\n\nMediaTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired,\n    mentions: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`query MediaTplQuery($uid: String!) {\n  markdownRemark(frontmatter: {uid: {eq: $uid}}) {\n    html\n    frontmatter {\n      uid\n      title\n      heading\n      subheading\n    }\n  }\n  mentions: allMarkdownRemark(\n    filter: {fileAbsolutePath: {regex: \"//pages/fame/.*mention.md/\"}}\n    sort: {frontmatter: {date: DESC}}\n  ) {\n    edges {\n      node {\n        id\n        html\n        frontmatter {\n          date(formatString: \"MMMM YYYY\")\n          title\n          cover {\n            childImageSharp {\n              gatsbyImageData(\n                height: 240\n                quality: 100\n                placeholder: DOMINANT_COLOR\n                layout: FULL_WIDTH\n              )\n            }\n          }\n          link\n          highlight\n          publication\n          source\n          uid\n        }\n      }\n    }\n  }\n}`;\n"],"names":["MentionsList","styled","ol","withConfig","displayName","componentId","breakpoint","tabletUp","Mention","Tile","setType","phone","setSpace","_ref","$highlight","MentionCover","div","_ref2","theme","actionColor","MentionHd","_ref3","MentionBd","_ref4","titleColor","Copy","MediaTpl","_Component","props","_this","call","state","_inheritsLoose","prototype","render","mentions","this","data","frontmatter","markdownRemark","React","Helmet","Object","assign","title","Layout","Header","className","heading","subheading","Body","edges","map","_ref5","node","html","cover","publication","source","highlight","as","key","href","target","GatsbyImage","image","childImageSharp","gatsbyImageData","alt","Icon","name","text","dangerouslySetInnerHTML","__html","Component"],"sourceRoot":""}