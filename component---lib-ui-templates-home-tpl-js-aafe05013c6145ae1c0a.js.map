{"version":3,"sources":["webpack:///./lib/ui/templates/ofHome/Section.js","webpack:///./lib/ui/templates/ofHome/Clients.js","webpack:///./lib/ui/templates/ofHome/Projects.js","webpack:///./lib/ui/templates/ofHome/Services.js","webpack:///./lib/ui/templates/ofHome/Testimonials.js","webpack:///./lib/ui/templates/HomeTpl.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.string.link.js"],"names":["Section","styled","div","setSpace","Element","Title","h1","setType","Items","ul","breakpoint","tabletUp","Item","li","phone","ItemTitle","h3","ItemText","theme","color","Clients","props","clients","title","subtitle","as","className","map","node","client","frontmatter","key","uid","href","link","target","fixed","logo","childImageSharp","alt","name","dangerouslySetInnerHTML","__html","html","desktopUp","ItemImage","actionColor","hasPlaceholder","p","Projects","projects","project","Link","to","cover","fluid","placeholder","text","tagline","Services","services","service","i","space","background","span","Testimonials","testimonials","testimonial","source","HomeTpl","state","render","this","data","markdownRemark","genericCover","defaultCover","edges","heading","button","projectsSubtitle","projectsTitle","clientsTitle","clientsSubtitle","servicesTitle","servicesSubtitle","goodatTitle","goodatSubtitle","goodat","testimonialsTitle","testimonialsSubtitle","Component","pageQuery","createHTML","url"],"mappings":"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","file":"component---lib-ui-templates-home-tpl-js-aafe05013c6145ae1c0a.js","sourcesContent":["import styled from \"styled-components\";\n\nimport { setSpace } from \"ui/mixins\";\n\nconst Section = styled.div`\n  ${setSpace(\"mvk\")};\n  display: flex;\n  justify-content: center;\n  .el {\n    width: 100%;\n  }\n  &:not(:last-child) {\n    ${setSpace(\"pbk\")};\n  }\n`;\n\nexport default Section;\n","import { array, string } from \"prop-types\";\nimport Img from \"gatsby-image\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Tile } from \"ui/components\";\nimport { Header } from \"ui/partials\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport Section from \"./Section\";\n\nconst Element = styled(Section)``;\nconst Title = styled.h1`\n  &.hero {\n    ${setType(\"h\")};\n  }\n`;\nconst Items = styled.ul`\n  width: 100%;\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n    & > * {\n      grid-row-end: span 1;\n    }\n  }\n`;\nconst Item = styled.li`\n  ${breakpoint.phone} {\n    &:not(:last-child) {\n      ${setSpace(\"mbx\")};\n    }\n  }\n`;\nconst ItemTitle = styled.h3`\n  ${setSpace(\"mbm\")};\n`;\nconst ItemText = styled.div`\n  color: ${({ theme }) => theme.color};\n  strong {\n    font-weight: 600;\n  }\n`;\n\nconst Clients = props => {\n  const { clients, title, subtitle } = props;\n  return (\n    <Element as=\"section\">\n      <div className=\"el\">\n        <Header className=\"hd\">\n          <Title className=\"hero\">{title}</Title>\n          {subtitle ? <p className=\"para\">{subtitle}</p> : null}\n        </Header>\n        <Items>\n          {clients.map(({ node }) => {\n            const client = node.frontmatter;\n            return (\n              <Item key={node.uid}>\n                <Tile href={client.link} target=\"_blank\" as=\"a\">\n                  <ItemTitle>\n                    <Img\n                      fixed={client.logo.childImageSharp.fixed}\n                      alt={client.name}\n                    />\n                  </ItemTitle>\n                  <ItemText dangerouslySetInnerHTML={{ __html: node.html }} />\n                </Tile>\n              </Item>\n            );\n          })}\n        </Items>\n      </div>\n    </Element>\n  );\n};\n\nClients.propTypes = {\n  clients: array.isRequired,\n  subtitle: string.isRequired,\n  title: string.isRequired\n};\n\nexport default Clients;\n","import { array, string } from \"prop-types\";\nimport { Link } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { breakpoint } from \"ui/settings\";\nimport { Header } from \"ui/partials\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport { Tile, Icon } from \"ui/components\";\nimport Section from \"./Section\";\n\nconst Element = styled(Section)``;\nconst Title = styled.h1`\n  &.hero {\n    ${setType(\"h\")};\n  }\n`;\nconst Items = styled.ul`\n  width: 100%;\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fill, minmax(214px, 1fr));\n    margin-left: auto;\n    margin-right: auto;\n  }\n  ${breakpoint.desktopUp} {\n    grid-template-columns: repeat(auto-fill, minmax(291px, 1fr));\n  }\n`;\nconst Item = styled.li`\n  ${breakpoint.phone} {\n    &:not(:last-child) {\n      ${setSpace(\"mbx\")};\n    }\n  }\n`;\nconst ItemImage = styled.div`\n  ${setSpace(\"mbm\")};\n  border: 2px solid ${({ theme }) => theme.actionColor};\n  position: relative;\n  ${({ hasPlaceholder, theme }) =>\n    hasPlaceholder\n      ? `\n    .thinking {\n      color: ${theme.actionColor};\n      display: inline-block;\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%);\n      i {\n        font-size: 80px !important;\n      }\n  `\n      : ``};\n`;\nconst ItemTitle = styled.div`\n  align-items: flex-start;\n  display: flex;\n  justify-content: space-between;\n  h3,\n  span {\n    ${setType(\"m\")};\n    color: ${({ theme }) => theme.actionColor};\n    font-weight: 800;\n    text-transform: uppercase;\n  }\n  h3 {\n    max-width: 75%;\n  }\n  span {\n    display: none;\n  }\n  ${breakpoint.desktopUp} {\n    span {\n      display: inline-block;\n    }\n  }\n`;\nconst ItemText = styled.p`\n  ${setSpace(\"mts\")};\n`;\n\nconst Projects = props => {\n  const { projects, title, subtitle } = props;\n  return (\n    <Element as=\"section\">\n      <div className=\"el\">\n        <Header className=\"hd\">\n          <Title className=\"hero\">{title}</Title>\n          {subtitle ? <p className=\"para\">{subtitle}</p> : null}\n        </Header>\n        <Items>\n          {projects.map(({ node }) => {\n            const project = node.frontmatter;\n            return (\n              <Item key={node.uid}>\n                <Tile as={Link} to={`/projects/${project.uid}`}>\n                  <ItemImage hasPlaceholder={!project.cover}>\n                    <Img\n                      fluid={\n                        project.cover\n                          ? project.cover.childImageSharp.fluid\n                          : props.placeholder\n                      }\n                      alt={project.title}\n                    />\n                    {!project.cover ? (\n                      <span className=\"thinking\">\n                        <Icon name=\"thinking\" />\n                      </span>\n                    ) : null}\n                  </ItemImage>\n                  <ItemTitle>\n                    <h3 className=\"title\">{project.title}</h3>\n                    <span>\n                      <Icon name=\"arrow-right\" text=\"Read more…\" />\n                    </span>\n                  </ItemTitle>\n                  <ItemText>{project.tagline}</ItemText>\n                </Tile>\n              </Item>\n            );\n          })}\n        </Items>\n      </div>\n    </Element>\n  );\n};\n\nProjects.propTypes = {\n  projects: array.isRequired,\n  subtitle: string.isRequired,\n  title: string.isRequired\n};\n\nexport default Projects;\n","import { array, string } from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { breakpoint } from \"ui/settings\";\nimport { Header } from \"ui/partials\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport { Tile } from \"ui/components\";\nimport Section from \"./Section\";\n\nconst Element = styled(Section)``;\nconst Title = styled.h1`\n  &.hero {\n    ${setType(\"h\")};\n  }\n`;\nconst Items = styled.ul`\n  width: 100%;\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 10px;\n    grid-template-columns: repeat(auto-fill, minmax(330px, 1fr));\n    & > * {\n      grid-row-end: span 1;\n    }\n  }\n  ${breakpoint.desktopUp} {\n    grid-template-columns: repeat(auto-fill, minmax(221px, 1fr));\n  }\n`;\nconst Item = styled.li`\n  ${breakpoint.phone} {\n    &:not(:last-child) {\n      ${setSpace(\"mbx\")};\n    }\n  }\n`;\nconst ItemTitle = styled.h3`\n  ${setSpace(\"mbm\")};\n  ${setType(\"l\")};\n  font-weight: 800;\n`;\n\nconst Services = props => {\n  const { services, title, subtitle } = props;\n  return (\n    <Element as=\"section\">\n      <div className=\"el\">\n        <Header className=\"hd\">\n          <Title className=\"hero\">{title}</Title>\n          {subtitle ? <p className=\"para\">{subtitle}</p> : null}\n        </Header>\n        <Items>\n          {services.map((service, i) => (\n            <Item key={i}>\n              <Tile space=\"l\">\n                <ItemTitle className=\"TileTitle\">{service.title}</ItemTitle>\n                <p>{service.text}</p>\n              </Tile>\n            </Item>\n          ))}\n        </Items>\n      </div>\n    </Element>\n  );\n};\n\nServices.propTypes = {\n  services: array.isRequired,\n  subtitle: string.isRequired,\n  title: string.isRequired\n};\n\nexport default Services;\n","import { array, string } from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Tile } from \"ui/components\";\nimport { Header } from \"ui/partials\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport Section from \"./Section\";\n\nconst Element = styled(Section)``;\nconst Title = styled.h1`\n  &.hero {\n    ${setType(\"h\")};\n  }\n`;\nconst Items = styled.ul`\n  width: 100%;\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n    & > * {\n      grid-row-end: span 1;\n    }\n  }\n`;\nconst Item = styled.li`\n  height: 100%;\n  .quote {\n    ${setSpace(\"mbs\")};\n    ${setSpace(\"pal\")};\n    position: relative;\n    &:after,\n    &:before {\n      color: ${({ theme }) => theme.background};\n      ${setType(\"k\")};\n      position: absolute;\n    }\n    &:before {\n      content: \"“\";\n      top: 0;\n      left: 0;\n    }\n    &:after {\n      content: \"”\";\n      bottom: 0;\n      right: 0;\n    }\n  }\n  .source {\n    ${setType(\"s\")};\n    text-align: right;\n  }\n  ${breakpoint.phone} {\n    &:not(:last-child) {\n      ${setSpace(\"mbx\")};\n    }\n  }\n  ${({ span }) =>\n    span\n      ? `\n    grid-column: 1 / span 2;\n    grid-row: 1 / 2;\n    justify-self: stretch;\n    align-self: stretch;\n  `\n      : ``};\n`;\n\nconst Testimonials = props => {\n  const { testimonials, title, subtitle } = props;\n  return (\n    <Element as=\"section\">\n      <div className=\"el\">\n        <Header className=\"hd\">\n          <Title className=\"hero\">{title}</Title>\n          {subtitle ? <p className=\"para\">{subtitle}</p> : null}\n        </Header>\n        <Items>\n          {testimonials.map((testimonial, i) => (\n            <Item key={i} span={testimonial.span}>\n              <Tile>\n                <blockquote className=\"quote\">\n                  <p>{testimonial.text}</p>\n                </blockquote>\n                <p className=\"source\">— {testimonial.source}</p>\n              </Tile>\n            </Item>\n          ))}\n        </Items>\n      </div>\n    </Element>\n  );\n};\n\nTestimonials.propTypes = {\n  testimonials: array.isRequired,\n  subtitle: string.isRequired,\n  title: string.isRequired\n};\n\nexport default Testimonials;\n","import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\n\nimport { Action, Actionbar } from \"ui/components\";\nimport { Helmet, Layout, Pitch } from \"ui/partials\";\n\nimport Clients from \"./ofHome/Clients\";\nimport Projects from \"./ofHome/Projects\";\nimport Services from \"./ofHome/Services\";\nimport Testimonials from \"./ofHome/Testimonials\";\n\nexport default class HomeTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { frontmatter } = this.props.data.markdownRemark;\n    const { clients, projects, defaultCover } = this.props.data;\n    const genericCover = defaultCover.edges[0].node.childImageSharp;\n    return (\n      <>\n        <Helmet {...this.props} title={frontmatter.title} />\n        <Layout {...this.props}>\n          <Pitch>\n            <h1 className=\"hero\">{frontmatter.heading}</h1>\n            <Actionbar>\n              <Action button href=\"https://github.com/BadIdeaFactory/corporate/issues?q=is%3Aissue+is%3Aopen+label%3A%22project+application%22\" target=\"_blank\">\n                Submit an idea\n              </Action>\n              <Action href=\"https://patreon.com/biffud\" target=\"_blank\">Give us money</Action>\n              <span className=\"join\">or</span>\n              <Action to=\"contact\">Engage our services</Action>\n            </Actionbar>\n          </Pitch>\n          <Projects\n            placeholder={genericCover.fluid}\n            projects={projects.edges}\n            subtitle={frontmatter.projectsSubtitle}\n            title={frontmatter.projectsTitle}\n          />\n          <Clients\n            title={frontmatter.clientsTitle}\n            subtitle={frontmatter.clientsSubtitle}\n            clients={clients.edges}\n          />\n          <Services\n            title={frontmatter.servicesTitle}\n            subtitle={frontmatter.servicesSubtitle}\n            services={frontmatter.services}\n          />\n          <Services\n            title={frontmatter.goodatTitle}\n            subtitle={frontmatter.goodatSubtitle}\n            services={frontmatter.goodat}\n          />\n          <Testimonials\n            title={frontmatter.testimonialsTitle}\n            subtitle={frontmatter.testimonialsSubtitle}\n            testimonials={frontmatter.testimonials}\n          />\n        </Layout>\n      </>\n    );\n  }\n}\n\nHomeTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query HomeTplQuery($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        contactCta\n        projectsCta\n        servicesTitle\n        servicesSubtitle\n        services {\n          title\n          text\n        }\n        testimonialsTitle\n        testimonialsSubtitle\n        testimonials {\n          text\n          source\n          span\n        }\n        goodatTitle\n        goodatSubtitle\n        goodat {\n          title\n          text\n        }\n        clientsSubtitle\n        clientsTitle\n        projectsSubtitle\n        projectsTitle\n      }\n    }\n    defaultCover: allFile(\n      filter: { relativePath: { eq: \"images/default-cover.png\" } }\n    ) {\n      edges {\n        node {\n          childImageSharp {\n            fluid(\n              maxWidth: 800\n              maxHeight: 600\n              quality: 90\n              cropFocus: CENTER\n              traceSVG: { color: \"lightgray\" }\n            ) {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n      }\n    }\n    clients: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/pages/clients/.*client.md/\" } }\n      sort: { order: DESC, fields: [frontmatter___score] }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            uid\n            name\n            score\n            link\n            logo {\n              childImageSharp {\n                fixed(\n                  height: 40\n                  quality: 80\n                  traceSVG: { color: \"lightgray\" }\n                ) {\n                  ...GatsbyImageSharpFixed_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    projects: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/pages/projects/.*project.md/\" } }\n      limit: 3\n      sort: {\n        order: DESC\n        fields: [frontmatter___feature, frontmatter___score, frontmatter___date]\n      }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            uid\n            title\n            active\n            feature\n            tagline\n            code\n            cover {\n              childImageSharp {\n                fluid(\n                  maxWidth: 800\n                  cropFocus: CENTER\n                  maxHeight: 600\n                  quality: 90\n                  traceSVG: { color: \"lightgray\" }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}