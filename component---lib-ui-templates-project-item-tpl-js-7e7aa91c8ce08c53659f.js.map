{"version":3,"file":"component---lib-ui-templates-project-item-tpl-js-7e7aa91c8ce08c53659f.js","mappings":"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","sources":["webpack://biffud.com/./lib/ui/templates/ProjectItemTpl.js"],"sourcesContent":["import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Actionbar, Action, Icon, Gallery, Tile } from \"ui/components\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst Flex = styled.div`\n  ${breakpoint.tabletUp} {\n    display: flex;\n    & div.sideA,\n    & div.sideB {\n      flex: 0 0 50%;\n    }\n    & div.sideA {\n      ${setSpace(\"prl\")};\n    }\n    & div.sideB {\n      ${setSpace(\"pll\")};\n    }\n  }\n`;\n\nconst BodyHd = styled(Flex)`\n  ${setSpace(\"mbl\")};\n  ${breakpoint.tabletUp} {\n    display: flex;\n  }\n  & div.sideB {\n    display: flex;\n  }\n  & div.time,\n  & div.code {\n    flex: 0 0 50%;\n  }\n  ${breakpoint.phone} {\n    & div.sideB {\n      ${setSpace(\"mtl\")}\n    }\n  }\n`;\n\nconst BodyBd = styled(Flex)`\n  ${setSpace(\"mvl\")};\n  a {\n    color: ${({ theme }) => theme.actionColor};\n    text-decoration: underline;\n  }\n`;\n\nconst BodyFt = styled.div`\n  ${setSpace(\"mth\")};\n  ${setType(\"s\")};\n`;\n\nconst Label = styled.h2`\n  ${setSpace(\"mbs\")};\n  ${setType(\"s\")};\n  color: ${({ theme }) => theme.dimmedColor};\n`;\n\nconst Name = styled.p`\n  ${setType(\"h\")};\n  font-weight: 800;\n  color: ${({ theme }) => theme.titleColor};\n  text-transform: uppercase;\n`;\n\nconst Tagline = styled.p`\n  ${setSpace(\"mbl\")};\n  ${setType(\"l\")};\n  font-weight: 600;\n  color: ${({ theme }) => theme.titleColor};\n`;\n\nconst Description = styled.div`\n  color: ${({ theme }) => theme.titleColor};\n  p {\n    &:not(:last-child) {\n      ${setSpace(\"mbm\")};\n    }\n  }\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    font-weight: 800;\n  }\n  a {\n    color: ${({ theme }) => theme.actionColor};\n  }\n  em {\n    font-style: italic;\n  }\n  strong {\n    color: ${({ theme }) => theme.titleColor};\n    font-weight: 800;\n  }\n  ul,\n  ol {\n    ${setType(\"s\")};\n  }\n  ul li:before {\n    ${setSpace(\"mrs\")};\n    color: ${({ theme }) => theme.color};\n    content: \"–\";\n    display: inline-block;\n  }\n  ol li {\n    list-style: decimal;\n  }\n  ${breakpoint.phone} {\n    ${setSpace(\"mbl\")};\n  }\n`;\n\nconst Meta = styled.p`\n  ${setType(\"s\")};\n  color: ${({ theme }) => theme.titleColor};\n  font-weight: 800;\n  text-transform: uppercase;\n`;\n\nconst Awards = styled.div`\n  ${setSpace(\"mtl\")};\n  ${setType(\"s\")};\n  color: ${({ theme }) => theme.titleColor};\n  li:before {\n    ${setSpace(\"mrx\")};\n    color: ${({ theme }) => theme.dimmedColor};\n    content: \"—\";\n  }\n  strong {\n    font-weight: 600;\n  }\n  i {\n    color: ${({ theme }) => theme.dimmedColor};\n  }\n`;\n\nconst Lists = styled.div`\n  ${setSpace(\"mtl\")};\n  ${setType(\"s\")};\n  color: ${({ theme }) => theme.titleColor};\n  display: flex;\n  & > * {\n    flex: 0 0 50%;\n  }\n  li:before {\n    ${setSpace(\"mrx\")};\n    color: ${({ theme }) => theme.dimmedColor};\n    content: \"—\";\n  }\n  i {\n    color: ${({ theme }) => theme.dimmedColor};\n  }\n`;\n\nexport default class ProjectItemTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const portfolioItem = this.props.data.markdownRemark;\n    const genericCover = this.props.data.defaultCover.edges[0].node\n      .childImageSharp;\n    const { frontmatter, html } = portfolioItem;\n    const {\n      application,\n      awards,\n      bifpresents,\n      cover,\n      date,\n      slides,\n      link,\n      needs,\n      code,\n      source,\n      tagline,\n      timeframe,\n      title\n    } = frontmatter;\n\n    const displayGallery = () => {\n      const images = [];\n      if (cover) {\n        images.push(cover.childImageSharp.fluid);\n      }\n      if (slides) {\n        slides.forEach(slide => images.push(slide.childImageSharp.fluid));\n      }\n      return <Gallery images={images} defaultImage={genericCover.fluid} />;\n    };\n\n    return (\n      <>\n        <Helmet {...this.props} title={title} />\n        <Layout {...this.props}>\n          <Header>\n            <span className=\"small\">BIFFUD Presents</span>\n            <h1 className=\"hero\">{bifpresents}</h1>\n            <span className=\"small\">{date}</span>\n          </Header>\n          <Body>\n            <Tile space=\"h\">\n              <BodyHd>\n                <div className=\"sideA\">\n                  <div className=\"name\">\n                    <Label>Project name</Label>\n                    <Name>{title}</Name>\n                  </div>\n                </div>\n                <div className=\"sideB\">\n                  <div className=\"time\">\n                    <Label>Timeframe</Label>\n                    <Meta>{timeframe}</Meta>\n                  </div>\n                  <div className=\"code\">\n                    <Label>Code</Label>\n                    <Meta>{code}</Meta>\n                  </div>\n                </div>\n              </BodyHd>\n              <BodyBd>\n                <div className=\"sideA\">\n                  <Label>Tagline</Label>\n                  <Tagline>{tagline}</Tagline>\n                  <Label>Description</Label>\n                  <Description dangerouslySetInnerHTML={{ __html: html }} />\n                </div>\n                <div className=\"sideB\">\n                  <Label>Proofs of existence</Label>\n                  {displayGallery()}\n                  {awards && awards.length > 0 && (\n                    <Awards>\n                      <Label>Proofs of excellence</Label>\n                      <ul>\n                        {awards.map(({ name, url, description }, i) => {\n                          if (!name) return null\n                          const AwardName = url ? (\n                            <>\n                              <a href={url} target=\"_blank\">\n                                <strong>{name}</strong>\n                              </a>{\" \"}\n                              <Icon name=\"popout\" />\n                            </>\n                          ) : (\n                            <strong>{name}</strong>\n                          )\n\n                          return (\n                            <li key={`${name}_${i}`}>\n                              {AwardName}\n                              {description ? ` ${description}` : ''}\n                            </li>\n                          )\n                        })}\n                      </ul>\n                    </Awards>\n                  )}\n                  <Lists>\n                    {source || application ? (\n                      <div className=\"sideB\" style={{ padding: \"0\" }}>\n                        <Label>More proofs</Label>\n                        <ul>\n                          {source ? (\n                            <li>\n                              <a href={source} target=\"_blank\">\n                                Source code\n                              </a>{\" \"}\n                              <Icon name=\"popout\" />\n                            </li>\n                          ) : null}\n                          {application ? (\n                            <li>\n                              <a href={application} target=\"_blank\">\n                                BIFFUD Application\n                              </a>{\" \"}\n                              <Icon name=\"popout\" />\n                            </li>\n                          ) : null}\n                        </ul>\n                      </div>\n                    ) : null}\n                    {Object.keys(needs).length > 0 ? (\n                      <div className=\"sideB\" style={{ padding: \"0\" }}>\n                        <Label>Needs</Label>\n                        <ul>\n                          {Object.keys(needs).map(need => {\n                            const dict = {\n                              code: \"Code\",\n                              graphic: \"Graphic Design\",\n                              money: \"Money\",\n                              users: \"Users\",\n                              uxui: \"UX / UI Design\"\n                            };\n                            if (needs[need]) {\n                              return (\n                                <li key={needs[need]}>\n                                  {need !== \"other\" ? dict[need] : needs[need]}\n                                </li>\n                              );\n                            }\n                            return null;\n                          })}\n                        </ul>\n                      </div>\n                    ) : null}\n                  </Lists>\n                </div>\n              </BodyBd>\n              <BodyFt>\n                <Actionbar>\n                  {link ? (\n                    <div>\n                      <Action button primary href={link}>\n                        Launch project\n                      </Action>\n                    </div>\n                  ) : null}\n                  <div>\n                    <Action\n                      button={!link}\n                      href=\"https://patreon.com/biffud\"\n                      primary={!link}\n                      target=\"_blank\"\n                    >\n                      Donate to support\n                    </Action>\n                  </div>\n                </Actionbar>\n              </BodyFt>\n            </Tile>\n          </Body>\n        </Layout>\n      </>\n    );\n  }\n}\n\nProjectItemTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query PortfolioItemsByUID($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        active\n        application\n        slides {\n          childImageSharp {\n            fluid(\n              maxWidth: 600\n              quality: 90\n              traceSVG: { color: \"lightgray\" }\n            ) {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n        bifpresents\n        date(formatString: \"MMM YYYY\")\n        link\n        code\n        source\n        tagline\n        timeframe\n        title\n        uid\n        awards {\n          name\n          url\n          description\n        }\n        needs {\n          code\n          graphic\n          money\n          uxui\n          users\n          other\n        }\n        cover {\n          childImageSharp {\n            fluid(\n              maxWidth: 600\n              quality: 90\n              traceSVG: { color: \"lightgray\" }\n            ) {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n      }\n    }\n    defaultCover: allFile(\n      filter: { relativePath: { eq: \"images/default-cover.png\" } }\n    ) {\n      edges {\n        node {\n          childImageSharp {\n            fluid(\n              maxWidth: 600\n              quality: 90\n              traceSVG: { color: \"lightgray\" }\n            ) {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["Flex","styled","breakpoint","setSpace","BodyHd","BodyBd","theme","actionColor","BodyFt","setType","Label","dimmedColor","Name","titleColor","Tagline","Description","color","Meta","Awards","Lists","ProjectItemTpl","props","state","render","images","portfolioItem","this","data","markdownRemark","genericCover","defaultCover","edges","node","childImageSharp","frontmatter","html","application","awards","bifpresents","cover","date","slides","link","needs","code","source","tagline","timeframe","title","className","space","dangerouslySetInnerHTML","__html","push","fluid","forEach","slide","defaultImage","length","map","i","name","url","description","AwardName","href","target","key","style","padding","Object","keys","need","graphic","money","users","uxui","button","primary","Component"],"sourceRoot":""}