{"version":3,"file":"component---lib-ui-templates-people-tpl-js-15ed70583830f2c5d71d.js","mappings":"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","sources":["webpack://biffud.com/./lib/ui/templates/ofPeople/Person.js","webpack://biffud.com/./lib/ui/templates/ofPeople/PersonModal.tsx","webpack://biffud.com/./lib/ui/templates/PeopleTpl.js"],"sourcesContent":["import { func, object, shape } from \"prop-types\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Action, Icon } from \"ui/components\";\nimport { breakpoint, time } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst Person = styled.li`\n  align-items: center;\n  background: white;\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  transition: box-shadow ${time.s}, transform ${time.s};\n  &:hover {\n    box-shadow: 6px 6px 0 0 ${({ theme }) => theme.actionDecor};\n    transform: translate(-1px, -1px);\n  }\n  ${breakpoint.tabletUp} {\n    ${setSpace(\"pan\")};\n    );\n  }\n`;\n\nconst PersonPic = styled.div`\n  background: ${({ theme, $hasAvatar }) => ($hasAvatar ? \"\" : theme.actionColor)};\n  border: 2px solid ${({ theme }) => theme.background};\n  flex: 0 0 ${100 / 3}%;\n`;\n\nconst PersonDetails = styled.div`\n  ${setSpace(\"phm\")};\n  ${setType(\"s\")};\n  ${breakpoint.phone} {\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n  }\n`;\n\nconst PersonName = styled.h3`\n  ${setType(\"s\")};\n  color: ${({ theme }) => theme.color};\n  span {\n    display: block;\n    &:first-child {\n      ${setType(\"m\")};\n      color: ${({ theme }) => theme.actionColor};\n      font-weight: 800;\n    }\n  }\n`;\n\nconst PersonLinks = styled.div`\n  ${setSpace(\"mts\")};\n  & > * {\n    ${setSpace(\"mrs\")};\n    line-height: 1em;\n  }\n  ${breakpoint.phone} {\n    display: none;\n  }\n`;\n\nfunction Member(props) {\n  const { defaultAvatar } = props;\n  const { frontmatter } = props.data;\n  const {\n    avatar,\n    bluesky,\n    fname,\n    github,\n    lname,\n    mastodon,\n    twitter,\n    website\n  } = frontmatter;\n  return (\n    <Person onClick={props.toggleModal} role=\"button\">\n      <PersonPic $hasAvatar={avatar}>\n        <GatsbyImage\n          image={avatar ? avatar.childImageSharp.gatsbyImageData : defaultAvatar.gatsbyImageData}\n          alt=\"\"\n        />\n      </PersonPic>\n      <PersonDetails>\n        <PersonName>\n          <span>{fname}</span> <span>{lname}</span>\n        </PersonName>\n        <PersonLinks>\n          {website ? (\n            <Action\n              onClick={e => e.stopPropagation()}\n              href={`https://${website}/`}\n              rel=\"external noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <Icon name=\"website\" size=\"s\" />\n            </Action>\n          ) : null}\n          {bluesky ? (\n            <Action\n              onClick={e => e.stopPropagation()}\n              href={`https://bsky.app/profile/${bluesky}`}\n              rel=\"external noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <Icon name=\"bluesky\" size=\"s\" />\n            </Action>\n          ) : null}\n          {mastodon ? (\n            <Action\n              onClick={e => e.stopPropagation()}\n              href={`https://${mastodon}`}\n              rel=\"external noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <Icon name=\"mastodon\" size=\"s\" />\n            </Action>\n          ) : null}\n          {twitter ? (\n            <Action\n              onClick={e => e.stopPropagation()}\n              href={`https://twitter.com/${twitter}`}\n              rel=\"external noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <Icon name=\"twitter\" size=\"s\" />\n            </Action>\n          ) : null}\n          {github ? (\n            <Action\n              onClick={e => e.stopPropagation()}\n              href={`https://github.com/${github}`}\n              rel=\"external noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <Icon name=\"github\" size=\"s\" />\n            </Action>\n          ) : null}\n        </PersonLinks>\n      </PersonDetails>\n    </Person>\n  );\n}\n\nMember.propTypes = {\n  defaultAvatar: object.isRequired,\n  data: shape({\n    frontmatter: object.isRequired\n  }).isRequired,\n  toggleModal: func.isRequired\n};\n\nexport default Member;\n","import React from \"react\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport styled from \"styled-components\";\n\nimport { Action, Copy, Icon, Modal } from \"ui/components\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst Person = styled.div`\n  ${setSpace(\"pbh\")};\n  ${breakpoint.tabletUp} {\n    display: flex;\n    flex-direction: row;\n  }\n`;\n\ninterface PersonPicProps {\n  readonly $hasAvatar: boolean;\n}\n\nconst PersonPic = styled.div<PersonPicProps>`\n  background: ${({ $hasAvatar, theme }) =>\n    !$hasAvatar ? theme.actionColor : \"\"};\n  ${breakpoint.tabletUp} {\n    flex: 0 0 ${100 / 4}%;\n  }\n  ${breakpoint.phone} {\n    ${setSpace(\"mbl\")};\n    & > * {\n      margin-left: auto;\n      margin-right: auto;\n      max-width: 200px;\n    }\n  }\n`;\nconst PersonDetails = styled.div`\n  ${setType(\"s\")};\n  ${breakpoint.tabletUp} {\n    ${setSpace(\"pll\")};\n  }\n`;\nconst PersonName = styled.h2`\n  ${setType(\"l\")};\n  font-weight: 800;\n  color: ${({ theme }) => theme.titleColor};\n`;\nconst PersonBio = styled.div`\n  ${setSpace(\"mvm\")};\n  ${setType(\"m\")};\n  color: ${({ theme }) => theme.titleColor};\n`;\nconst PersonQuote = styled.div`\n  ${setSpace(\"mvm\")};\n`;\nconst PersonSocial = styled.div`\n  & > * {\n    ${setSpace(\"mvx\")};\n  }\n  & > *:not(:last-child) {\n    ${setSpace(\"mrl\")};\n  }\n`;\n\ninterface PersonModalProps {\n  defaultAvatar: NonNullable<\n    Queries.PeopleTplQueryQuery[\"defaultAvatar\"][\"edges\"][0][\"node\"][\"childImageSharp\"]\n  >;\n  data: NonNullable<Queries.PeopleTplQueryQuery[\"overlords\"][\"edges\"][0][\"node\"]>;\n  toggleModal: VoidFunction;\n}\n\nconst PersonModal: React.FC<PersonModalProps> = ({\n  defaultAvatar,\n  data,\n  toggleModal,\n}) => {\n  const { frontmatter, html } = data;\n  const {\n    avatar,\n    bluesky,\n    fname,\n    github,\n    lname,\n    mastodon,\n    quote,\n    twitter,\n    website,\n  } = frontmatter;\n\n  return (\n    <Modal toggleModal={toggleModal}>\n      <Person>\n        <PersonPic $hasAvatar={avatar}>\n          <GatsbyImage\n            image={\n              avatar\n                ? avatar.childImageSharp.gatsbyImageData\n                : defaultAvatar.gatsbyImageData\n            }\n            alt=\"\"\n          />\n        </PersonPic>\n        <PersonDetails>\n          <PersonName>\n            {fname} {lname}\n          </PersonName>\n          <PersonBio>\n            <Copy dangerouslySetInnerHTML={{ __html: html ?? \"\" }} />\n          </PersonBio>\n          <PersonQuote>{quote}</PersonQuote>\n          <PersonSocial>\n            {website && (\n              <Action\n                href={`https://${website}/`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"website\" /> Website\n              </Action>\n            )}\n            {bluesky && (\n              <Action\n                href={`https://bsky.app/profile/${bluesky}`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"bluesky\" /> Bluesky\n              </Action>\n            )}\n            {mastodon && (\n              <Action\n                href={`https://${mastodon}`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"mastodon\" /> Mastodon\n              </Action>\n            )}\n            {twitter && (\n              <Action\n                href={`https://twitter.com/${twitter}`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"twitter\" /> Twitter\n              </Action>\n            )}\n            {github && (\n              <Action\n                href={`https://github.com/${github}`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"github\" /> GitHub\n              </Action>\n            )}\n          </PersonSocial>\n        </PersonDetails>\n      </Person>\n    </Modal>\n  );\n};\n\nexport default PersonModal;\n","import { object, shape } from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { breakpoint, time, track } from \"ui/settings\";\nimport { fadeIn } from \"ui/animations\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport Person from \"./ofPeople/Person\";\nimport PersonModal from \"./ofPeople/PersonModal\";\n\nconst PeopleSection = styled.section`\n  ${setSpace(\"mbk\")};\n`;\n\nconst People = styled.ul`\n  animation: ${fadeIn} ${time.l} linear;\n  width: 100%;\n  display: grid;\n  grid-gap: 10px;\n  ${breakpoint.phone} {\n    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n  }\n  ${breakpoint.tabletUp} {\n    grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));\n  }\n`;\n\nconst PeopleIntro = styled.div`\n  ${setSpace(\"mbh\")};\n  text-align: center;\n  h2 {\n    ${setSpace(\"mbm\")};\n    ${setSpace(\"phs\")};\n    ${setSpace(\"pvx\")};\n    ${setType(\"s\")};\n    background: white;\n    color: ${({ theme }) => theme.actionColor};\n    display: inline-block;\n    font-weight: 800;\n    letter-spacing: ${track.m};\n    text-transform: uppercase;\n  }\n  p {\n    ${setType(\"l\")};\n    color: white;\n  }\n`;\n\nexport default class PeopleTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPerson: null\n    };\n    this.handleShowPerson = this.handleShowPerson.bind(this);\n  }\n\n  handleShowPerson(obj) {\n    this.setState(prevState => ({\n      currentPerson: prevState.currentPerson ? null : obj\n    }));\n  }\n\n  render() {\n    const { currentPerson } = this.state;\n    const { defaultAvatar, overlords, members, accomplices } = this.props.data;\n    const { frontmatter } = this.props.data.markdownRemark;\n    const genericAvatar = defaultAvatar.edges[0].node.childImageSharp;\n    return (\n      <>\n        <Helmet {...this.props} title={frontmatter.title} />\n        <Layout {...this.props}>\n          <Header>\n            <h1 className=\"hero\">{frontmatter.heading}</h1>\n            <p className=\"para\">{frontmatter.subheading}</p>\n          </Header>\n          <Body>\n            <PeopleSection>\n              <PeopleIntro>\n                <h2>{frontmatter.overlordsHeading}</h2>\n                <p>{frontmatter.overlordsDescr}</p>\n              </PeopleIntro>\n              <People>\n                {overlords.edges.map(({ node }) => (\n                  <Person\n                    data={node}\n                    defaultAvatar={genericAvatar}\n                    key={node.frontmatter.uid}\n                    toggleModal={e => this.handleShowPerson(node, e)}\n                  />\n                ))}\n              </People>\n            </PeopleSection>\n            <PeopleIntro>\n              <h2>{frontmatter.membersHeading}</h2>\n              <p>{frontmatter.membersDescr}</p>\n            </PeopleIntro>\n            <PeopleSection>\n              <People>\n                {members.edges.map(({ node }) => (\n                  <Person\n                    data={node}\n                    defaultAvatar={genericAvatar}\n                    key={node.frontmatter.uid}\n                    toggleModal={e => this.handleShowPerson(node, e)}\n                  />\n                ))}\n              </People>\n            </PeopleSection>\n            <PeopleSection>\n              <PeopleIntro>\n                <h2>{frontmatter.accomplicesHeading}</h2>\n                <p>{frontmatter.accomplicesDescr}</p>\n              </PeopleIntro>\n              <People>\n                {accomplices.edges.map(({ node }) => (\n                  <Person\n                    data={node}\n                    defaultAvatar={genericAvatar}\n                    key={node.frontmatter.uid}\n                    toggleModal={e => this.handleShowPerson(node, e)}\n                  />\n                ))}\n              </People>\n            </PeopleSection>\n          </Body>\n          {currentPerson !== null ? (\n            <PersonModal\n              toggleModal={this.handleShowPerson}\n              data={currentPerson}\n              defaultAvatar={genericAvatar}\n            />\n          ) : null}\n        </Layout>\n      </>\n    );\n  }\n}\n\nPeopleTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired,\n    overlords: object.isRequired,\n    members: object.isRequired,\n    accomplices: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`query PeopleTplQuery($uid: String!) {\n  markdownRemark(frontmatter: {uid: {eq: $uid}}) {\n    html\n    frontmatter {\n      uid\n      title\n      heading\n      subheading\n      accomplicesHeading\n      accomplicesDescr\n      membersHeading\n      membersDescr\n      overlordsHeading\n      overlordsDescr\n    }\n  }\n  defaultAvatar: allFile(\n    filter: {relativePath: {eq: \"images/default-avatar.png\"}}\n  ) {\n    edges {\n      node {\n        childImageSharp {\n          gatsbyImageData(\n            width: 240\n            height: 300\n            quality: 90\n            placeholder: DOMINANT_COLOR\n            layout: CONSTRAINED\n          )\n        }\n      }\n    }\n  }\n  overlords: allMarkdownRemark(\n    filter: {fileAbsolutePath: {regex: \"//pages/people/bios/*/.*/*.md/\"}, frontmatter: {role: {elemMatch: {overlord: {eq: true}}}}}\n    sort: {frontmatter: {fname: ASC}}\n  ) {\n    edges {\n      node {\n        id\n        html\n        frontmatter {\n          bluesky\n          fname\n          github\n          lname\n          mastodon\n          quote\n          score\n          twitter\n          website\n          uid\n          avatar {\n            childImageSharp {\n              gatsbyImageData(\n                width: 240\n                height: 300\n                placeholder: DOMINANT_COLOR\n                transformOptions: {cropFocus: CENTER}\n                layout: CONSTRAINED\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n  members: allMarkdownRemark(\n    filter: {fileAbsolutePath: {regex: \"//pages/people/bios/*/.*/*.md/\"}, frontmatter: {role: {elemMatch: {member: {eq: true}}}}}\n    sort: {frontmatter: {fname: ASC}}\n  ) {\n    edges {\n      node {\n        id\n        html\n        frontmatter {\n          bluesky\n          fname\n          github\n          lname\n          mastodon\n          quote\n          score\n          twitter\n          website\n          uid\n          avatar {\n            childImageSharp {\n              gatsbyImageData(\n                width: 240\n                height: 300\n                placeholder: DOMINANT_COLOR\n                transformOptions: {cropFocus: CENTER}\n                layout: CONSTRAINED\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n  accomplices: allMarkdownRemark(\n    filter: {fileAbsolutePath: {regex: \"//pages/people/bios/*/.*/*.md/\"}, frontmatter: {role: {elemMatch: {accomplice: {eq: true}}}}}\n    sort: {frontmatter: {fname: ASC}}\n  ) {\n    edges {\n      node {\n        id\n        html\n        frontmatter {\n          bluesky\n          fname\n          github\n          lname\n          mastodon\n          quote\n          score\n          twitter\n          website\n          uid\n          avatar {\n            childImageSharp {\n              gatsbyImageData(\n                width: 240\n                height: 300\n                placeholder: DOMINANT_COLOR\n                transformOptions: {cropFocus: CENTER}\n                layout: CONSTRAINED\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n}`;\n"],"names":["Person","styled","li","withConfig","displayName","componentId","time","s","_ref","theme","actionDecor","breakpoint","tabletUp","setSpace","PersonPic","div","_ref2","$hasAvatar","actionColor","_ref3","background","PersonDetails","setType","phone","PersonName","h3","_ref4","color","_ref5","PersonLinks","props","defaultAvatar","frontmatter","data","avatar","bluesky","fname","github","lname","mastodon","twitter","website","React","onClick","toggleModal","role","GatsbyImage","image","childImageSharp","gatsbyImageData","alt","Action","e","stopPropagation","href","rel","target","Icon","name","size","h2","titleColor","PersonBio","PersonQuote","PersonSocial","html","quote","Modal","Copy","dangerouslySetInnerHTML","__html","PeopleSection","section","People","ul","fadeIn","l","PeopleIntro","track","m","PeopleTpl","_Component","_this","call","state","currentPerson","handleShowPerson","bind","_inheritsLoose","_proto","prototype","obj","this","setState","prevState","render","overlords","members","accomplices","markdownRemark","genericAvatar","edges","node","Helmet","Object","assign","title","Layout","Header","className","heading","subheading","Body","overlordsHeading","overlordsDescr","map","key","uid","membersHeading","membersDescr","accomplicesHeading","accomplicesDescr","PersonModal","Component"],"sourceRoot":""}