{"version":3,"file":"component---lib-ui-templates-blog-listing-tpl-tsx-fbbc30476a09c391b355.js","mappings":"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","sources":["webpack://biffud.com/./lib/ui/templates/BlogListingTpl.tsx"],"sourcesContent":["import React from \"react\";\nimport { graphql, Link, type PageProps } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport styled from \"styled-components\";\n\nimport { Icon, Tile } from \"ui/components\";\nimport { breakpoint } from \"ui/settings\";\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst PostList = styled.ol`\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nconst Post = styled(Tile)`\n  ${setType(\"m\")};\n  grid-row-end: span 1;\n  position: relative;\n  ${breakpoint.phone} {\n    ${setSpace(\"mbl\")};\n  }\n`;\n\nconst PostCover = styled.div`\n  border: 2px solid ${({ theme }) => theme.actionColor};\n  ${setSpace(\"mbm\")};\n`;\n\nconst PostHd = styled.div`\n  ${setSpace(\"mbs\")};\n  align-items: flex-start;\n  display: flex;\n  justify-content: space-between;\n  h2,\n  span {\n    ${setType(\"l\")};\n    color: ${({ theme }) => theme.actionColor};\n    font-weight: 800;\n  }\n  span {\n    display: none;\n  }\n  ${breakpoint.desktopUp} {\n    span {\n      display: inline-block;\n    }\n  }\n`;\n\nconst PostBd = styled.div`\n  ${setSpace(\"mbm\")};\n  color: ${({ theme }) => theme.titleColor};\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nconst PostFt = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  span {\n    ${setType(\"s\")};\n    color: ${({ theme }) => theme.color};\n  }\n`;\n\nconst BlogListingTpl = (props: PageProps<Queries.BlogTplQuery>) => {\n  const { posts } = props.data;\n  const { frontmatter } = props.data.markdownRemark ?? {};\n\n  return (\n    <>\n      <Helmet {...props} title={frontmatter?.title ?? \"\"} />\n      <Layout {...props}>\n        <Header>\n          <h1 className=\"hero\">{frontmatter?.heading}</h1>\n          <p className=\"para\">{frontmatter?.subheading}</p>\n        </Header>\n        <Body>\n          <PostList>\n            {posts.edges.map(({ node }) => {\n              const { timeToRead } = node;\n              const { cover, date, summary, title, uid } =\n                node.frontmatter ?? {};\n\n              return (\n                <Post key={uid} as=\"li\">\n                  <Tile to={`/tldr/${uid}`} as={Link}>\n                    {cover?.childImageSharp?.gatsbyImageData ? (\n                      <PostCover>\n                        <GatsbyImage\n                          image={cover.childImageSharp.gatsbyImageData}\n                          alt={title ?? \"\"}\n                        />\n                      </PostCover>\n                    ) : null}\n                    <PostHd>\n                      <h2 className=\"title\">{title}</h2>\n                      <span>\n                        <Icon name=\"arrow-right\" text=\"Read moreâ€¦\" />\n                      </span>\n                    </PostHd>\n                    <PostBd>\n                      <p className=\"summary\">{summary}</p>\n                    </PostBd>\n                    <PostFt>\n                      <span>{date}</span>\n                      <span>{timeToRead} min read</span>\n                    </PostFt>\n                  </Tile>\n                </Post>\n              );\n            })}\n          </PostList>\n        </Body>\n      </Layout>\n    </>\n  );\n};\n\nexport default BlogListingTpl;\n\nexport const pageQuery = graphql`\n  query BlogTpl($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n      }\n    }\n    posts: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/pages/tldr/.*post.md/\" } }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      edges {\n        node {\n          id\n          timeToRead\n          frontmatter {\n            uid\n            cover {\n              childImageSharp {\n                gatsbyImageData(\n                  height: 240\n                  quality: 100\n                  placeholder: DOMINANT_COLOR\n                  layout: FULL_WIDTH\n                )\n              }\n            }\n            date(formatString: \"MMMM D, YYYY\")\n            summary\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["PostList","styled","ol","withConfig","displayName","componentId","breakpoint","tabletUp","Post","Tile","setType","phone","setSpace","PostCover","div","_ref","theme","actionColor","PostHd","_ref2","desktopUp","PostBd","_ref3","titleColor","PostFt","_ref4","color","props","_props$data$markdownR","_frontmatter$title","posts","data","frontmatter","markdownRemark","React","Helmet","Object","assign","title","Layout","Header","className","heading","subheading","Body","edges","map","_ref5","_node$frontmatter","_cover$childImageShar","node","timeToRead","cover","date","summary","uid","key","as","to","Link","childImageSharp","gatsbyImageData","GatsbyImage","image","alt","Icon","name","text"],"sourceRoot":""}