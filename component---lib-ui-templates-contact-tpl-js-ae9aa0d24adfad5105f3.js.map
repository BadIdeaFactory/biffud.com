{"version":3,"sources":["webpack:///./lib/ui/templates/ContactTpl.js"],"names":["ContactHolder","styled","Tile","withConfig","displayName","componentId","setSpace","Social","ul","SocialItem","li","ContactTpl","props","_this","_Component","call","this","state","render","frontmatter","data","markdownRemark","email","facebookid","linkedinid","twitterid","myspaceid","githubid","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","Fragment","ui_partials__WEBPACK_IMPORTED_MODULE_6__","Object","assign","title","className","heading","subheading","ui_components__WEBPACK_IMPORTED_MODULE_5__","button","obfuscated","href","name","size","Component","propTypes","shape","object","isRequired","pageQuery"],"mappings":"oQASMA,EAAgBC,YAAOC,KAAVC,WAAA,CAAAC,YAAA,4BAAAC,YAAA,gBAAGJ,CAAH,oIACfK,YAAS,QASPC,EAASN,IAAOO,GAAVL,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAGJ,CAAH,yBACRK,YAAS,QAIPG,EAAaR,IAAOS,GAAVP,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAGJ,CAAH,gBACZK,YAAS,OAEPA,YAAS,QAIMK,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKC,MAAQ,GAFIJ,8BAKnBK,kBAAS,IACCC,EAAgBH,KAAKJ,MAAMQ,KAAKC,eAAhCF,YAENG,EAMEH,EANFG,MACAC,EAKEJ,EALFI,WACAC,EAIEL,EAJFK,WACAC,EAGEN,EAHFM,UACAC,EAEEP,EAFFO,UACAC,EACER,EADFQ,SAEF,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAADC,OAAAC,OAAA,GAAYlB,KAAKJ,MAAjB,CAAwBuB,MAAOhB,EAAYgB,SAC3CP,EAAAC,EAAAC,cAACE,EAAA,EAAWhB,KAAKJ,MACfgB,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,MAAIM,UAAU,QAAQjB,EAAYkB,SAClCT,EAAAC,EAAAC,cAAA,KAAGM,UAAU,QAAQjB,EAAYmB,aAEnCV,EAAAC,EAAAC,cAAC9B,EAAD,KACE4B,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAQC,QAAM,EAACC,YAAU,EAACnB,MAAOA,IACjCM,EAAAC,EAAAC,cAACvB,EAAD,KACGkB,EACCG,EAAAC,EAAAC,cAACrB,EAAD,KACEmB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAQG,KAAI,uBAAyBjB,GACnCG,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMI,KAAK,UAAUC,KAAK,MACzBnB,IAGH,KACHE,EACCC,EAAAC,EAAAC,cAACrB,EAAD,KACEmB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAQG,KAAI,sBAAwBf,EAAYiB,KAAK,KACnDhB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMI,KAAK,WACVhB,IAGH,KACHH,EACCI,EAAAC,EAAAC,cAACrB,EAAD,KACEmB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEG,KAAI,wBAA0BlB,EAC9BoB,KAAK,KAELhB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMI,KAAK,aACVnB,IAGH,KACHE,EACCE,EAAAC,EAAAC,cAACrB,EAAD,KACEmB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAQG,KAAI,uBAAyBhB,EAAakB,KAAK,KACrDhB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMI,KAAK,YACVjB,IAGH,KACHH,EACCK,EAAAC,EAAAC,cAACrB,EAAD,KACEmB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEG,KAAI,wBAA0BnB,EAC9BqB,KAAK,KAELhB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMI,KAAK,aACVpB,IAGH,cAzEoBsB,aAmFxClC,EAAWmC,UAAY,CACrB1B,KAAM2B,gBAAM,CACV1B,eAAgB2B,SAAOC,aACtBA,YAGE,IAAMC,EAAS","file":"component---lib-ui-templates-contact-tpl-js-ae9aa0d24adfad5105f3.js","sourcesContent":["import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Action, Icon, Tile } from \"ui/components\";\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { setSpace } from \"ui/mixins\";\n\nconst ContactHolder = styled(Tile)`\n  ${setSpace(\"pah\")};\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 600px;\n  text-align: center;\n`;\nconst Social = styled.ul`\n  ${setSpace(\"mtl\")};\n  text-align: left;\n`;\n\nconst SocialItem = styled.li`\n  ${setSpace(\"mts\")};\n  i {\n    ${setSpace(\"mrs\")};\n  }\n`;\n\nexport default class ContactTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { frontmatter } = this.props.data.markdownRemark;\n    const {\n      email,\n      facebookid,\n      linkedinid,\n      twitterid,\n      myspaceid,\n      githubid\n    } = frontmatter;\n    return (\n      <>\n        <Helmet {...this.props} title={frontmatter.title} />\n        <Layout {...this.props}>\n          <Body>\n            <Header>\n              <h1 className=\"hero\">{frontmatter.heading}</h1>\n              <p className=\"para\">{frontmatter.subheading}</p>\n            </Header>\n            <ContactHolder>\n              <Action button obfuscated email={email} />\n              <Social>\n                {twitterid ? (\n                  <SocialItem>\n                    <Action href={`https://twitter.com/${twitterid}`}>\n                      <Icon name=\"twitter\" size=\"s\" />\n                      {twitterid}\n                    </Action>\n                  </SocialItem>\n                ) : null}\n                {githubid ? (\n                  <SocialItem>\n                    <Action href={`https://github.com/${githubid}`} size=\"s\">\n                      <Icon name=\"github\" />\n                      {githubid}\n                    </Action>\n                  </SocialItem>\n                ) : null}\n                {linkedinid ? (\n                  <SocialItem>\n                    <Action\n                      href={`https://linkedin.com/${linkedinid}`}\n                      size=\"s\"\n                    >\n                      <Icon name=\"linkedin\" />\n                      {linkedinid}\n                    </Action>\n                  </SocialItem>\n                ) : null}\n                {myspaceid ? (\n                  <SocialItem>\n                    <Action href={`https://myspace.com/${myspaceid}`} size=\"s\">\n                      <Icon name=\"myspace\" />\n                      {myspaceid}\n                    </Action>\n                  </SocialItem>\n                ) : null}\n                {facebookid ? (\n                  <SocialItem>\n                    <Action\n                      href={`https://facebook.com/${facebookid}`}\n                      size=\"s\"\n                    >\n                      <Icon name=\"facebook\" />\n                      {facebookid}\n                    </Action>\n                  </SocialItem>\n                ) : null}\n              </Social>\n            </ContactHolder>\n          </Body>\n        </Layout>\n      </>\n    );\n  }\n}\n\nContactTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query ContactTplQuery($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n        email\n        facebookid\n        twitterid\n        githubid\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}