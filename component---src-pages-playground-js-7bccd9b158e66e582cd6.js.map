{"version":3,"file":"component---src-pages-playground-js-7bccd9b158e66e582cd6.js","mappings":"uSAWA,MAAMA,EAAWC,EAAAA,QAAOC,GAAEC,WAAA,CAAAC,YAAA,2BAAAC,YAAA,gBAATJ,CAAS,kIACtBK,EAAAA,GAAWC,UASTC,GAAOP,EAAAA,EAAAA,SAAOQ,EAAAA,IAAKN,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAZJ,CAAY,yDACrBS,EAAAA,EAAAA,IAAQ,KAGRJ,EAAAA,GAAWK,OACTC,EAAAA,EAAAA,IAAS,QAITC,EAAYZ,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,4BAAAC,YAAA,gBAAVJ,CAAU,+BACNc,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,WAAW,IAClDL,EAAAA,EAAAA,IAAS,QAGPM,EAASjB,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAVJ,CAAU,sKACrBW,EAAAA,EAAAA,IAAS,QAMPF,EAAAA,EAAAA,IAAQ,MACDS,IAAA,IAAC,MAAEH,GAAOG,EAAA,OAAKH,EAAMC,WAAW,GAMzCX,EAAAA,GAAWc,WAOTC,EAASpB,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAVJ,CAAU,kFACrBW,EAAAA,EAAAA,IAAS,QACFU,IAAA,IAAC,MAAEN,GAAOM,EAAA,OAAKN,EAAMO,UAAU,IAMpCC,EAASvB,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAVJ,CAAU,wFAKnBS,EAAAA,EAAAA,IAAQ,MACDe,IAAA,IAAC,MAAET,GAAOS,EAAA,OAAKT,EAAMU,KAAK,IAErC,IAEmBC,EAAc,SAAAC,GACjC,SAAAD,EAAYE,GAAQ,IAADC,EAED,OADhBA,EAAAF,EAAAG,KAAA,KAAMF,IAAM,MACPG,MAAQ,CAAC,EAAEF,CAClB,CA8CC,OA9CAG,EAAAA,EAAAA,GAAAN,EAAAC,GAAAD,EAAAO,UAEDC,OAAA,WACE,MAAM,MAAEC,GAAUC,KAAKR,MAAMS,MACvB,YAAEC,GAAgBF,KAAKR,MAAMS,KAAKE,eACxC,OAAOC,EAAAA,cAAAA,EAAAA,SAAA,KACLA,EAAAA,cAACC,EAAAA,GAAMC,OAAAC,OAAA,GAAKP,KAAKR,MAAK,CAAEgB,MAAON,EAAYM,SAC3CJ,EAAAA,cAACK,EAAAA,GAAWT,KAAKR,MACfY,EAAAA,cAACM,EAAAA,GAAM,KACLN,EAAAA,cAAA,MAAIO,UAAU,QAAQT,EAAYU,SAClCR,EAAAA,cAAA,KAAGO,UAAU,QAAQT,EAAYW,aAEnCT,EAAAA,cAACU,EAAAA,GAAI,KACHV,EAAAA,cAACzC,EAAQ,KACNoC,EAAMgB,MAAMC,KAAIC,IAAe,IAAd,KAAEC,GAAMD,EACxB,MAAM,WAAEE,GAAeD,GACjB,MAAEE,EAAK,KAAEC,EAAI,QAAEC,EAAO,MAAEd,EAAK,IAAEe,GAAQL,EAAKhB,YAClD,OACEE,EAAAA,cAACjC,EAAI,CAACqD,IAAKD,EAAKE,GAAG,MACjBrB,EAAAA,cAAChC,EAAAA,GAAI,CAACsD,GAAI,SAASH,IAAOE,GAAIE,EAAAA,IAC3BP,EACChB,EAAAA,cAAC5B,EAAS,KACR4B,EAAAA,cAACwB,EAAAA,EAAW,CAACC,MAAOT,EAAMU,gBAAgBC,gBAAiBC,IAAKxB,KAEhE,KACJJ,EAAAA,cAACvB,EAAM,KACLuB,EAAAA,cAAA,MAAIO,UAAU,SAASH,GACvBJ,EAAAA,cAAA,YACEA,EAAAA,cAAC6B,EAAAA,GAAI,CAACC,KAAK,cAAcC,KAAK,iBAGlC/B,EAAAA,cAACpB,EAAM,KACLoB,EAAAA,cAAA,KAAGO,UAAU,WAAWW,IAE1BlB,EAAAA,cAACjB,EAAM,KACLiB,EAAAA,cAAA,YAAOiB,GACPjB,EAAAA,cAAA,YAAOe,EAAW,eAGjB,OAOrB,EAAC7B,CAAA,CAlDgC,CAAS8C,EAAAA,U,oICjE5C,MAAMC,GAAgBzE,EAAAA,EAAAA,SAAOQ,EAAAA,IAAKN,WAAA,CAAAC,YAAA,4BAAAC,YAAA,gBAAZJ,CAAY,qIAC9BW,EAAAA,EAAAA,IAAS,QASP+D,EAAS1E,EAAAA,QAAO2E,GAAEzE,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAATJ,CAAS,0BACpBW,EAAAA,EAAAA,IAAS,QAIPiE,EAAa5E,EAAAA,QAAO6E,GAAE3E,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAATJ,CAAS,iBACxBW,EAAAA,EAAAA,IAAS,QAEPA,EAAAA,EAAAA,IAAS,QAEb,IAEmBmE,EAAU,SAAAnD,GAC7B,SAAAmD,EAAYlD,GAAQ,IAADC,EAED,OADhBA,EAAAF,EAAAG,KAAA,KAAMF,IAAM,MACPG,MAAQ,CAAC,EAAEF,CAClB,CA4EC,OA5EAG,EAAAA,EAAAA,GAAA8C,EAAAnD,GAAAmD,EAAA7C,UAEDC,OAAA,WACE,MAAM,YAAEI,GAAgBF,KAAKR,MAAMS,KAAKE,gBAClC,MACJwC,EAAK,WACLC,EAAU,WACVC,EAAU,UACVC,EAAS,UACTC,EAAS,SACTC,GACE9C,EACJ,OACEE,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACC,EAAAA,GAAMC,OAAAC,OAAA,GAAKP,KAAKR,MAAK,CAAEgB,MAAON,EAAYM,SAC3CJ,EAAAA,cAACK,EAAAA,GAAWT,KAAKR,MACfY,EAAAA,cAACU,EAAAA,GAAI,KACHV,EAAAA,cAACM,EAAAA,GAAM,KACLN,EAAAA,cAAA,MAAIO,UAAU,QAAQT,EAAYU,SAClCR,EAAAA,cAAA,KAAGO,UAAU,QAAQT,EAAYW,aAEnCT,EAAAA,cAACiC,EAAa,KACZjC,EAAAA,cAAC6C,EAAAA,GAAM,CAACC,QAAM,EAACC,YAAU,EAACR,MAAOA,IACjCvC,EAAAA,cAACkC,EAAM,KACJQ,EACC1C,EAAAA,cAACoC,EAAU,KACTpC,EAAAA,cAAC6C,EAAAA,GAAM,CAACG,KAAM,uBAAuBN,KACnC1C,EAAAA,cAAC6B,EAAAA,GAAI,CAACC,KAAK,UAAUmB,KAAK,MACzBP,IAGH,KACHE,EACC5C,EAAAA,cAACoC,EAAU,KACTpC,EAAAA,cAAC6C,EAAAA,GAAM,CAACG,KAAM,sBAAsBJ,IAAYK,KAAK,KACnDjD,EAAAA,cAAC6B,EAAAA,GAAI,CAACC,KAAK,WACVc,IAGH,KACHH,EACCzC,EAAAA,cAACoC,EAAU,KACTpC,EAAAA,cAAC6C,EAAAA,GAAM,CACLG,KAAM,wBAAwBP,IAC9BQ,KAAK,KAELjD,EAAAA,cAAC6B,EAAAA,GAAI,CAACC,KAAK,aACVW,IAGH,KACHE,EACC3C,EAAAA,cAACoC,EAAU,KACTpC,EAAAA,cAAC6C,EAAAA,GAAM,CAACG,KAAM,uBAAuBL,IAAaM,KAAK,KACrDjD,EAAAA,cAAC6B,EAAAA,GAAI,CAACC,KAAK,YACVa,IAGH,KACHH,EACCxC,EAAAA,cAACoC,EAAU,KACTpC,EAAAA,cAAC6C,EAAAA,GAAM,CACLG,KAAM,wBAAwBR,IAC9BS,KAAK,KAELjD,EAAAA,cAAC6B,EAAAA,GAAI,CAACC,KAAK,aACVU,IAGH,SAOlB,EAACF,CAAA,CAhF4B,CAASN,EAAAA,U,8ICrBxC,MAAMkB,GAAc1F,EAAAA,EAAAA,SAAOQ,EAAAA,IAAKN,WAAA,CAAAC,YAAA,wBAAAC,YAAA,gBAAZJ,CAAY,0TAC5BW,EAAAA,EAAAA,IAAS,OAKTN,EAAAA,GAAWK,OACTC,EAAAA,EAAAA,IAAS,QAGTA,EAAAA,EAAAA,IAAS,QACFG,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,WAAW,GAMvCX,EAAAA,GAAWK,OASJQ,IAAA,IAAC,MAAEH,GAAOG,EAAA,OAAKH,EAAMC,WAAW,GAEvCX,EAAAA,GAAWK,OAIf,IAEmBiF,EAAQ,SAAAhE,GAC3B,SAAAgE,EAAY/D,GAAQ,IAADC,EAED,OADhBA,EAAAF,EAAAG,KAAA,KAAMF,IAAM,MACPG,MAAQ,CAAC,EAAEF,CAClB,CAqBC,OArBAG,EAAAA,EAAAA,GAAA2D,EAAAhE,GAAAgE,EAAA1D,UAEDC,OAAA,WACE,MAAM,YAAEI,GAAgBF,KAAKR,MAAMS,KAAKE,eACxC,OACEC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACC,EAAAA,GAAMC,OAAAC,OAAA,GAAKP,KAAKR,MAAK,CAAEgB,MAAON,EAAYM,SAC3CJ,EAAAA,cAACK,EAAAA,GAAWT,KAAKR,MACfY,EAAAA,cAACU,EAAAA,GAAI,KACHV,EAAAA,cAACM,EAAAA,GAAM,KACLN,EAAAA,cAAA,MAAIO,UAAU,QAAQT,EAAYU,SAClCR,EAAAA,cAAA,KAAGO,UAAU,QAAQT,EAAYW,aAEnCT,EAAAA,cAACkD,EAAW,KACVlD,EAAAA,cAAC6B,EAAAA,GAAI,CAACC,KAAK,WAAWvB,UAAU,UAChCP,EAAAA,cAAA,MAAIO,UAAU,QAAO,qBAMjC,EAAC4C,CAAA,CAzB0B,CAASnB,EAAAA,U,oICnCtC,MAAMoB,GAAY5F,EAAAA,EAAAA,SAAOQ,EAAAA,IAAKN,WAAA,CAAAC,YAAA,2BAAAC,YAAA,gBAAZJ,CAAY,yEAC1BW,EAAAA,EAAAA,IAAS,QACAG,IAAA,IAAC,UAAE+E,GAAW/E,EAAA,OAAM+E,EAAY,QAAU,MAAM,IAI3D,IAEmBC,EAAa,SAAAnE,GAChC,SAAAmE,EAAYlE,GAAQ,IAADC,EAK0B,OAJ3CA,EAAAF,EAAAG,KAAA,KAAMF,IAAM,MACPG,MAAQ,CACXgE,IAAK,eAEPlE,EAAKmE,UAAYnE,EAAKmE,UAAUC,KAAIpE,GAAOA,CAC7C,EAACG,EAAAA,EAAAA,GAAA8D,EAAAnE,GAAA,IAAAuE,EAAAJ,EAAA7D,UAmDA,OAnDAiE,EAEDF,UAAA,SAAUG,GACR/D,KAAKgE,SAAS,CAAEL,IAAKI,GACvB,EAACD,EAEDhE,OAAA,WACE,MAAM,YAAEI,GAAgBF,KAAKR,MAAMS,KAAKE,eAClC8D,EAAsBjE,KAAKR,MAAMS,KAAKiE,WAAWnD,MAAM,GAAGG,KAAKiD,KAC/DC,EAAuBpE,KAAKR,MAAMS,KAAKoE,YAAYtD,MAAM,GAAGG,KAAKiD,KACvE,OACE/D,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACC,EAAAA,GAAMC,OAAAC,OAAA,GAAKP,KAAKR,MAAK,CAAEgB,MAAM,gCAC9BJ,EAAAA,cAACK,EAAAA,GAAWT,KAAKR,MACfY,EAAAA,cAACM,EAAAA,GAAM,KACLN,EAAAA,cAAA,MAAIO,UAAU,QAAQT,EAAYU,SAClCR,EAAAA,cAAA,KAAGO,UAAU,QAAQT,EAAYW,aAEnCT,EAAAA,cAACU,EAAAA,GAAI,CACHwD,MAAO,CACLC,WAAY,OACZC,YAAa,OACbC,SAAU,UAGZrE,EAAAA,cAACsE,EAAAA,GAAI,CAACC,MAAO,GACXvE,EAAAA,cAACwE,EAAAA,GAAG,CACFC,YAAaA,IAAM7E,KAAK4D,UAAU,eAClCkB,SAA6B,gBAAnB9E,KAAKL,MAAMgE,KAEpBzD,EAAY6E,gBAEf3E,EAAAA,cAACwE,EAAAA,GAAG,CACFC,YAAaA,IAAM7E,KAAK4D,UAAU,cAClCkB,SAA6B,eAAnB9E,KAAKL,MAAMgE,KAEpBzD,EAAY8E,gBAGjB5E,EAAAA,cAACoD,EAAS,CAACC,UAA8B,gBAAnBzD,KAAKL,MAAMgE,KAC/BvD,EAAAA,cAAC6E,EAAAA,GAAI,CACHC,wBAAyB,CAAEC,OAAQf,MAGvChE,EAAAA,cAACoD,EAAS,CAACC,UAA8B,eAAnBzD,KAAKL,MAAMgE,KAC/BvD,EAAAA,cAAC6E,EAAAA,GAAI,CAACC,wBAAyB,CAAEC,OAAQlB,QAMrD,EAACP,CAAA,CA1D+B,CAAStB,EAAAA,U,wJCD3C,MAZgBxE,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,UAAAC,YAAA,gBAAVJ,CAAU,sFACtBW,EAAAA,EAAAA,IAAS,QAOPA,EAAAA,EAAAA,IAAS,QCDf,MAAM6G,GAAUxH,EAAAA,EAAAA,SAAOyH,GAAQvH,WAAA,CAAAC,YAAA,mBAAAC,YAAA,eAAfJ,CAAe,MACzB0H,EAAQ1H,EAAAA,QAAO2H,GAAEzH,WAAA,CAAAC,YAAA,iBAAAC,YAAA,eAATJ,CAAS,kBAEjBS,EAAAA,EAAAA,IAAQ,MAGRmH,EAAQ5H,EAAAA,QAAO2E,GAAEzE,WAAA,CAAAC,YAAA,iBAAAC,YAAA,eAATJ,CAAS,qIAEnBK,EAAAA,GAAWC,UASTuH,EAAO7H,EAAAA,QAAO6E,GAAE3E,WAAA,CAAAC,YAAA,gBAAAC,YAAA,eAATJ,CAAS,kCAClBK,EAAAA,GAAWK,OAEPC,EAAAA,EAAAA,IAAS,QAIXmH,EAAY9H,EAAAA,QAAO+H,GAAE7H,WAAA,CAAAC,YAAA,qBAAAC,YAAA,eAATJ,CAAS,UACvBW,EAAAA,EAAAA,IAAS,QAEPqH,EAAWhI,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,oBAAAC,YAAA,eAAVJ,CAAU,wCAChBc,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMU,KAAK,IAyCrC,MAnCA,SAAiBG,GACf,MAAM,QAAEqG,EAAO,MAAErF,EAAK,SAAEsF,GAAatG,EACrC,OACEY,EAAAA,cAACgF,EAAO,CAAC3D,GAAG,WACVrB,EAAAA,cAAA,OAAKO,UAAU,MACbP,EAAAA,cAACM,EAAAA,GAAM,CAACC,UAAU,MAChBP,EAAAA,cAACkF,EAAK,CAAC3E,UAAU,QAAQH,GACxBsF,EAAW1F,EAAAA,cAAA,KAAGO,UAAU,QAAQmF,GAAgB,MAEnD1F,EAAAA,cAACoF,EAAK,KACHK,EAAQ7E,KAAIlC,IAAe,IAAd,KAAEoC,GAAMpC,EACpB,MAAMiH,EAAS7E,EAAKhB,YACpB,OACEE,EAAAA,cAACqF,EAAI,CAACjE,IAAKN,EAAK8E,IACd5F,EAAAA,cAAChC,EAAAA,GAAI,CAACgF,KAAM2C,EAAOE,KAAMC,OAAO,SAASzE,GAAG,KAC1CrB,EAAAA,cAACsF,EAAS,KACRtF,EAAAA,cAACwB,EAAAA,EAAW,CAACC,MAAOkE,EAAOI,KAAKrE,gBAAgBC,gBAAiBC,IAAK+D,EAAO7D,QAE/E9B,EAAAA,cAACwF,EAAQ,CAACV,wBAAyB,CAAEC,OAAQjE,EAAKiD,SAE/C,MAOrB,E,UC5DA,MAAMiB,GAAUxH,EAAAA,EAAAA,SAAOyH,GAAQvH,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAfJ,CAAe,MACzB0H,EAAQ1H,EAAAA,QAAO2H,GAAEzH,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAATJ,CAAS,kBAEjBS,EAAAA,EAAAA,IAAQ,MAGRmH,EAAQ5H,EAAAA,QAAO2E,GAAEzE,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAATJ,CAAS,4MAEnBK,EAAAA,GAAWC,SAOXD,EAAAA,GAAWc,WAIT0G,EAAO7H,EAAAA,QAAO6E,GAAE3E,WAAA,CAAAC,YAAA,iBAAAC,YAAA,gBAATJ,CAAS,kCAClBK,EAAAA,GAAWK,OAEPC,EAAAA,EAAAA,IAAS,QAIX6H,EAAYxI,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAVJ,CAAU,qDACxBW,EAAAA,EAAAA,IAAS,QACSG,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,WAAW,IAElDE,IAAA,IAAC,gBAAEuH,EAAe,MAAE1H,GAAOG,EAAA,OAC3BuH,EACI,mCAEO1H,EAAMC,iNAUb,EAAE,IAEJ8G,EAAY9H,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAVJ,CAAU,6MAMtBS,EAAAA,EAAAA,IAAQ,MACDY,IAAA,IAAC,MAAEN,GAAOM,EAAA,OAAKN,EAAMC,WAAW,GAUzCX,EAAAA,GAAWc,WAMT6G,EAAWhI,EAAAA,QAAO0I,EAACxI,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAARJ,CAAQ,UACrBW,EAAAA,EAAAA,IAAS,QAsDb,MAnDA,SAAkBiB,GAChB,MAAM,SAAE+G,EAAQ,MAAE/F,EAAK,SAAEsF,GAAatG,EACtC,OACEY,EAAAA,cAACgF,EAAO,CAAC3D,GAAG,WACVrB,EAAAA,cAAA,OAAKO,UAAU,MACbP,EAAAA,cAACM,EAAAA,GAAM,CAACC,UAAU,MAChBP,EAAAA,cAACkF,EAAK,CAAC3E,UAAU,QAAQH,GACxBsF,EAAW1F,EAAAA,cAAA,KAAGO,UAAU,QAAQmF,GAAgB,MAEnD1F,EAAAA,cAACoF,EAAK,KACHe,EAASvF,KAAI5B,IAAe,IAAd,KAAE8B,GAAM9B,EACrB,MAAMoH,EAAUtF,EAAKhB,YACrB,OACEE,EAAAA,cAACqF,EAAI,CAACjE,IAAKN,EAAK8E,IACd5F,EAAAA,cAAChC,EAAAA,GAAI,CAACqD,GAAIE,EAAAA,GAAMD,GAAI,aAAa8E,EAAQjF,OACvCnB,EAAAA,cAACgG,EAAS,CAACC,iBAAkBG,EAAQpF,OACnChB,EAAAA,cAACwB,EAAAA,EAAW,CACVC,MAAO2E,EAAQpF,MACXoF,EAAQpF,MAAMU,gBAAgBC,gBAC9BvC,EAAMiH,YACVzE,IAAKwE,EAAQhG,QAEbgG,EAAQpF,MAIN,KAHFhB,EAAAA,cAAA,QAAMO,UAAU,YACdP,EAAAA,cAAC6B,EAAAA,GAAI,CAACC,KAAK,eAIjB9B,EAAAA,cAACsF,EAAS,KACRtF,EAAAA,cAAA,MAAIO,UAAU,SAAS6F,EAAQhG,OAC/BJ,EAAAA,cAAA,YACEA,EAAAA,cAAC6B,EAAAA,GAAI,CAACC,KAAK,cAAcC,KAAK,iBAGlC/B,EAAAA,cAACwF,EAAQ,KAAEY,EAAQE,UAEhB,MAOrB,ECtHA,MAAMtB,GAAUxH,EAAAA,EAAAA,SAAOyH,GAAQvH,WAAA,CAAAC,YAAA,oBAAAC,YAAA,eAAfJ,CAAe,MACzB0H,EAAQ1H,EAAAA,QAAO2H,GAAEzH,WAAA,CAAAC,YAAA,kBAAAC,YAAA,eAATJ,CAAS,kBAEjBS,EAAAA,EAAAA,IAAQ,MAGRmH,EAAQ5H,EAAAA,QAAO2E,GAAEzE,WAAA,CAAAC,YAAA,kBAAAC,YAAA,eAATJ,CAAS,oMAEnBK,EAAAA,GAAWC,SAQXD,EAAAA,GAAWc,WAIT0G,EAAO7H,EAAAA,QAAO6E,GAAE3E,WAAA,CAAAC,YAAA,iBAAAC,YAAA,eAATJ,CAAS,kCAClBK,EAAAA,GAAWK,OAEPC,EAAAA,EAAAA,IAAS,QAIXmH,EAAY9H,EAAAA,QAAO+H,GAAE7H,WAAA,CAAAC,YAAA,sBAAAC,YAAA,eAATJ,CAAS,8BACvBW,EAAAA,EAAAA,IAAS,QACTF,EAAAA,EAAAA,IAAQ,MAkCZ,MA9BA,SAAkBmB,GAChB,MAAM,SAAEmH,EAAQ,MAAEnG,EAAK,SAAEsF,GAAatG,EACtC,OACEY,EAAAA,cAACgF,EAAO,CAAC3D,GAAG,WACVrB,EAAAA,cAAA,OAAKO,UAAU,MACbP,EAAAA,cAACM,EAAAA,GAAM,CAACC,UAAU,MAChBP,EAAAA,cAACkF,EAAK,CAAC3E,UAAU,QAAQH,GACxBsF,EAAW1F,EAAAA,cAAA,KAAGO,UAAU,QAAQmF,GAAgB,MAEnD1F,EAAAA,cAACoF,EAAK,KACHmB,EAAS3F,KAAI,CAAC4F,EAASC,IACtBzG,EAAAA,cAACqF,EAAI,CAACjE,IAAKqF,GACTzG,EAAAA,cAAChC,EAAAA,GAAI,CAAC0I,MAAM,KACV1G,EAAAA,cAACsF,EAAS,CAAC/E,UAAU,aAAaiG,EAAQpG,OAC1CJ,EAAAA,cAAA,SAAIwG,EAAQzE,YAQ5B,ECvDA,MAAMiD,GAAUxH,EAAAA,EAAAA,SAAOyH,GAAQvH,WAAA,CAAAC,YAAA,wBAAAC,YAAA,gBAAfJ,CAAe,MACzB0H,EAAQ1H,EAAAA,QAAO2H,GAAEzH,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAATJ,CAAS,kBAEjBS,EAAAA,EAAAA,IAAQ,MAGRmH,EAAQ5H,EAAAA,QAAO2E,GAAEzE,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAATJ,CAAS,qIAEnBK,EAAAA,GAAWC,UASTuH,EAAO7H,EAAAA,QAAO6E,GAAE3E,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAATJ,CAAS,8OAGhBW,EAAAA,EAAAA,IAAS,QACTA,EAAAA,EAAAA,IAAS,QAIAG,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMoI,UAAU,IACtC1I,EAAAA,EAAAA,IAAQ,MAeVA,EAAAA,EAAAA,IAAQ,KAGVJ,EAAAA,GAAWK,OAEPC,EAAAA,EAAAA,IAAS,QAGbO,IAAA,IAAC,MAAEkI,GAAOlI,EAAA,OACVkI,EAAQ,iHAMJ,EAAE,IAmCV,MAhCA,SAAsBxH,GACpB,MAAM,aAAEyH,EAAY,MAAEzG,EAAK,SAAEsF,GAAatG,EAC1C,OACEY,EAAAA,cAACgF,EAAO,CAAC3D,GAAG,WACVrB,EAAAA,cAAA,OAAKO,UAAU,MACbP,EAAAA,cAACM,EAAAA,GAAM,CAACC,UAAU,MAChBP,EAAAA,cAACkF,EAAK,CAAC3E,UAAU,QAAQH,GACxBsF,EAAW1F,EAAAA,cAAA,KAAGO,UAAU,QAAQmF,GAAgB,MAEnD1F,EAAAA,cAACoF,EAAK,KACHyB,EAAajG,KAAI,CAACkG,EAAaL,IAC9BzG,EAAAA,cAACqF,EAAI,CAACjE,IAAKqF,EAAGG,MAAOE,EAAYC,MAC/B/G,EAAAA,cAAChC,EAAAA,GAAI,KACHgC,EAAAA,cAAA,cAAYO,UAAU,SACpBP,EAAAA,cAAA,SAAI8G,EAAY/E,OAElB/B,EAAAA,cAAA,KAAGO,UAAU,UAAS,KAAGuG,EAAYE,cAQrD,ECnFiD,IAE5BC,EAAO,SAAA9H,GAC1B,SAAA8H,EAAY7H,GAAQ,IAADC,EAED,OADhBA,EAAAF,EAAAG,KAAA,KAAMF,IAAM,MACPG,MAAQ,CAAC,EAAEF,CAClB,CAkDC,OAlDAG,EAAAA,EAAAA,GAAAyH,EAAA9H,GAAA8H,EAAAxH,UAEDC,OAAA,WACE,MAAM,YAAEI,GAAgBF,KAAKR,MAAMS,KAAKE,gBAClC,QAAE0F,EAAO,SAAEU,EAAQ,aAAEe,GAAiBtH,KAAKR,MAAMS,KACjDsH,EAAeD,EAAavG,MAAM,GAAGG,KAAKY,gBAChD,OACE1B,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACC,EAAAA,GAAMC,OAAAC,OAAA,GAAKP,KAAKR,MAAK,CAAEgB,MAAON,EAAYM,SAC3CJ,EAAAA,cAACK,EAAAA,GAAWT,KAAKR,MACfY,EAAAA,cAACoH,EAAAA,GAAK,KACJpH,EAAAA,cAAA,MAAIO,UAAU,QAAQT,EAAYU,SAClCR,EAAAA,cAACqH,EAAAA,GAAS,KACRrH,EAAAA,cAAC6C,EAAAA,GAAM,CAACC,QAAM,EAACE,KAAK,8GAA8G8C,OAAO,UAAS,kBAGlJ9F,EAAAA,cAAC6C,EAAAA,GAAM,CAACG,KAAK,6BAA6B8C,OAAO,UAAS,iBAC1D9F,EAAAA,cAAA,QAAMO,UAAU,QAAO,MACvBP,EAAAA,cAAC6C,EAAAA,GAAM,CAACvB,GAAG,WAAU,yBAGzBtB,EAAAA,cAACsH,EAAQ,CACPjB,YAAac,EAAaxF,gBAC1BwE,SAAUA,EAASxF,MACnB+E,SAAU5F,EAAYyH,iBACtBnH,MAAON,EAAY0H,gBAErBxH,EAAAA,cAACyH,EAAO,CACNrH,MAAON,EAAY4H,aACnBhC,SAAU5F,EAAY6H,gBACtBlC,QAASA,EAAQ9E,QAEnBX,EAAAA,cAAC4H,EAAQ,CACPxH,MAAON,EAAY+H,cACnBnC,SAAU5F,EAAYgI,iBACtBvB,SAAUzG,EAAYyG,WAExBvG,EAAAA,cAAC4H,EAAQ,CACPxH,MAAON,EAAYiI,YACnBrC,SAAU5F,EAAYkI,eACtBzB,SAAUzG,EAAYmI,SAExBjI,EAAAA,cAACkI,EAAY,CACX9H,MAAON,EAAYqI,kBACnBzC,SAAU5F,EAAYsI,qBACtBvB,aAAc/G,EAAY+G,gBAKpC,EAACI,CAAA,CAtDyB,CAASjF,EAAAA,U,gHCPqB,IAErCqG,EAAU,SAAAlJ,GAC7B,SAAAkJ,EAAYjJ,GAAQ,IAADC,EAED,OADhBA,EAAAF,EAAAG,KAAA,KAAMF,IAAM,MACPG,MAAQ,CAAC,EAAEF,CAClB,CA+BC,OA/BAG,EAAAA,EAAAA,GAAA6I,EAAAlJ,GAAAkJ,EAAA5I,UAEDC,OAAA,WACE,MAAM,YAAEI,EAAW,KAAEiE,GAASnE,KAAKR,MAAMS,KAAKE,eAC9C,OACEC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACC,EAAAA,GAAMC,OAAAC,OAAA,GAAKP,KAAKR,MAAK,CAAEgB,MAAON,EAAYM,SAC3CJ,EAAAA,cAACK,EAAAA,GAAWT,KAAKR,MACfY,EAAAA,cAACoH,EAAAA,GAAK,KACJpH,EAAAA,cAAA,MAAIO,UAAU,QAAQT,EAAYU,SAClCR,EAAAA,cAACqH,EAAAA,GAAS,KACRrH,EAAAA,cAAC6C,EAAAA,GAAM,CAACC,QAAM,EAACxB,GAAG,aACfxB,EAAYwI,aAEftI,EAAAA,cAAC6C,EAAAA,GAAM,CAACvB,GAAG,YAAYxB,EAAYyI,cAGvCvI,EAAAA,cAACU,EAAAA,GAAI,CACHwD,MAAO,CACLC,WAAY,OACZC,YAAa,OACbC,SAAU,UAGZrE,EAAAA,cAAChC,EAAAA,GAAI,CAAC0I,MAAM,KACV1G,EAAAA,cAAC6E,EAAAA,GAAI,CAACC,wBAAyB,CAAEC,OAAQhB,QAMrD,EAACsE,CAAA,CAnC4B,CAASrG,EAAAA,U,wJCIxC,MAAMwG,EAAehL,EAAAA,QAAOC,GAAEC,WAAA,CAAAC,YAAA,yBAAAC,YAAA,eAATJ,CAAS,kIAC1BK,EAAAA,GAAWC,UAST2K,GAAUjL,EAAAA,EAAAA,SAAOQ,EAAAA,IAAKN,WAAA,CAAAC,YAAA,oBAAAC,YAAA,eAAZJ,CAAY,6DACxBS,EAAAA,EAAAA,IAAQ,KAGRJ,EAAAA,GAAWK,OACTC,EAAAA,EAAAA,IAAS,QAEXG,IAAA,IAAC,WAAEoK,GAAYpK,EAAA,OACfoK,EACI,iHAMA,EAAE,IAGJC,EAAenL,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,yBAAAC,YAAA,eAAVJ,CAAU,6CAC3BW,EAAAA,EAAAA,IAAS,QACSO,IAAA,IAAC,MAAEH,GAAOG,EAAA,OAAKH,EAAMC,WAAW,IAIhDoK,EAAYpL,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,sBAAAC,YAAA,eAAVJ,CAAU,+GAMtBS,EAAAA,EAAAA,IAAQ,MACDY,IAAA,IAAC,MAAEN,GAAOM,EAAA,OAAKN,EAAMC,WAAW,IAKvCqK,EAAYrL,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,sBAAAC,YAAA,eAAVJ,CAAU,6BACxBW,EAAAA,EAAAA,IAAS,QACFa,IAAA,IAAC,MAAET,GAAOS,EAAA,OAAKT,EAAMO,UAAU,GACtC+F,EAAAA,IACE1G,EAAAA,EAAAA,IAAS,QAEb,IAEmB2K,EAAQ,SAAA3J,GAC3B,SAAA2J,EAAY1J,GAAQ,IAADC,EAED,OADhBA,EAAAF,EAAAG,KAAA,KAAMF,IAAM,MACPG,MAAQ,CAAC,EAAEF,CAClB,CAoDC,OApDAG,EAAAA,EAAAA,GAAAsJ,EAAA3J,GAAA2J,EAAArJ,UAEDC,OAAA,WACE,MAAM,SAAEqJ,GAAanJ,KAAKR,MAAMS,MAC1B,YAAEC,GAAgBF,KAAKR,MAAMS,KAAKE,eACxC,OAAOC,EAAAA,cAAAA,EAAAA,SAAA,KACLA,EAAAA,cAACC,EAAAA,GAAMC,OAAAC,OAAA,GAAKP,KAAKR,MAAK,CAAEgB,MAAON,EAAYM,SAC3CJ,EAAAA,cAACK,EAAAA,GAAWT,KAAKR,MACfY,EAAAA,cAACM,EAAAA,GAAM,KACLN,EAAAA,cAAA,MAAIO,UAAU,QAAQT,EAAYU,SAClCR,EAAAA,cAAA,KAAGO,UAAU,QAAQT,EAAYW,aAEnCT,EAAAA,cAACU,EAAAA,GAAI,KACHV,EAAAA,cAACwI,EAAY,KACVO,EAASpI,MAAMC,KAAIC,IAAe,IAAd,KAAEC,GAAMD,EAC3B,MAAM,KAAEkD,GAASjD,GACX,MACJE,EAAK,YACLgI,EAAW,OACXhC,EAAM,UACNiC,EAAS,MACT7I,GACEU,EAAKhB,YACT,OACEE,EAAAA,cAACyI,EAAO,CAACpH,GAAG,KAAKqH,WAAYO,EAAW7H,IAAKhB,GAC3CJ,EAAAA,cAAChC,EAAAA,GAAI,CAACgF,KAAMgE,EAAQlB,OAAO,SAASzE,GAAG,KACpCL,EACChB,EAAAA,cAAC2I,EAAY,KACX3I,EAAAA,cAACwB,EAAAA,EAAW,CAACC,MAAOT,EAAMU,gBAAgBC,gBAAiBC,IAAKxB,KAEhE,KACJJ,EAAAA,cAAC4I,EAAS,KACR5I,EAAAA,cAAA,MAAIO,UAAU,SAASH,GACvBJ,EAAAA,cAAA,YACEA,EAAAA,cAAC6B,EAAAA,GAAI,CAACC,KAAK,SAASC,KAAK,wBAG7B/B,EAAAA,cAAC6I,EAAS,KACP9E,EACC/D,EAAAA,cAAC6E,EAAAA,GAAI,CAACC,wBAAyB,CAAEC,OAAQhB,KACvC,KAEJ/D,EAAAA,cAAA,SAAG,MAAIgJ,KAGH,OAOxB,EAACF,CAAA,CAxD0B,CAAS9G,EAAAA,U,kKCxDtC,MAAMkH,EAAS1L,EAAAA,QAAO6E,GAAE3E,WAAA,CAAAC,YAAA,SAAAC,YAAA,eAATJ,CAAS,gOAOG2L,EAAAA,GAAKC,EAAgBD,EAAAA,GAAKC,GAEvB9K,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAM8K,WAAW,GAG1DxL,EAAAA,GAAWC,UACTK,EAAAA,EAAAA,IAAS,QAKTmL,EAAY9L,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,oBAAAC,YAAA,eAAVJ,CAAU,wDACZkB,IAAA,IAAC,MAAEH,EAAK,WAAEgL,GAAY7K,EAAA,OAAM6K,EAAa,GAAKhL,EAAMC,WAAW,IACzDK,IAAA,IAAC,MAAEN,GAAOM,EAAA,OAAKN,EAAMoI,UAAU,GACvC,IAAM,GAGd6C,EAAgBhM,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,wBAAAC,YAAA,eAAVJ,CAAU,4FAC5BW,EAAAA,EAAAA,IAAS,QACTF,EAAAA,EAAAA,IAAQ,KACRJ,EAAAA,GAAWK,OAQTuL,EAAajM,EAAAA,QAAO+H,GAAE7H,WAAA,CAAAC,YAAA,qBAAAC,YAAA,eAATJ,CAAS,qFACxBS,EAAAA,EAAAA,IAAQ,MACDe,IAAA,IAAC,MAAET,GAAOS,EAAA,OAAKT,EAAMU,KAAK,IAI7BhB,EAAAA,EAAAA,IAAQ,MACD4C,IAAA,IAAC,MAAEtC,GAAOsC,EAAA,OAAKtC,EAAMC,WAAW,IAMzCkL,EAAclM,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,sBAAAC,YAAA,eAAVJ,CAAU,uDAC1BW,EAAAA,EAAAA,IAAS,QAEPA,EAAAA,EAAAA,IAAS,OAGXN,EAAAA,GAAWK,OA+Ff,MA1FA,SAAgBkB,GACd,MAAM,cAAEuK,GAAkBvK,GACpB,YAAEU,GAAgBV,EAAMS,MACxB,OACJ+J,EAAM,QACNC,EAAO,MACPC,EAAK,OACLC,EAAM,MACNC,EAAK,SACLC,EAAQ,QACRC,EAAO,QACPC,GACErK,EACJ,OACEE,EAAAA,cAACkJ,EAAM,CAACkB,QAAShL,EAAMiL,YAAaC,KAAK,UACvCtK,EAAAA,cAACsJ,EAAS,CAACC,WAAYK,GACrB5J,EAAAA,cAACwB,EAAAA,EAAW,CACVC,MAAOmI,EAASA,EAAOlI,gBAAgBC,gBAAkBgI,EAAchI,gBACvEC,IAAI,MAGR5B,EAAAA,cAACwJ,EAAa,KACZxJ,EAAAA,cAACyJ,EAAU,KACTzJ,EAAAA,cAAA,YAAO8J,GAAa,IAAC9J,EAAAA,cAAA,YAAOgK,IAE9BhK,EAAAA,cAAC0J,EAAW,KACTS,EACCnK,EAAAA,cAAC6C,EAAAA,GAAM,CACLuH,QAASG,GAAKA,EAAEC,kBAChBxH,KAAM,WAAWmH,KACjBM,IAAI,+BACJ3E,OAAO,UAEP9F,EAAAA,cAAC6B,EAAAA,GAAI,CAACC,KAAK,UAAUmB,KAAK,OAE1B,KACH4G,EACC7J,EAAAA,cAAC6C,EAAAA,GAAM,CACLuH,QAASG,GAAKA,EAAEC,kBAChBxH,KAAM,4BAA4B6G,IAClCY,IAAI,+BACJ3E,OAAO,UAEP9F,EAAAA,cAAC6B,EAAAA,GAAI,CAACC,KAAK,UAAUmB,KAAK,OAE1B,KACHgH,EACCjK,EAAAA,cAAC6C,EAAAA,GAAM,CACLuH,QAASG,GAAKA,EAAEC,kBAChBxH,KAAM,WAAWiH,IACjBQ,IAAI,+BACJ3E,OAAO,UAEP9F,EAAAA,cAAC6B,EAAAA,GAAI,CAACC,KAAK,WAAWmB,KAAK,OAE3B,KACHiH,EACClK,EAAAA,cAAC6C,EAAAA,GAAM,CACLuH,QAASG,GAAKA,EAAEC,kBAChBxH,KAAM,uBAAuBkH,IAC7BO,IAAI,+BACJ3E,OAAO,UAEP9F,EAAAA,cAAC6B,EAAAA,GAAI,CAACC,KAAK,UAAUmB,KAAK,OAE1B,KACH8G,EACC/J,EAAAA,cAAC6C,EAAAA,GAAM,CACLuH,QAASG,GAAKA,EAAEC,kBAChBxH,KAAM,sBAAsB+G,IAC5BU,IAAI,+BACJ3E,OAAO,UAEP9F,EAAAA,cAAC6B,EAAAA,GAAI,CAACC,KAAK,SAASmB,KAAK,OAEzB,OAKd,EC5IA,MAAMiG,EAAS1L,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,sBAAAC,YAAA,eAAVJ,CAAU,+CACrBW,EAAAA,EAAAA,IAAS,OACTN,EAAAA,GAAWC,UAUTwL,EAAY9L,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,yBAAAC,YAAA,eAAVJ,CAAU,2GACZc,IAAA,IAAC,WAAEiL,EAAU,MAAEhL,GAAOD,EAAA,OACjCiL,EAAiC,GAApBhL,EAAMC,WAAgB,GACpCX,EAAAA,GAAWC,SACC,GAEZD,EAAAA,GAAWK,OACTC,EAAAA,EAAAA,IAAS,QAQTqL,EAAgBhM,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,6BAAAC,YAAA,eAAVJ,CAAU,mBAC5BS,EAAAA,EAAAA,IAAQ,KACRJ,EAAAA,GAAWC,UACTK,EAAAA,EAAAA,IAAS,QAGTsL,EAAajM,EAAAA,QAAOkN,GAAEhN,WAAA,CAAAC,YAAA,0BAAAC,YAAA,eAATJ,CAAS,oCACxBS,EAAAA,EAAAA,IAAQ,MAEDS,IAAA,IAAC,MAAEH,GAAOG,EAAA,OAAKH,EAAMO,UAAU,IAEpC6L,EAAYnN,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,yBAAAC,YAAA,eAAVJ,CAAU,wBACxBW,EAAAA,EAAAA,IAAS,QACTF,EAAAA,EAAAA,IAAQ,MACDY,IAAA,IAAC,MAAEN,GAAOM,EAAA,OAAKN,EAAMO,UAAU,IAEpC8L,EAAcpN,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,2BAAAC,YAAA,eAAVJ,CAAU,UAC1BW,EAAAA,EAAAA,IAAS,QAEP0M,EAAerN,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,4BAAAC,YAAA,eAAVJ,CAAU,6CAEzBW,EAAAA,EAAAA,IAAS,QAGTA,EAAAA,EAAAA,IAAS,QAwGf,MA5FgDa,IAIzC,IAJ0C,cAC/C2K,EAAa,KACb9J,EAAI,YACJwK,GACDrL,EACC,MAAM,YAAEc,EAAW,KAAEiE,GAASlE,GACxB,OACJ+J,EAAM,QACNC,EAAO,MACPC,EAAK,OACLC,EAAM,MACNC,EAAK,SACLC,EAAQ,MACRa,EAAK,QACLZ,EAAO,QACPC,GACErK,EAEJ,OACEE,EAAAA,cAAC+K,EAAAA,GAAK,CAACV,YAAaA,GAClBrK,EAAAA,cAACkJ,EAAM,KACLlJ,EAAAA,cAACsJ,EAAS,CAACC,WAAYK,GACrB5J,EAAAA,cAACwB,EAAAA,EAAW,CACVC,MACEmI,EACIA,EAAOlI,gBAAgBC,gBACvBgI,EAAchI,gBAEpBC,IAAI,MAGR5B,EAAAA,cAACwJ,EAAa,KACZxJ,EAAAA,cAACyJ,EAAU,KACRK,EAAM,IAAEE,GAEXhK,EAAAA,cAAC2K,EAAS,KACR3K,EAAAA,cAAC6E,EAAAA,GAAI,CAACC,wBAAyB,CAAEC,OAAQhB,QAAAA,EAAQ,OAEnD/D,EAAAA,cAAC4K,EAAW,KAAEE,GACd9K,EAAAA,cAAC6K,EAAY,KACVV,GACCnK,EAAAA,cAAC6C,EAAAA,GAAM,CACLG,KAAM,WAAWmH,KACjBM,IAAI,+BACJ3E,OAAO,UAEP9F,EAAAA,cAAC6B,EAAAA,GAAI,CAACC,KAAK,YAAY,YAG1B+H,GACC7J,EAAAA,cAAC6C,EAAAA,GAAM,CACLG,KAAM,4BAA4B6G,IAClCY,IAAI,+BACJ3E,OAAO,UAEP9F,EAAAA,cAAC6B,EAAAA,GAAI,CAACC,KAAK,YAAY,YAG1BmI,GACCjK,EAAAA,cAAC6C,EAAAA,GAAM,CACLG,KAAM,WAAWiH,IACjBQ,IAAI,+BACJ3E,OAAO,UAEP9F,EAAAA,cAAC6B,EAAAA,GAAI,CAACC,KAAK,aAAa,aAG3BoI,GACClK,EAAAA,cAAC6C,EAAAA,GAAM,CACLG,KAAM,uBAAuBkH,IAC7BO,IAAI,+BACJ3E,OAAO,UAEP9F,EAAAA,cAAC6B,EAAAA,GAAI,CAACC,KAAK,YAAY,YAG1BiI,GACC/J,EAAAA,cAAC6C,EAAAA,GAAM,CACLG,KAAM,sBAAsB+G,IAC5BU,IAAI,+BACJ3E,OAAO,UAEP9F,EAAAA,cAAC6B,EAAAA,GAAI,CAACC,KAAK,WAAW,cAM1B,ECnJZ,MAAMkJ,EAAgBxN,EAAAA,QAAOyN,QAAOvN,WAAA,CAAAC,YAAA,2BAAAC,YAAA,eAAdJ,CAAc,UAChCW,EAAAA,EAAAA,IAAS,QAGP+M,EAAS1N,EAAAA,QAAO2E,GAAEzE,WAAA,CAAAC,YAAA,oBAAAC,YAAA,eAATJ,CAAS,kMACT2N,EAAAA,EAAUhC,EAAAA,GAAKiC,EAI1BvN,EAAAA,GAAWK,MAGXL,EAAAA,GAAWC,UAKTuN,EAAc7N,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,yBAAAC,YAAA,eAAVJ,CAAU,+KAC1BW,EAAAA,EAAAA,IAAS,QAGPA,EAAAA,EAAAA,IAAS,QACTA,EAAAA,EAAAA,IAAS,QACTA,EAAAA,EAAAA,IAAS,QACTF,EAAAA,EAAAA,IAAQ,MAEDK,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,WAAW,GAGvB8M,EAAAA,GAAMC,GAItBtN,EAAAA,EAAAA,IAAQ,MAGZ,IAEmBuN,EAAS,SAAArM,GAC5B,SAAAqM,EAAYpM,GAAQ,IAADC,EAKwC,OAJzDA,EAAAF,EAAAG,KAAA,KAAMF,IAAM,MACPG,MAAQ,CACXkM,cAAe,MAEjBpM,EAAKqM,iBAAmBrM,EAAKqM,iBAAiBjI,KAAIpE,GAAOA,CAC3D,EAACG,EAAAA,EAAAA,GAAAgM,EAAArM,GAAA,IAAAuE,EAAA8H,EAAA/L,UAiFA,OAjFAiE,EAEDgI,iBAAA,SAAiBC,GACf/L,KAAKgE,UAASgI,IAAS,CACrBH,cAAeG,EAAUH,cAAgB,KAAOE,KAEpD,EAACjI,EAEDhE,OAAA,WACE,MAAM,cAAE+L,GAAkB7L,KAAKL,OACzB,cAAEoK,EAAa,UAAEkC,EAAS,QAAEC,EAAO,YAAEC,GAAgBnM,KAAKR,MAAMS,MAChE,YAAEC,GAAgBF,KAAKR,MAAMS,KAAKE,eAClCiM,EAAgBrC,EAAchJ,MAAM,GAAGG,KAAKY,gBAClD,OACE1B,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACC,EAAAA,GAAMC,OAAAC,OAAA,GAAKP,KAAKR,MAAK,CAAEgB,MAAON,EAAYM,SAC3CJ,EAAAA,cAACK,EAAAA,GAAWT,KAAKR,MACfY,EAAAA,cAACM,EAAAA,GAAM,KACLN,EAAAA,cAAA,MAAIO,UAAU,QAAQT,EAAYU,SAClCR,EAAAA,cAAA,KAAGO,UAAU,QAAQT,EAAYW,aAEnCT,EAAAA,cAACU,EAAAA,GAAI,KACHV,EAAAA,cAACgL,EAAa,KACZhL,EAAAA,cAACqL,EAAW,KACVrL,EAAAA,cAAA,UAAKF,EAAYmM,kBACjBjM,EAAAA,cAAA,SAAIF,EAAYoM,iBAElBlM,EAAAA,cAACkL,EAAM,KACJW,EAAUlL,MAAMC,KAAIlC,IAAA,IAAC,KAAEoC,GAAMpC,EAAA,OAC5BsB,EAAAA,cAACkJ,EAAM,CACLrJ,KAAMiB,EACN6I,cAAeqC,EACf5K,IAAKN,EAAKhB,YAAYqB,IACtBkJ,YAAaE,GAAK3K,KAAK8L,iBAAiB5K,EAAMyJ,IAC9C,MAIRvK,EAAAA,cAACqL,EAAW,KACVrL,EAAAA,cAAA,UAAKF,EAAYqM,gBACjBnM,EAAAA,cAAA,SAAIF,EAAYsM,eAElBpM,EAAAA,cAACgL,EAAa,KACZhL,EAAAA,cAACkL,EAAM,KACJY,EAAQnL,MAAMC,KAAI/B,IAAA,IAAC,KAAEiC,GAAMjC,EAAA,OAC1BmB,EAAAA,cAACkJ,EAAM,CACLrJ,KAAMiB,EACN6I,cAAeqC,EACf5K,IAAKN,EAAKhB,YAAYqB,IACtBkJ,YAAaE,GAAK3K,KAAK8L,iBAAiB5K,EAAMyJ,IAC9C,MAIRvK,EAAAA,cAACgL,EAAa,KACZhL,EAAAA,cAACqL,EAAW,KACVrL,EAAAA,cAAA,UAAKF,EAAYuM,oBACjBrM,EAAAA,cAAA,SAAIF,EAAYwM,mBAElBtM,EAAAA,cAACkL,EAAM,KACJa,EAAYpL,MAAMC,KAAI5B,IAAA,IAAC,KAAE8B,GAAM9B,EAAA,OAC9BgB,EAAAA,cAACkJ,EAAM,CACLrJ,KAAMiB,EACN6I,cAAeqC,EACf5K,IAAKN,EAAKhB,YAAYqB,IACtBkJ,YAAaE,GAAK3K,KAAK8L,iBAAiB5K,EAAMyJ,IAC9C,OAKS,OAAlBkB,EACCzL,EAAAA,cAACuM,EAAW,CACVlC,YAAazK,KAAK8L,iBAClB7L,KAAM4L,EACN9B,cAAeqC,IAEf,MAIZ,EAACR,CAAA,CAxF2B,CAASxJ,EAAAA,U,8ICxCvC,MAAMwK,EAAOhP,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAVJ,CAAU,+FACnBK,EAAAA,GAAWC,UAOPK,EAAAA,EAAAA,IAAS,QAGTA,EAAAA,EAAAA,IAAS,QAKXsO,GAASjP,EAAAA,EAAAA,SAAOgP,GAAK9O,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAZJ,CAAY,+GACvBW,EAAAA,EAAAA,IAAS,OACTN,EAAAA,GAAWC,SAUXD,EAAAA,GAAWK,OAEPC,EAAAA,EAAAA,IAAS,QAKXuO,GAASlP,EAAAA,EAAAA,SAAOgP,GAAK9O,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAZJ,CAAY,iDACvBW,EAAAA,EAAAA,IAAS,QAEAG,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,WAAW,IAKvCmO,EAASnP,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAVJ,CAAU,cACrBW,EAAAA,EAAAA,IAAS,QACTF,EAAAA,EAAAA,IAAQ,MAGN2O,EAAQpP,EAAAA,QAAOkN,GAAEhN,WAAA,CAAAC,YAAA,wBAAAC,YAAA,gBAATJ,CAAS,wBACnBW,EAAAA,EAAAA,IAAS,QACTF,EAAAA,EAAAA,IAAQ,MACDS,IAAA,IAAC,MAAEH,GAAOG,EAAA,OAAKH,EAAMsO,WAAW,IAGrCC,EAAOtP,EAAAA,QAAO0I,EAACxI,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAARJ,CAAQ,6DACjBS,EAAAA,EAAAA,IAAQ,MAEDY,IAAA,IAAC,MAAEN,GAAOM,EAAA,OAAKN,EAAMO,UAAU,IAIpCiO,EAAUvP,EAAAA,QAAO0I,EAACxI,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAARJ,CAAQ,wCACpBW,EAAAA,EAAAA,IAAS,QACTF,EAAAA,EAAAA,IAAQ,MAEDe,IAAA,IAAC,MAAET,GAAOS,EAAA,OAAKT,EAAMO,UAAU,IAGpCkO,EAAcxP,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,8BAAAC,YAAA,gBAAVJ,CAAU,8PACnBqD,IAAA,IAAC,MAAEtC,GAAOsC,EAAA,OAAKtC,EAAMO,UAAU,IAGlCX,EAAAA,EAAAA,IAAS,QAYJ8O,IAAA,IAAC,MAAE1O,GAAO0O,EAAA,OAAK1O,EAAMC,WAAW,IAMhC0O,IAAA,IAAC,MAAE3O,GAAO2O,EAAA,OAAK3O,EAAMO,UAAU,IAKtCb,EAAAA,EAAAA,IAAQ,MAGRE,EAAAA,EAAAA,IAAS,QACFgP,IAAA,IAAC,MAAE5O,GAAO4O,EAAA,OAAK5O,EAAMU,KAAK,GAOnCpB,EAAAA,GAAWK,OACTC,EAAAA,EAAAA,IAAS,QAITiP,EAAO5P,EAAAA,QAAO0I,EAACxI,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAARJ,CAAQ,6DACjBS,EAAAA,EAAAA,IAAQ,MACDoP,IAAA,IAAC,MAAE9O,GAAO8O,EAAA,OAAK9O,EAAMO,UAAU,IAKpCwO,EAAS9P,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAVJ,CAAU,kGACrBW,EAAAA,EAAAA,IAAS,QACTF,EAAAA,EAAAA,IAAQ,MACDsP,IAAA,IAAC,MAAEhP,GAAOgP,EAAA,OAAKhP,EAAMO,UAAU,IAEpCX,EAAAA,EAAAA,IAAS,QACFqP,IAAA,IAAC,MAAEjP,GAAOiP,EAAA,OAAKjP,EAAMsO,WAAW,IAOhCY,IAAA,IAAC,MAAElP,GAAOkP,EAAA,OAAKlP,EAAMsO,WAAW,IAIvCa,EAAQlQ,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,wBAAAC,YAAA,iBAAVJ,CAAU,2GACpBW,EAAAA,EAAAA,IAAS,QACTF,EAAAA,EAAAA,IAAQ,MACD0P,IAAA,IAAC,MAAEpP,GAAOoP,EAAA,OAAKpP,EAAMO,UAAU,IAMpCX,EAAAA,EAAAA,IAAS,QACFyP,IAAA,IAAC,MAAErP,GAAOqP,EAAA,OAAKrP,EAAMsO,WAAW,IAIhCgB,IAAA,IAAC,MAAEtP,GAAOsP,EAAA,OAAKtP,EAAMsO,WAAW,IAE3C,IAEmBiB,EAAc,SAAA3O,GACjC,SAAA2O,EAAY1O,GAAQ,IAADC,EAED,OADhBA,EAAAF,EAAAG,KAAA,KAAMF,IAAM,MACPG,MAAQ,CAAC,EAAEF,CAClB,CA+KC,OA/KAG,EAAAA,EAAAA,GAAAsO,EAAA3O,GAAA2O,EAAArO,UAEDC,OAAA,WACE,MAAMqO,EAAgBnO,KAAKR,MAAMS,KAAKE,eAChCoH,EAAevH,KAAKR,MAAMS,KAAKqH,aAAavG,MAAM,GAAGG,KACxDY,iBACG,YAAE5B,EAAW,KAAEiE,GAASgK,GACxB,YACJC,EAAW,OACXC,EAAM,YACNC,EAAW,MACXlN,EAAK,KACLC,EAAI,OACJkN,EAAM,KACNtI,EAAI,MACJuI,EAAK,KACLC,EAAI,OACJrH,EAAM,QACNV,EAAO,UACPgI,EAAS,MACTlO,GACEN,EAaJ,OACEE,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACC,EAAAA,GAAMC,OAAAC,OAAA,GAAKP,KAAKR,MAAK,CAAEgB,MAAOA,KAC/BJ,EAAAA,cAACK,EAAAA,GAAWT,KAAKR,MACfY,EAAAA,cAACM,EAAAA,GAAM,KACLN,EAAAA,cAAA,QAAMO,UAAU,SAAQ,mBACxBP,EAAAA,cAAA,MAAIO,UAAU,QAAQ2N,GACtBlO,EAAAA,cAAA,QAAMO,UAAU,SAASU,IAE3BjB,EAAAA,cAACU,EAAAA,GAAI,KACHV,EAAAA,cAAChC,EAAAA,GAAI,CAAC0I,MAAM,KACV1G,EAAAA,cAACyM,EAAM,KACLzM,EAAAA,cAAA,OAAKO,UAAU,SACbP,EAAAA,cAAA,OAAKO,UAAU,QACbP,EAAAA,cAAC4M,EAAK,KAAC,gBACP5M,EAAAA,cAAC8M,EAAI,KAAE1M,KAGXJ,EAAAA,cAAA,OAAKO,UAAU,SACbP,EAAAA,cAAA,OAAKO,UAAU,QACbP,EAAAA,cAAC4M,EAAK,KAAC,aACP5M,EAAAA,cAACoN,EAAI,KAAEkB,IAETtO,EAAAA,cAAA,OAAKO,UAAU,QACbP,EAAAA,cAAC4M,EAAK,KAAC,QACP5M,EAAAA,cAACoN,EAAI,KAAEiB,MAIbrO,EAAAA,cAAC0M,EAAM,KACL1M,EAAAA,cAAA,OAAKO,UAAU,SACbP,EAAAA,cAAC4M,EAAK,KAAC,WACP5M,EAAAA,cAAC+M,EAAO,KAAEzG,GACVtG,EAAAA,cAAC4M,EAAK,KAAC,eACP5M,EAAAA,cAACgN,EAAW,CAAClI,wBAAyB,CAAEC,OAAQhB,MAElD/D,EAAAA,cAAA,OAAKO,UAAU,SACbP,EAAAA,cAAC4M,EAAK,KAAC,uBAhDE2B,MACrB,MAAMC,EAAS,GAOf,OANIxN,GACFwN,EAAOC,KAAKzN,EAAMU,gBAAgBC,iBAEhCwM,GACFA,EAAOO,SAAQC,GAASH,EAAOC,KAAKE,EAAMjN,gBAAgBC,mBAErD3B,EAAAA,cAAC4O,EAAAA,GAAO,CAACJ,OAAQA,EAAQK,aAAc1H,EAAaxF,iBAAmB,EAyCjE4M,GACAN,GAAUA,EAAOa,OAAS,GACzB9O,EAAAA,cAACsN,EAAM,KACLtN,EAAAA,cAAC4M,EAAK,KAAC,wBACP5M,EAAAA,cAAA,UACGiO,EAAOrN,KAAI,CAAAmO,EAA6BtI,KAAO,IAAnC,KAAE3E,EAAI,IAAEkN,EAAG,YAAEC,GAAaF,EACrC,IAAKjN,EAAM,OAAO,KAClB,MAAMoN,EAAYF,EAChBhP,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,KAAGgD,KAAMgM,EAAKlJ,OAAO,SAAS2E,IAAI,uBAChCzK,EAAAA,cAAA,cAAS8B,IACN,IACL9B,EAAAA,cAAC6B,EAAAA,GAAI,CAACC,KAAK,YAGb9B,EAAAA,cAAA,cAAS8B,GAGX,OACE9B,EAAAA,cAAA,MAAIoB,IAAK,GAAGU,KAAQ2E,KACjByI,EACAD,EAAc,IAAIA,IAAgB,GAChC,MAMfjP,EAAAA,cAAC0N,EAAK,KACH1G,GAAUgH,EACThO,EAAAA,cAAA,OAAKO,UAAU,QAAQ2D,MAAO,CAAEiL,QAAS,MACvCnP,EAAAA,cAAC4M,EAAK,KAAC,eACP5M,EAAAA,cAAA,UACGgH,EACChH,EAAAA,cAAA,UACEA,EAAAA,cAAA,KAAGgD,KAAMgE,EAAQlB,OAAO,SAAS2E,IAAI,uBAAsB,eAEtD,IACLzK,EAAAA,cAAC6B,EAAAA,GAAI,CAACC,KAAK,YAEX,KACHkM,EACChO,EAAAA,cAAA,UACEA,EAAAA,cAAA,KAAGgD,KAAMgL,EAAalI,OAAO,SAAS2E,IAAI,uBAAsB,sBAE3D,IACLzK,EAAAA,cAAC6B,EAAAA,GAAI,CAACC,KAAK,YAEX,OAGN,KACH5B,OAAOkP,KAAKhB,GAAOU,OAAS,EAC3B9O,EAAAA,cAAA,OAAKO,UAAU,QAAQ2D,MAAO,CAAEiL,QAAS,MACvCnP,EAAAA,cAAC4M,EAAK,KAAC,SACP5M,EAAAA,cAAA,UACGE,OAAOkP,KAAKhB,GAAOxN,KAAIyO,IACtB,MAAMC,EAAO,CACXjB,KAAM,OACNkB,QAAS,iBACTC,MAAO,QACPC,MAAO,QACPC,KAAM,kBAER,OAAItB,EAAMiB,GAENrP,EAAAA,cAAA,MAAIoB,IAAKiO,GACG,UAATA,EAAmBC,EAAKD,GAAQjB,EAAMiB,IAItC,IAAI,MAIf,QAIVrP,EAAAA,cAAC2M,EAAM,KACL3M,EAAAA,cAACqH,EAAAA,GAAS,KACPxB,EACC7F,EAAAA,cAAA,WACEA,EAAAA,cAAC6C,EAAAA,GAAM,CAACC,QAAM,EAAC6M,SAAO,EAAC3M,KAAM6C,GAAM,mBAInC,KACJ7F,EAAAA,cAAA,WACEA,EAAAA,cAAC6C,EAAAA,GAAM,CACLG,KAAK,6BACL8C,OAAO,UACR,2BAWnB,EAACgI,CAAA,CAnLgC,CAAS9L,EAAAA,U,kKCxJ5C,MAAMsF,EAAW9J,EAAAA,QAAOC,GAAEC,WAAA,CAAAC,YAAA,8BAAAC,YAAA,gBAATJ,CAAS,iMACtBK,EAAAA,GAAWC,SAOXD,EAAAA,GAAWc,WAKTiR,EAAOpS,EAAAA,QAAOuJ,KAAIrJ,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAXJ,CAAW,iEACpBS,EAAAA,EAAAA,IAAQ,MACRE,EAAAA,EAAAA,IAAS,QACFG,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMsO,WAAW,IAKrCgD,EAAUrS,EAAAA,QAAO6E,GAAE3E,WAAA,CAAAC,YAAA,6BAAAC,YAAA,gBAATJ,CAAS,qFAErBK,EAAAA,GAAWK,OACTC,EAAAA,EAAAA,IAAS,OAEXN,EAAAA,GAAWC,UAOTgS,EAAetS,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,kCAAAC,YAAA,gBAAVJ,CAAU,qDAC3BW,EAAAA,EAAAA,IAAS,QACSO,IAAA,IAAC,MAAEH,GAAOG,EAAA,OAAKH,EAAMC,WAAW,IAElDK,IAAA,IAAC,gBAAEoH,EAAe,MAAE1H,GAAOM,EAAA,OAC3BoH,EACI,+BAEK1H,EAAMC,kMAUX,EAAE,IAGJuR,EAAYvS,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,+BAAAC,YAAA,gBAAVJ,CAAU,iMACxBW,EAAAA,EAAAA,IAAS,QAUAa,IAAA,IAAC,MAAET,GAAOS,EAAA,OAAKT,EAAMO,UAAU,IAI/B+B,IAAA,IAAC,MAAEtC,GAAOsC,EAAA,OAAKtC,EAAMsO,WAAW,IAIvCmD,EAAYxS,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,+BAAAC,YAAA,gBAAVJ,CAAU,6MAMtBS,EAAAA,EAAAA,IAAQ,MACDgP,IAAA,IAAC,MAAE1O,GAAO0O,EAAA,OAAK1O,EAAMC,WAAW,GAUzCX,EAAAA,GAAWc,WAOTsR,EAAYzS,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,+BAAAC,YAAA,gBAAVJ,CAAU,+BACjB0P,IAAA,IAAC,MAAE3O,GAAO2O,EAAA,OAAK3O,EAAMO,UAAU,IAEpCX,EAAAA,EAAAA,IAAS,QAEb,IAEmB+R,EAAiB,SAAA/Q,GACpC,SAAA+Q,EAAY9Q,GAAQ,IAADC,EAED,OADhBA,EAAAF,EAAAG,KAAA,KAAMF,IAAM,MACPG,MAAQ,CAAC,EAAEF,CAClB,CAgEC,OAhEAG,EAAAA,EAAAA,GAAA0Q,EAAA/Q,GAAA+Q,EAAAzQ,UAEDC,OAAA,WACE,MAAM,aAAEwH,EAAY,SAAEf,EAAQ,eAAEpG,GAAmBH,KAAKR,MAAMS,KACxDsH,EAAeD,EAAavG,MAAM,GAAGG,KAAKY,iBAC1C,YAAE5B,GAAgBC,EACxB,OAAOC,EAAAA,cAAAA,EAAAA,SAAA,KACLA,EAAAA,cAACC,EAAAA,GAAMC,OAAAC,OAAA,GAAKP,KAAKR,MAAK,CAAEgB,MAAON,EAAYM,SAC3CJ,EAAAA,cAACK,EAAAA,GAAWT,KAAKR,MACfY,EAAAA,cAACM,EAAAA,GAAM,KACLN,EAAAA,cAAA,MAAIO,UAAU,QAAQT,EAAYU,SAClCR,EAAAA,cAAA,KAAGO,UAAU,QAAQT,EAAYW,aAEnCT,EAAAA,cAACU,EAAAA,GAAI,KACHV,EAAAA,cAACsH,EAAQ,KACNnB,EAASxF,MAAMC,KAAIuM,IAAe,IAAd,KAAErM,GAAMqM,EAC3B,MAAM,OACJgD,EAAM,MACNnP,EAAK,KACLC,EAAI,KACJoN,EAAI,QACJ/H,EAAO,MACPlG,EAAK,IACLe,GACEL,EAAKhB,YACT,OACEE,EAAAA,cAAC6P,EAAO,CAACzO,IAAKD,EAAKE,GAAG,MACpBrB,EAAAA,cAAChC,EAAAA,GAAI,CAACqD,GAAIE,EAAAA,GAAMD,GAAI,aAAaH,KAC/BnB,EAAAA,cAAC+P,EAAS,KACR/P,EAAAA,cAAA,QAAMO,UAAU,QACb8N,EAAK,IAAG8B,EAAqC,KAA5BnQ,EAAAA,cAAC4P,EAAI,KAAC,iBAE1B5P,EAAAA,cAAA,QAAMO,UAAU,QAAQU,IAE1BjB,EAAAA,cAAC8P,EAAY,CAAC7J,iBAAkBjF,GAC9BhB,EAAAA,cAACwB,EAAAA,EAAW,CACVC,MAAOT,EACHA,EAAMU,gBAAgBC,gBACtBwF,EAAaxF,gBACjBC,IAAKxB,IAELY,EAIE,KAHFhB,EAAAA,cAAA,QAAMO,UAAU,YACdP,EAAAA,cAAC6B,EAAAA,GAAI,CAACC,KAAK,WAAWmB,KAAK,QAIjCjD,EAAAA,cAACgQ,EAAS,KACRhQ,EAAAA,cAAA,MAAIO,UAAU,SAASH,GACvBJ,EAAAA,cAAA,YACEA,EAAAA,cAAC6B,EAAAA,GAAI,CAACC,KAAK,cAAcC,KAAK,iBAGlC/B,EAAAA,cAACiQ,EAAS,KACRjQ,EAAAA,cAAA,KAAGO,UAAU,WAAW+F,KAGpB,OAOxB,EAAC4J,CAAA,CApEmC,CAASlO,EAAAA,U,gEClF/C,UA3BiB1D,IAA2D,IAAD8R,EAAAC,EAAAC,EAAAC,EAAA,IAAzD,KAAE1Q,KAAST,GAAyCd,EACpE,MAAM,YAAEwB,EAAW,KAAEiE,GAA4B,QAAtBqM,EAAGvQ,EAAKE,sBAAc,IAAAqQ,EAAAA,EAAI,CAAC,EAEtD,OACEpQ,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACC,EAAAA,GAAMC,OAAAC,OAAA,GAAKf,EAAK,CAAEgB,MAAyB,QAApBiQ,EAAEvQ,aAAW,EAAXA,EAAaM,aAAK,IAAAiQ,EAAAA,EAAI,MAChDrQ,EAAAA,cAACK,EAAAA,GAAWjB,EACVY,EAAAA,cAACM,EAAAA,GAAM,KACLN,EAAAA,cAAA,MAAIO,UAAU,QAA4B,QAAtB+P,EAAExQ,aAAW,EAAXA,EAAaU,eAAO,IAAA8P,EAAAA,EAAI,IAC9CtQ,EAAAA,cAAA,KAAGO,UAAU,QAA+B,QAAzBgQ,EAAEzQ,aAAW,EAAXA,EAAaW,kBAAU,IAAA8P,EAAAA,EAAI,KAElDvQ,EAAAA,cAACU,EAAAA,GAAI,CACHwD,MAAO,CACLC,WAAY,OACZC,YAAa,OACbC,SAAU,UAGZrE,EAAAA,cAAChC,EAAAA,GAAI,CAAC0I,MAAM,KACV1G,EAAAA,cAAC6E,EAAAA,GAAI,CAACC,wBAAyB,CAAEC,OAAQhB,QAAAA,EAAQ,SAItD,C,0ECtBP,MAAMyM,EAAoBA,KACxB,MAAM,EAACC,EAAY,EAACC,IAAkBC,EAAAA,EAAAA,UAAiC,IAAhBC,KAAKC,UAE5D,SAASC,IACPJ,GAAgBK,GAAaA,EAA2B,GAAhBH,KAAKC,SAAgB,GAC/D,CAeA,OAbAG,EAAAA,EAAAA,YAAU,KACR,IAAIC,EAKJ,MAJsB,oBAAXC,SACTD,EAAQC,OAAOC,YAAYL,EAAM,MAG5B,KACiB,oBAAXI,QACTA,OAAOE,cAAcH,EACvB,CACD,GACA,IAEIjR,EAAAA,cAAA,YAAOyQ,EAAYY,QAAQ,GAAU,EA4C9C,UAzCoB/S,IAG2B,IAADgT,EAAA,IAHzB,KACnBzR,KACGT,GACoCd,EACvC,MAAMiT,EAAW1R,EAAKE,gBAChB,YAAED,EAAW,KAAEiE,GAASwN,QAAAA,EAAY,CAAC,GACrC,MAAEvQ,EAAK,KAAEC,EAAI,MAAEb,GAAUN,QAAAA,EAAe,CAAC,EAE/C,OACEE,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACC,EAAAA,GAAMC,OAAAC,OAAA,GAAKf,EAAK,CAAEgB,MAAOA,QAAAA,EAAS,MACnCJ,EAAAA,cAACK,EAAAA,GAAWjB,EACVY,EAAAA,cAACM,EAAAA,GAAM,KACLN,EAAAA,cAAA,QAAMO,UAAU,SAAQ,iBACRP,EAAAA,cAACwQ,EAAiB,MAAG,YAErCxQ,EAAAA,cAAA,MAAIO,UAAU,QAAQH,GACtBJ,EAAAA,cAAA,QAAMO,UAAU,SAASU,IAE3BjB,EAAAA,cAACU,EAAAA,GAAI,CACHwD,MAAO,CACLC,WAAY,OACZC,YAAa,OACbC,SAAU,UAGXrD,SAAsB,QAAjBsQ,EAALtQ,EAAOU,uBAAe,IAAA4P,GAAtBA,EAAwB3P,gBACvB3B,EAAAA,cAACwB,EAAAA,EAAW,CACVC,MAAOT,EAAMU,gBAAgBC,gBAC7BC,IAAKxB,QAAAA,EAAS,KAEd,KACJJ,EAAAA,cAAChC,EAAAA,GAAI,CAAC0I,MAAM,KACV1G,EAAAA,cAAC6E,EAAAA,GAAI,CAACC,wBAAyB,CAAEC,OAAQhB,QAAAA,EAAQ,SAItD,C,sNC5DP,MAAMyN,EAAShU,EAAAA,QAAOa,IAAGX,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAVJ,CAAU,2cACRiU,EAAAA,GAAKC,KAsBMC,EAAAA,GAGAC,EAAAA,GAGAC,EAAAA,IAGtB5T,EAAAA,EAAAA,IAAQ,MAORA,EAAAA,EAAAA,IAAQ,MAGRA,EAAAA,EAAAA,IAAQ,MAEZ,IAEmB6T,EAAU,SAAA3S,GAC7B,SAAA2S,EAAY1S,GAAQ,IAADC,EAED,OADhBA,EAAAF,EAAAG,KAAA,KAAMF,IAAM,MACPG,MAAQ,CAAC,EAAEF,CAClB,CAkCC,OAlCAG,EAAAA,EAAAA,GAAAsS,EAAA3S,GAAA2S,EAAArS,UAEDC,OAAA,WACE,MAAM,SAAEqS,GAAa9S,EAAAA,GACrB,OACEe,EAAAA,cAAAA,EAAAA,SAAA,KACG+R,EAASnR,KAAI,CAAC3B,EAAOwH,IACpBzG,EAAAA,cAACwR,EAAM,CACLpQ,IAAKqF,EACLvC,MAAO,CACLyC,WAAY1H,EACZA,MAAO,QACPkQ,QAAS,QACT6C,WAAY,SAGdhS,EAAAA,cAAA,OAAKO,UAAU,iBACfP,EAAAA,cAAA,OAAKO,UAAU,iBACfP,EAAAA,cAAA,OAAKO,UAAU,iBACfP,EAAAA,cAAA,YAAOf,GACPe,EAAAA,cAAA,UAAI,qLAKJA,EAAAA,cAAA,SAAG,wLASb,EAAC8R,CAAA,CAtC4B,CAAS9P,EAAAA,W,gBC7CxC,MAJA,SAAwB5C,GACtB,OAAOY,EAAAA,cAAC8R,EAAe1S,EACzB,C","sources":["webpack://biffud.com/./lib/ui/templates/BlogListingTpl.js","webpack://biffud.com/./lib/ui/templates/ContactTpl.js","webpack://biffud.com/./lib/ui/templates/EmojiTpl.js","webpack://biffud.com/./lib/ui/templates/FAQListingTpl.js","webpack://biffud.com/./lib/ui/templates/ofHome/Section.js","webpack://biffud.com/./lib/ui/templates/ofHome/Clients.js","webpack://biffud.com/./lib/ui/templates/ofHome/Projects.js","webpack://biffud.com/./lib/ui/templates/ofHome/Services.js","webpack://biffud.com/./lib/ui/templates/ofHome/Testimonials.js","webpack://biffud.com/./lib/ui/templates/HomeTpl.js","webpack://biffud.com/./lib/ui/templates/LandingTpl.js","webpack://biffud.com/./lib/ui/templates/MediaTpl.js","webpack://biffud.com/./lib/ui/templates/ofPeople/Person.js","webpack://biffud.com/./lib/ui/templates/ofPeople/PersonModal.tsx","webpack://biffud.com/./lib/ui/templates/PeopleTpl.js","webpack://biffud.com/./lib/ui/templates/ProjectItemTpl.js","webpack://biffud.com/./lib/ui/templates/ProjectListingTpl.js","webpack://biffud.com/./lib/ui/templates/AboutTpl.tsx","webpack://biffud.com/./lib/ui/templates/BlogPostTpl.tsx","webpack://biffud.com/./lib/ui/templates/Playground.js","webpack://biffud.com/./src/pages/playground.js"],"sourcesContent":["import { graphql, Link } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport styled from \"styled-components\";\n\nimport { Icon, Tile } from \"ui/components\";\nimport { breakpoint } from \"ui/settings\";\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst PostList = styled.ol`\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nconst Post = styled(Tile)`\n  ${setType(\"m\")};\n  grid-row-end: span 1;\n  position: relative;\n  ${breakpoint.phone} {\n    ${setSpace(\"mbl\")};\n  }\n`;\n\nconst PostCover = styled.div`\n  border: 2px solid ${({ theme }) => theme.actionColor};\n  ${setSpace(\"mbm\")};\n`;\n\nconst PostHd = styled.div`\n  ${setSpace(\"mbs\")};\n  align-items: flex-start;\n  display: flex;\n  justify-content: space-between;\n  h2,\n  span {\n    ${setType(\"l\")};\n    color: ${({ theme }) => theme.actionColor};\n    font-weight: 800;\n  }\n  span {\n    display: none;\n  }\n  ${breakpoint.desktopUp} {\n    span {\n      display: inline-block;\n    }\n  }\n`;\n\nconst PostBd = styled.div`\n  ${setSpace(\"mbm\")};\n  color: ${({ theme }) => theme.titleColor};\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nconst PostFt = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  span {\n    ${setType(\"s\")};\n    color: ${({ theme }) => theme.color};\n  }\n`;\n\nexport default class BlogListingTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { posts } = this.props.data;\n    const { frontmatter } = this.props.data.markdownRemark;\n    return <>\n      <Helmet {...this.props} title={frontmatter.title} />\n      <Layout {...this.props}>\n        <Header>\n          <h1 className=\"hero\">{frontmatter.heading}</h1>\n          <p className=\"para\">{frontmatter.subheading}</p>\n        </Header>\n        <Body>\n          <PostList>\n            {posts.edges.map(({ node }) => {\n              const { timeToRead } = node;\n              const { cover, date, summary, title, uid } = node.frontmatter;\n              return (\n                <Post key={uid} as=\"li\">\n                  <Tile to={`/tldr/${uid}`} as={Link}>\n                    {cover ? (\n                      <PostCover>\n                        <GatsbyImage image={cover.childImageSharp.gatsbyImageData} alt={title} />\n                      </PostCover>\n                    ) : null}\n                    <PostHd>\n                      <h2 className=\"title\">{title}</h2>\n                      <span>\n                        <Icon name=\"arrow-right\" text=\"Read more…\" />\n                      </span>\n                    </PostHd>\n                    <PostBd>\n                      <p className=\"summary\">{summary}</p>\n                    </PostBd>\n                    <PostFt>\n                      <span>{date}</span>\n                      <span>{timeToRead} min read</span>\n                    </PostFt>\n                  </Tile>\n                </Post>\n              );\n            })}\n          </PostList>\n        </Body>\n      </Layout>\n    </>;\n  }\n}\n\nBlogListingTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired,\n    posts: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`query BlogTplQuery($uid: String!) {\n  markdownRemark(frontmatter: {uid: {eq: $uid}}) {\n    html\n    frontmatter {\n      uid\n      title\n      heading\n      subheading\n    }\n  }\n  posts: allMarkdownRemark(\n    filter: {fileAbsolutePath: {regex: \"/pages/tldr/.*post.md/\"}}\n    sort: {frontmatter: {date: DESC}}\n  ) {\n    edges {\n      node {\n        id\n        timeToRead\n        frontmatter {\n          uid\n          cover {\n            childImageSharp {\n              gatsbyImageData(\n                height: 240\n                quality: 100\n                placeholder: DOMINANT_COLOR\n                layout: FULL_WIDTH\n              )\n            }\n          }\n          date(formatString: \"MMMM D, YYYY\")\n          summary\n          title\n        }\n      }\n    }\n  }\n}`;\n","import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Action, Icon, Tile } from \"ui/components\";\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { setSpace } from \"ui/mixins\";\n\nconst ContactHolder = styled(Tile)`\n  ${setSpace(\"pah\")};\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 600px;\n  text-align: center;\n`;\nconst Social = styled.ul`\n  ${setSpace(\"mtl\")};\n  text-align: left;\n`;\n\nconst SocialItem = styled.li`\n  ${setSpace(\"mts\")};\n  i {\n    ${setSpace(\"mrs\")};\n  }\n`;\n\nexport default class ContactTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { frontmatter } = this.props.data.markdownRemark;\n    const {\n      email,\n      facebookid,\n      linkedinid,\n      twitterid,\n      myspaceid,\n      githubid\n    } = frontmatter;\n    return (\n      <>\n        <Helmet {...this.props} title={frontmatter.title} />\n        <Layout {...this.props}>\n          <Body>\n            <Header>\n              <h1 className=\"hero\">{frontmatter.heading}</h1>\n              <p className=\"para\">{frontmatter.subheading}</p>\n            </Header>\n            <ContactHolder>\n              <Action button obfuscated email={email} />\n              <Social>\n                {twitterid ? (\n                  <SocialItem>\n                    <Action href={`https://twitter.com/${twitterid}`}>\n                      <Icon name=\"twitter\" size=\"s\" />\n                      {twitterid}\n                    </Action>\n                  </SocialItem>\n                ) : null}\n                {githubid ? (\n                  <SocialItem>\n                    <Action href={`https://github.com/${githubid}`} size=\"s\">\n                      <Icon name=\"github\" />\n                      {githubid}\n                    </Action>\n                  </SocialItem>\n                ) : null}\n                {linkedinid ? (\n                  <SocialItem>\n                    <Action\n                      href={`https://linkedin.com/${linkedinid}`}\n                      size=\"s\"\n                    >\n                      <Icon name=\"linkedin\" />\n                      {linkedinid}\n                    </Action>\n                  </SocialItem>\n                ) : null}\n                {myspaceid ? (\n                  <SocialItem>\n                    <Action href={`https://myspace.com/${myspaceid}`} size=\"s\">\n                      <Icon name=\"myspace\" />\n                      {myspaceid}\n                    </Action>\n                  </SocialItem>\n                ) : null}\n                {facebookid ? (\n                  <SocialItem>\n                    <Action\n                      href={`https://facebook.com/${facebookid}`}\n                      size=\"s\"\n                    >\n                      <Icon name=\"facebook\" />\n                      {facebookid}\n                    </Action>\n                  </SocialItem>\n                ) : null}\n              </Social>\n            </ContactHolder>\n          </Body>\n        </Layout>\n      </>\n    );\n  }\n}\n\nContactTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query ContactTplQuery($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n        email\n        facebookid\n        twitterid\n        githubid\n      }\n    }\n  }\n`;\n","import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Icon, Tile } from \"ui/components\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace } from \"ui/mixins\";\n\nconst EmojiHolder = styled(Tile)`\n  ${setSpace(\"pak\")};\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 600px;\n  text-align: center;\n  ${breakpoint.phone} {\n    ${setSpace(\"pvh\")};\n  }\n  i {\n    ${setSpace(\"mbl\")};\n    color: ${({ theme }) => theme.actionColor};\n    display: inline-block;\n    font-size: 240px;\n    height: 240px;\n    line-height: 240px;\n    width: 240px;\n    ${breakpoint.phone} {\n      font-size: 200px;\n      height: 200px;\n      line-height: 200px;\n      width: 200px;\n    }\n  }\n  h2 {\n    font-size: 36px;\n    color: ${({ theme }) => theme.actionColor};\n    font-weight: 800;\n    ${breakpoint.phone} {\n      font-size: 26px;\n    }\n  }\n`;\n\nexport default class EmojiTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { frontmatter } = this.props.data.markdownRemark;\n    return (\n      <>\n        <Helmet {...this.props} title={frontmatter.title} />\n        <Layout {...this.props}>\n          <Body>\n            <Header>\n              <h1 className=\"hero\">{frontmatter.heading}</h1>\n              <p className=\"para\">{frontmatter.subheading}</p>\n            </Header>\n            <EmojiHolder>\n              <Icon name=\"thinking\" className=\"emoji\" />\n              <h2 className=\"name\">:thinkingface:</h2>\n            </EmojiHolder>\n          </Body>\n        </Layout>\n      </>\n    );\n  }\n}\n\nEmojiTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query EmojiTplQuery($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n      }\n    }\n  }\n`;\n","import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Copy, Tabs, Tab, Tile } from \"ui/components\";\nimport { setSpace } from \"ui/mixins\";\n\nconst Questions = styled(Tile)`\n  ${setSpace(\"pah\")};\n  display: ${({ $isActive }) => ($isActive ? \"block\" : \"none\")};\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 900px;\n`;\n\nexport default class FAQListingTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tab: \"partnership\"\n    };\n    this.switchTab = this.switchTab.bind(this);\n  }\n\n  switchTab(str) {\n    this.setState({ tab: str });\n  }\n\n  render() {\n    const { frontmatter } = this.props.data.markdownRemark;\n    const membershipQuestions = this.props.data.membership.edges[0].node.html;\n    const partnershipQuestions = this.props.data.partnership.edges[0].node.html;\n    return (\n      <>\n        <Helmet {...this.props} title=\"Frequently Asked Questions\" />\n        <Layout {...this.props}>\n          <Header>\n            <h1 className=\"hero\">{frontmatter.heading}</h1>\n            <p className=\"para\">{frontmatter.subheading}</p>\n          </Header>\n          <Body\n            style={{\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              maxWidth: \"900px\"\n            }}\n          >\n            <Tabs count={2}>\n              <Tab\n                handleClick={() => this.switchTab(\"partnership\")}\n                isActive={this.state.tab === \"partnership\"}\n              >\n                {frontmatter.partnershipTab}\n              </Tab>\n              <Tab\n                handleClick={() => this.switchTab(\"membership\")}\n                isActive={this.state.tab === \"membership\"}\n              >\n                {frontmatter.membershipTab}\n              </Tab>\n            </Tabs>\n            <Questions $isActive={this.state.tab === \"partnership\"}>\n              <Copy\n                dangerouslySetInnerHTML={{ __html: partnershipQuestions }}\n              />\n            </Questions>\n            <Questions $isActive={this.state.tab === \"membership\"}>\n              <Copy dangerouslySetInnerHTML={{ __html: membershipQuestions }} />\n            </Questions>\n          </Body>\n        </Layout>\n      </>\n    );\n  }\n}\n\nFAQListingTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired,\n    membership: object.isRequired,\n    partnership: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query FAQTplQuery($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n        membershipTab\n        partnershipTab\n      }\n    }\n    membership: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//pages/question/membership/*/.*/*.md/\" }\n      }\n      sort: { frontmatter: { score: ASC } }\n    ) {\n      edges {\n        node {\n          id\n          html\n        }\n      }\n    }\n    partnership: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//pages/question/partnership/*/.*/*.md/\" }\n      }\n      sort: { frontmatter: { score: DESC } }\n    ) {\n      edges {\n        node {\n          id\n          html\n        }\n      }\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nimport { setSpace } from \"ui/mixins\";\n\nconst Section = styled.div`\n  ${setSpace(\"mvk\")};\n  display: flex;\n  justify-content: center;\n  .el {\n    width: 100%;\n  }\n  &:not(:last-child) {\n    ${setSpace(\"pbk\")};\n  }\n`;\n\nexport default Section;\n","import { array, string } from \"prop-types\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Tile } from \"ui/components\";\nimport { Header } from \"ui/partials\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport Section from \"./Section\";\n\nconst Element = styled(Section)``;\nconst Title = styled.h1`\n  &.hero {\n    ${setType(\"h\")};\n  }\n`;\nconst Items = styled.ul`\n  width: 100%;\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n    & > * {\n      grid-row-end: span 1;\n    }\n  }\n`;\nconst Item = styled.li`\n  ${breakpoint.phone} {\n    &:not(:last-child) {\n      ${setSpace(\"mbx\")};\n    }\n  }\n`;\nconst ItemTitle = styled.h3`\n  ${setSpace(\"mbm\")};\n`;\nconst ItemText = styled.div`\n  color: ${({ theme }) => theme.color};\n  strong {\n    font-weight: 600;\n  }\n`;\n\nfunction Clients(props) {\n  const { clients, title, subtitle } = props;\n  return (\n    <Element as=\"section\">\n      <div className=\"el\">\n        <Header className=\"hd\">\n          <Title className=\"hero\">{title}</Title>\n          {subtitle ? <p className=\"para\">{subtitle}</p> : null}\n        </Header>\n        <Items>\n          {clients.map(({ node }) => {\n            const client = node.frontmatter;\n            return (\n              <Item key={node.id}>\n                <Tile href={client.link} target=\"_blank\" as=\"a\">\n                  <ItemTitle>\n                    <GatsbyImage image={client.logo.childImageSharp.gatsbyImageData} alt={client.name} />\n                  </ItemTitle>\n                  <ItemText dangerouslySetInnerHTML={{ __html: node.html }} />\n                </Tile>\n              </Item>\n            );\n          })}\n        </Items>\n      </div>\n    </Element>\n  );\n}\n\nClients.propTypes = {\n  clients: array.isRequired,\n  subtitle: string.isRequired,\n  title: string.isRequired\n};\n\nexport default Clients;\n","import { array, string } from \"prop-types\";\nimport { Link } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { breakpoint } from \"ui/settings\";\nimport { Header } from \"ui/partials\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport { Tile, Icon } from \"ui/components\";\nimport Section from \"./Section\";\n\nconst Element = styled(Section)``;\nconst Title = styled.h1`\n  &.hero {\n    ${setType(\"h\")};\n  }\n`;\nconst Items = styled.ul`\n  width: 100%;\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fill, minmax(214px, 1fr));\n    margin-left: auto;\n    margin-right: auto;\n  }\n  ${breakpoint.desktopUp} {\n    grid-template-columns: repeat(auto-fill, minmax(291px, 1fr));\n  }\n`;\nconst Item = styled.li`\n  ${breakpoint.phone} {\n    &:not(:last-child) {\n      ${setSpace(\"mbx\")};\n    }\n  }\n`;\nconst ItemImage = styled.div`\n  ${setSpace(\"mbm\")};\n  border: 2px solid ${({ theme }) => theme.actionColor};\n  position: relative;\n  ${({ $hasPlaceholder, theme }) =>\n    $hasPlaceholder\n      ? `\n    .thinking {\n      color: ${theme.actionColor};\n      display: inline-block;\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%);\n      i {\n        font-size: 80px !important;\n      }\n  `\n      : ``};\n`;\nconst ItemTitle = styled.div`\n  align-items: flex-start;\n  display: flex;\n  justify-content: space-between;\n  h3,\n  span {\n    ${setType(\"m\")};\n    color: ${({ theme }) => theme.actionColor};\n    font-weight: 800;\n    text-transform: uppercase;\n  }\n  h3 {\n    max-width: 75%;\n  }\n  span {\n    display: none;\n  }\n  ${breakpoint.desktopUp} {\n    span {\n      display: inline-block;\n    }\n  }\n`;\nconst ItemText = styled.p`\n  ${setSpace(\"mts\")};\n`;\n\nfunction Projects(props) {\n  const { projects, title, subtitle } = props;\n  return (\n    <Element as=\"section\">\n      <div className=\"el\">\n        <Header className=\"hd\">\n          <Title className=\"hero\">{title}</Title>\n          {subtitle ? <p className=\"para\">{subtitle}</p> : null}\n        </Header>\n        <Items>\n          {projects.map(({ node }) => {\n            const project = node.frontmatter;\n            return (\n              <Item key={node.id}>\n                <Tile as={Link} to={`/projects/${project.uid}`}>\n                  <ItemImage $hasPlaceholder={!project.cover}>\n                    <GatsbyImage\n                      image={project.cover\n                        ? project.cover.childImageSharp.gatsbyImageData\n                        : props.placeholder}\n                      alt={project.title}\n                    />\n                    {!project.cover ? (\n                      <span className=\"thinking\">\n                        <Icon name=\"thinking\" />\n                      </span>\n                    ) : null}\n                  </ItemImage>\n                  <ItemTitle>\n                    <h3 className=\"title\">{project.title}</h3>\n                    <span>\n                      <Icon name=\"arrow-right\" text=\"Read more…\" />\n                    </span>\n                  </ItemTitle>\n                  <ItemText>{project.tagline}</ItemText>\n                </Tile>\n              </Item>\n            );\n          })}\n        </Items>\n      </div>\n    </Element>\n  );\n}\n\nProjects.propTypes = {\n  projects: array.isRequired,\n  subtitle: string.isRequired,\n  title: string.isRequired\n};\n\nexport default Projects;\n","import { array, string } from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { breakpoint } from \"ui/settings\";\nimport { Header } from \"ui/partials\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport { Tile } from \"ui/components\";\nimport Section from \"./Section\";\n\nconst Element = styled(Section)``;\nconst Title = styled.h1`\n  &.hero {\n    ${setType(\"h\")};\n  }\n`;\nconst Items = styled.ul`\n  width: 100%;\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 10px;\n    grid-template-columns: repeat(auto-fill, minmax(330px, 1fr));\n    & > * {\n      grid-row-end: span 1;\n    }\n  }\n  ${breakpoint.desktopUp} {\n    grid-template-columns: repeat(auto-fill, minmax(221px, 1fr));\n  }\n`;\nconst Item = styled.li`\n  ${breakpoint.phone} {\n    &:not(:last-child) {\n      ${setSpace(\"mbx\")};\n    }\n  }\n`;\nconst ItemTitle = styled.h3`\n  ${setSpace(\"mbm\")};\n  ${setType(\"l\")};\n  font-weight: 800;\n`;\n\nfunction Services(props) {\n  const { services, title, subtitle } = props;\n  return (\n    <Element as=\"section\">\n      <div className=\"el\">\n        <Header className=\"hd\">\n          <Title className=\"hero\">{title}</Title>\n          {subtitle ? <p className=\"para\">{subtitle}</p> : null}\n        </Header>\n        <Items>\n          {services.map((service, i) => (\n            <Item key={i}>\n              <Tile space=\"l\">\n                <ItemTitle className=\"TileTitle\">{service.title}</ItemTitle>\n                <p>{service.text}</p>\n              </Tile>\n            </Item>\n          ))}\n        </Items>\n      </div>\n    </Element>\n  );\n}\n\nServices.propTypes = {\n  services: array.isRequired,\n  subtitle: string.isRequired,\n  title: string.isRequired\n};\n\nexport default Services;\n","import { array, string } from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Tile } from \"ui/components\";\nimport { Header } from \"ui/partials\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport Section from \"./Section\";\n\nconst Element = styled(Section)``;\nconst Title = styled.h1`\n  &.hero {\n    ${setType(\"h\")};\n  }\n`;\nconst Items = styled.ul`\n  width: 100%;\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n    & > * {\n      grid-row-end: span 1;\n    }\n  }\n`;\nconst Item = styled.li`\n  height: 100%;\n  .quote {\n    ${setSpace(\"mbs\")};\n    ${setSpace(\"pal\")};\n    position: relative;\n    &:after,\n    &:before {\n      color: ${({ theme }) => theme.background};\n      ${setType(\"k\")};\n      position: absolute;\n    }\n    &:before {\n      content: \"“\";\n      top: 0;\n      left: 0;\n    }\n    &:after {\n      content: \"”\";\n      bottom: 0;\n      right: 0;\n    }\n  }\n  .source {\n    ${setType(\"s\")};\n    text-align: right;\n  }\n  ${breakpoint.phone} {\n    &:not(:last-child) {\n      ${setSpace(\"mbx\")};\n    }\n  }\n  ${({ $span }) =>\n    $span ? `\n    grid-column: 1 / span 2;\n    grid-row: 1 / 2;\n    justify-self: stretch;\n    align-self: stretch;\n  `\n      : ``};\n`;\n\nfunction Testimonials(props) {\n  const { testimonials, title, subtitle } = props;\n  return (\n    <Element as=\"section\">\n      <div className=\"el\">\n        <Header className=\"hd\">\n          <Title className=\"hero\">{title}</Title>\n          {subtitle ? <p className=\"para\">{subtitle}</p> : null}\n        </Header>\n        <Items>\n          {testimonials.map((testimonial, i) => (\n            <Item key={i} $span={testimonial.span}>\n              <Tile>\n                <blockquote className=\"quote\">\n                  <p>{testimonial.text}</p>\n                </blockquote>\n                <p className=\"source\">— {testimonial.source}</p>\n              </Tile>\n            </Item>\n          ))}\n        </Items>\n      </div>\n    </Element>\n  );\n}\n\nTestimonials.propTypes = {\n  testimonials: array.isRequired,\n  subtitle: string.isRequired,\n  title: string.isRequired\n};\n\nexport default Testimonials;\n","import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\n\nimport { Action, Actionbar } from \"ui/components\";\nimport { Helmet, Layout, Pitch } from \"ui/partials\";\n\nimport Clients from \"./ofHome/Clients\";\nimport Projects from \"./ofHome/Projects\";\nimport Services from \"./ofHome/Services\";\nimport Testimonials from \"./ofHome/Testimonials\";\n\nexport default class HomeTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { frontmatter } = this.props.data.markdownRemark;\n    const { clients, projects, defaultCover } = this.props.data;\n    const genericCover = defaultCover.edges[0].node.childImageSharp;\n    return (\n      <>\n        <Helmet {...this.props} title={frontmatter.title} />\n        <Layout {...this.props}>\n          <Pitch>\n            <h1 className=\"hero\">{frontmatter.heading}</h1>\n            <Actionbar>\n              <Action button href=\"https://github.com/BadIdeaFactory/corporate/issues?q=is%3Aissue+is%3Aopen+label%3A%22project+application%22\" target=\"_blank\">\n                Submit an idea\n              </Action>\n              <Action href=\"https://patreon.com/biffud\" target=\"_blank\">Give us money</Action>\n              <span className=\"join\">or</span>\n              <Action to=\"contact\">Engage our services</Action>\n            </Actionbar>\n          </Pitch>\n          <Projects\n            placeholder={genericCover.gatsbyImageData}\n            projects={projects.edges}\n            subtitle={frontmatter.projectsSubtitle}\n            title={frontmatter.projectsTitle}\n          />\n          <Clients\n            title={frontmatter.clientsTitle}\n            subtitle={frontmatter.clientsSubtitle}\n            clients={clients.edges}\n          />\n          <Services\n            title={frontmatter.servicesTitle}\n            subtitle={frontmatter.servicesSubtitle}\n            services={frontmatter.services}\n          />\n          <Services\n            title={frontmatter.goodatTitle}\n            subtitle={frontmatter.goodatSubtitle}\n            services={frontmatter.goodat}\n          />\n          <Testimonials\n            title={frontmatter.testimonialsTitle}\n            subtitle={frontmatter.testimonialsSubtitle}\n            testimonials={frontmatter.testimonials}\n          />\n        </Layout>\n      </>\n    );\n  }\n}\n\nHomeTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`query HomeTplQuery($uid: String!) {\n  markdownRemark(frontmatter: {uid: {eq: $uid}}) {\n    html\n    frontmatter {\n      uid\n      title\n      heading\n      contactCta\n      projectsCta\n      servicesTitle\n      servicesSubtitle\n      services {\n        title\n        text\n      }\n      testimonialsTitle\n      testimonialsSubtitle\n      testimonials {\n        text\n        source\n        span\n      }\n      goodatTitle\n      goodatSubtitle\n      goodat {\n        title\n        text\n      }\n      clientsSubtitle\n      clientsTitle\n      projectsSubtitle\n      projectsTitle\n    }\n  }\n  defaultCover: allFile(filter: {relativePath: {eq: \"images/default-cover.png\"}}) {\n    edges {\n      node {\n        childImageSharp {\n          gatsbyImageData(\n            width: 800\n            height: 600\n            quality: 90\n            placeholder: DOMINANT_COLOR\n            transformOptions: {cropFocus: CENTER}\n            layout: CONSTRAINED\n          )\n        }\n      }\n    }\n  }\n  clients: allMarkdownRemark(\n    filter: {fileAbsolutePath: {regex: \"/pages/clients/.*client.md/\"}}\n    sort: {frontmatter: {score: DESC}}\n  ) {\n    edges {\n      node {\n        id\n        html\n        frontmatter {\n          uid\n          name\n          score\n          link\n          logo {\n            childImageSharp {\n              gatsbyImageData(\n                height: 40\n                quality: 80\n                placeholder: DOMINANT_COLOR\n                layout: FIXED\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n  projects: allMarkdownRemark(\n    filter: {fileAbsolutePath: {regex: \"/pages/projects/.*project.md/\"}}\n    limit: 3\n    sort: [{frontmatter: {feature: DESC}}, {frontmatter: {score: ASC}}, {frontmatter: {date: ASC}}]\n  ) {\n    edges {\n      node {\n        id\n        frontmatter {\n          uid\n          title\n          active\n          feature\n          tagline\n          code\n          cover {\n            childImageSharp {\n              gatsbyImageData(\n                width: 800\n                height: 600\n                quality: 90\n                placeholder: DOMINANT_COLOR\n                transformOptions: {cropFocus: CENTER}\n                layout: CONSTRAINED\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n}`;\n","import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\n\nimport { Actionbar, Action, Copy, Tile } from \"ui/components\";\nimport { Body, Pitch, Helmet, Layout } from \"ui/partials\";\n\nexport default class LandingTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { frontmatter, html } = this.props.data.markdownRemark;\n    return (\n      <>\n        <Helmet {...this.props} title={frontmatter.title} />\n        <Layout {...this.props}>\n          <Pitch>\n            <h1 className=\"hero\">{frontmatter.heading}</h1>\n            <Actionbar>\n              <Action button to=\"/projects\">\n                {frontmatter.projectsCta}\n              </Action>\n              <Action to=\"/contact\">{frontmatter.contactCta}</Action>\n            </Actionbar>\n          </Pitch>\n          <Body\n            style={{\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              maxWidth: \"900px\"\n            }}\n          >\n            <Tile space=\"h\">\n              <Copy dangerouslySetInnerHTML={{ __html: html }} />\n            </Tile>\n          </Body>\n        </Layout>\n      </>\n    );\n  }\n}\n\nLandingTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query LandingTplQuery($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n        contactCta\n        projectsCta\n      }\n    }\n  }\n`;\n","import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Copy, Icon, Tile } from \"ui/components\";\n\nconst MentionsList = styled.ol`\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nconst Mention = styled(Tile)`\n  ${setType(\"m\")};\n  grid-row-end: span 1;\n  position: relative;\n  ${breakpoint.phone} {\n    ${setSpace(\"mbl\")};\n  }\n  ${({ $highlight }) =>\n    $highlight\n      ? `\n    grid-column: 1 / span 2;\n    grid-row: 1 / 2;\n    justify-self: stretch;\n    align-self: stretch;\n  `\n      : ``};\n`;\n\nconst MentionCover = styled.div`\n  ${setSpace(\"mbm\")};\n  border: 2px solid ${({ theme }) => theme.actionColor};\n  display: block;\n`;\n\nconst MentionHd = styled.div`\n  align-items: flex-start;\n  display: flex;\n  justify-content: space-between;\n  h2,\n  span {\n    ${setType(\"l\")};\n    color: ${({ theme }) => theme.actionColor};\n    font-weight: 800;\n  }\n`;\n\nconst MentionBd = styled.div`\n  ${setSpace(\"mts\")};\n  color: ${({ theme }) => theme.titleColor};\n  ${Copy} {\n    ${setSpace(\"mbs\")};\n  }\n`;\n\nexport default class MediaTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { mentions } = this.props.data;\n    const { frontmatter } = this.props.data.markdownRemark;\n    return <>\n      <Helmet {...this.props} title={frontmatter.title} />\n      <Layout {...this.props}>\n        <Header>\n          <h1 className=\"hero\">{frontmatter.heading}</h1>\n          <p className=\"para\">{frontmatter.subheading}</p>\n        </Header>\n        <Body>\n          <MentionsList>\n            {mentions.edges.map(({ node }) => {\n              const { html } = node;\n              const {\n                cover,\n                publication,\n                source,\n                highlight,\n                title\n              } = node.frontmatter;\n              return (\n                <Mention as=\"li\" $highlight={highlight} key={title}>\n                  <Tile href={source} target=\"_blank\" as=\"a\">\n                    {cover ? (\n                      <MentionCover>\n                        <GatsbyImage image={cover.childImageSharp.gatsbyImageData} alt={title} />\n                      </MentionCover>\n                    ) : null}\n                    <MentionHd>\n                      <h2 className=\"title\">{title}</h2>\n                      <span>\n                        <Icon name=\"popout\" text=\"Read the article…\" />\n                      </span>\n                    </MentionHd>\n                    <MentionBd>\n                      {html ? (\n                        <Copy dangerouslySetInnerHTML={{ __html: html }} />\n                      ) : null}\n                      {/* eslint-disable-next-line no-irregular-whitespace */}\n                      <p>by {publication}</p>\n                    </MentionBd>\n                  </Tile>\n                </Mention>\n              );\n            })}\n          </MentionsList>\n        </Body>\n      </Layout>\n    </>;\n  }\n}\n\nMediaTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired,\n    mentions: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`query MediaTplQuery($uid: String!) {\n  markdownRemark(frontmatter: {uid: {eq: $uid}}) {\n    html\n    frontmatter {\n      uid\n      title\n      heading\n      subheading\n    }\n  }\n  mentions: allMarkdownRemark(\n    filter: {fileAbsolutePath: {regex: \"//pages/fame/.*mention.md/\"}}\n    sort: {frontmatter: {date: DESC}}\n  ) {\n    edges {\n      node {\n        id\n        html\n        frontmatter {\n          date(formatString: \"MMMM YYYY\")\n          title\n          cover {\n            childImageSharp {\n              gatsbyImageData(\n                height: 240\n                quality: 100\n                placeholder: DOMINANT_COLOR\n                layout: FULL_WIDTH\n              )\n            }\n          }\n          link\n          highlight\n          publication\n          source\n          uid\n        }\n      }\n    }\n  }\n}`;\n","import { func, object, shape } from \"prop-types\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Action, Icon } from \"ui/components\";\nimport { breakpoint, time } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst Person = styled.li`\n  align-items: center;\n  background: white;\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  transition: box-shadow ${time.s}, transform ${time.s};\n  &:hover {\n    box-shadow: 6px 6px 0 0 ${({ theme }) => theme.actionDecor};\n    transform: translate(-1px, -1px);\n  }\n  ${breakpoint.tabletUp} {\n    ${setSpace(\"pan\")};\n    );\n  }\n`;\n\nconst PersonPic = styled.div`\n  background: ${({ theme, $hasAvatar }) => ($hasAvatar ? \"\" : theme.actionColor)};\n  border: 2px solid ${({ theme }) => theme.background};\n  flex: 0 0 ${100 / 3}%;\n`;\n\nconst PersonDetails = styled.div`\n  ${setSpace(\"phm\")};\n  ${setType(\"s\")};\n  ${breakpoint.phone} {\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n  }\n`;\n\nconst PersonName = styled.h3`\n  ${setType(\"s\")};\n  color: ${({ theme }) => theme.color};\n  span {\n    display: block;\n    &:first-child {\n      ${setType(\"m\")};\n      color: ${({ theme }) => theme.actionColor};\n      font-weight: 800;\n    }\n  }\n`;\n\nconst PersonLinks = styled.div`\n  ${setSpace(\"mts\")};\n  & > * {\n    ${setSpace(\"mrs\")};\n    line-height: 1em;\n  }\n  ${breakpoint.phone} {\n    display: none;\n  }\n`;\n\nfunction Member(props) {\n  const { defaultAvatar } = props;\n  const { frontmatter } = props.data;\n  const {\n    avatar,\n    bluesky,\n    fname,\n    github,\n    lname,\n    mastodon,\n    twitter,\n    website\n  } = frontmatter;\n  return (\n    <Person onClick={props.toggleModal} role=\"button\">\n      <PersonPic $hasAvatar={avatar}>\n        <GatsbyImage\n          image={avatar ? avatar.childImageSharp.gatsbyImageData : defaultAvatar.gatsbyImageData}\n          alt=\"\"\n        />\n      </PersonPic>\n      <PersonDetails>\n        <PersonName>\n          <span>{fname}</span> <span>{lname}</span>\n        </PersonName>\n        <PersonLinks>\n          {website ? (\n            <Action\n              onClick={e => e.stopPropagation()}\n              href={`https://${website}/`}\n              rel=\"external noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <Icon name=\"website\" size=\"s\" />\n            </Action>\n          ) : null}\n          {bluesky ? (\n            <Action\n              onClick={e => e.stopPropagation()}\n              href={`https://bsky.app/profile/${bluesky}`}\n              rel=\"external noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <Icon name=\"bluesky\" size=\"s\" />\n            </Action>\n          ) : null}\n          {mastodon ? (\n            <Action\n              onClick={e => e.stopPropagation()}\n              href={`https://${mastodon}`}\n              rel=\"external noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <Icon name=\"mastodon\" size=\"s\" />\n            </Action>\n          ) : null}\n          {twitter ? (\n            <Action\n              onClick={e => e.stopPropagation()}\n              href={`https://twitter.com/${twitter}`}\n              rel=\"external noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <Icon name=\"twitter\" size=\"s\" />\n            </Action>\n          ) : null}\n          {github ? (\n            <Action\n              onClick={e => e.stopPropagation()}\n              href={`https://github.com/${github}`}\n              rel=\"external noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <Icon name=\"github\" size=\"s\" />\n            </Action>\n          ) : null}\n        </PersonLinks>\n      </PersonDetails>\n    </Person>\n  );\n}\n\nMember.propTypes = {\n  defaultAvatar: object.isRequired,\n  data: shape({\n    frontmatter: object.isRequired\n  }).isRequired,\n  toggleModal: func.isRequired\n};\n\nexport default Member;\n","import React from \"react\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport styled from \"styled-components\";\n\nimport { Action, Copy, Icon, Modal } from \"ui/components\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst Person = styled.div`\n  ${setSpace(\"pbh\")};\n  ${breakpoint.tabletUp} {\n    display: flex;\n    flex-direction: row;\n  }\n`;\n\ninterface PersonPicProps {\n  readonly $hasAvatar: boolean;\n}\n\nconst PersonPic = styled.div<PersonPicProps>`\n  background: ${({ $hasAvatar, theme }) =>\n    !$hasAvatar ? theme.actionColor : \"\"};\n  ${breakpoint.tabletUp} {\n    flex: 0 0 ${100 / 4}%;\n  }\n  ${breakpoint.phone} {\n    ${setSpace(\"mbl\")};\n    & > * {\n      margin-left: auto;\n      margin-right: auto;\n      max-width: 200px;\n    }\n  }\n`;\nconst PersonDetails = styled.div`\n  ${setType(\"s\")};\n  ${breakpoint.tabletUp} {\n    ${setSpace(\"pll\")};\n  }\n`;\nconst PersonName = styled.h2`\n  ${setType(\"l\")};\n  font-weight: 800;\n  color: ${({ theme }) => theme.titleColor};\n`;\nconst PersonBio = styled.div`\n  ${setSpace(\"mvm\")};\n  ${setType(\"m\")};\n  color: ${({ theme }) => theme.titleColor};\n`;\nconst PersonQuote = styled.div`\n  ${setSpace(\"mvm\")};\n`;\nconst PersonSocial = styled.div`\n  & > * {\n    ${setSpace(\"mvx\")};\n  }\n  & > *:not(:last-child) {\n    ${setSpace(\"mrl\")};\n  }\n`;\n\ninterface PersonModalProps {\n  defaultAvatar: NonNullable<\n    Queries.PeopleTplQueryQuery[\"defaultAvatar\"][\"edges\"][0][\"node\"][\"childImageSharp\"]\n  >;\n  data: NonNullable<Queries.PeopleTplQueryQuery[\"overlords\"][\"edges\"][0][\"node\"]>;\n  toggleModal: VoidFunction;\n}\n\nconst PersonModal: React.FC<PersonModalProps> = ({\n  defaultAvatar,\n  data,\n  toggleModal,\n}) => {\n  const { frontmatter, html } = data;\n  const {\n    avatar,\n    bluesky,\n    fname,\n    github,\n    lname,\n    mastodon,\n    quote,\n    twitter,\n    website,\n  } = frontmatter;\n\n  return (\n    <Modal toggleModal={toggleModal}>\n      <Person>\n        <PersonPic $hasAvatar={avatar}>\n          <GatsbyImage\n            image={\n              avatar\n                ? avatar.childImageSharp.gatsbyImageData\n                : defaultAvatar.gatsbyImageData\n            }\n            alt=\"\"\n          />\n        </PersonPic>\n        <PersonDetails>\n          <PersonName>\n            {fname} {lname}\n          </PersonName>\n          <PersonBio>\n            <Copy dangerouslySetInnerHTML={{ __html: html ?? \"\" }} />\n          </PersonBio>\n          <PersonQuote>{quote}</PersonQuote>\n          <PersonSocial>\n            {website && (\n              <Action\n                href={`https://${website}/`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"website\" /> Website\n              </Action>\n            )}\n            {bluesky && (\n              <Action\n                href={`https://bsky.app/profile/${bluesky}`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"bluesky\" /> Bluesky\n              </Action>\n            )}\n            {mastodon && (\n              <Action\n                href={`https://${mastodon}`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"mastodon\" /> Mastodon\n              </Action>\n            )}\n            {twitter && (\n              <Action\n                href={`https://twitter.com/${twitter}`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"twitter\" /> Twitter\n              </Action>\n            )}\n            {github && (\n              <Action\n                href={`https://github.com/${github}`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"github\" /> GitHub\n              </Action>\n            )}\n          </PersonSocial>\n        </PersonDetails>\n      </Person>\n    </Modal>\n  );\n};\n\nexport default PersonModal;\n","import { object, shape } from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { breakpoint, time, track } from \"ui/settings\";\nimport { fadeIn } from \"ui/animations\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport Person from \"./ofPeople/Person\";\nimport PersonModal from \"./ofPeople/PersonModal\";\n\nconst PeopleSection = styled.section`\n  ${setSpace(\"mbk\")};\n`;\n\nconst People = styled.ul`\n  animation: ${fadeIn} ${time.l} linear;\n  width: 100%;\n  display: grid;\n  grid-gap: 10px;\n  ${breakpoint.phone} {\n    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n  }\n  ${breakpoint.tabletUp} {\n    grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));\n  }\n`;\n\nconst PeopleIntro = styled.div`\n  ${setSpace(\"mbh\")};\n  text-align: center;\n  h2 {\n    ${setSpace(\"mbm\")};\n    ${setSpace(\"phs\")};\n    ${setSpace(\"pvx\")};\n    ${setType(\"s\")};\n    background: white;\n    color: ${({ theme }) => theme.actionColor};\n    display: inline-block;\n    font-weight: 800;\n    letter-spacing: ${track.m};\n    text-transform: uppercase;\n  }\n  p {\n    ${setType(\"l\")};\n    color: white;\n  }\n`;\n\nexport default class PeopleTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPerson: null\n    };\n    this.handleShowPerson = this.handleShowPerson.bind(this);\n  }\n\n  handleShowPerson(obj) {\n    this.setState(prevState => ({\n      currentPerson: prevState.currentPerson ? null : obj\n    }));\n  }\n\n  render() {\n    const { currentPerson } = this.state;\n    const { defaultAvatar, overlords, members, accomplices } = this.props.data;\n    const { frontmatter } = this.props.data.markdownRemark;\n    const genericAvatar = defaultAvatar.edges[0].node.childImageSharp;\n    return (\n      <>\n        <Helmet {...this.props} title={frontmatter.title} />\n        <Layout {...this.props}>\n          <Header>\n            <h1 className=\"hero\">{frontmatter.heading}</h1>\n            <p className=\"para\">{frontmatter.subheading}</p>\n          </Header>\n          <Body>\n            <PeopleSection>\n              <PeopleIntro>\n                <h2>{frontmatter.overlordsHeading}</h2>\n                <p>{frontmatter.overlordsDescr}</p>\n              </PeopleIntro>\n              <People>\n                {overlords.edges.map(({ node }) => (\n                  <Person\n                    data={node}\n                    defaultAvatar={genericAvatar}\n                    key={node.frontmatter.uid}\n                    toggleModal={e => this.handleShowPerson(node, e)}\n                  />\n                ))}\n              </People>\n            </PeopleSection>\n            <PeopleIntro>\n              <h2>{frontmatter.membersHeading}</h2>\n              <p>{frontmatter.membersDescr}</p>\n            </PeopleIntro>\n            <PeopleSection>\n              <People>\n                {members.edges.map(({ node }) => (\n                  <Person\n                    data={node}\n                    defaultAvatar={genericAvatar}\n                    key={node.frontmatter.uid}\n                    toggleModal={e => this.handleShowPerson(node, e)}\n                  />\n                ))}\n              </People>\n            </PeopleSection>\n            <PeopleSection>\n              <PeopleIntro>\n                <h2>{frontmatter.accomplicesHeading}</h2>\n                <p>{frontmatter.accomplicesDescr}</p>\n              </PeopleIntro>\n              <People>\n                {accomplices.edges.map(({ node }) => (\n                  <Person\n                    data={node}\n                    defaultAvatar={genericAvatar}\n                    key={node.frontmatter.uid}\n                    toggleModal={e => this.handleShowPerson(node, e)}\n                  />\n                ))}\n              </People>\n            </PeopleSection>\n          </Body>\n          {currentPerson !== null ? (\n            <PersonModal\n              toggleModal={this.handleShowPerson}\n              data={currentPerson}\n              defaultAvatar={genericAvatar}\n            />\n          ) : null}\n        </Layout>\n      </>\n    );\n  }\n}\n\nPeopleTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired,\n    overlords: object.isRequired,\n    members: object.isRequired,\n    accomplices: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`query PeopleTplQuery($uid: String!) {\n  markdownRemark(frontmatter: {uid: {eq: $uid}}) {\n    html\n    frontmatter {\n      uid\n      title\n      heading\n      subheading\n      accomplicesHeading\n      accomplicesDescr\n      membersHeading\n      membersDescr\n      overlordsHeading\n      overlordsDescr\n    }\n  }\n  defaultAvatar: allFile(\n    filter: {relativePath: {eq: \"images/default-avatar.png\"}}\n  ) {\n    edges {\n      node {\n        childImageSharp {\n          gatsbyImageData(\n            width: 240\n            height: 300\n            quality: 90\n            placeholder: DOMINANT_COLOR\n            layout: CONSTRAINED\n          )\n        }\n      }\n    }\n  }\n  overlords: allMarkdownRemark(\n    filter: {fileAbsolutePath: {regex: \"//pages/people/bios/*/.*/*.md/\"}, frontmatter: {role: {elemMatch: {overlord: {eq: true}}}}}\n    sort: {frontmatter: {fname: ASC}}\n  ) {\n    edges {\n      node {\n        id\n        html\n        frontmatter {\n          bluesky\n          fname\n          github\n          lname\n          mastodon\n          quote\n          score\n          twitter\n          website\n          uid\n          avatar {\n            childImageSharp {\n              gatsbyImageData(\n                width: 240\n                height: 300\n                placeholder: DOMINANT_COLOR\n                transformOptions: {cropFocus: CENTER}\n                layout: CONSTRAINED\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n  members: allMarkdownRemark(\n    filter: {fileAbsolutePath: {regex: \"//pages/people/bios/*/.*/*.md/\"}, frontmatter: {role: {elemMatch: {member: {eq: true}}}}}\n    sort: {frontmatter: {fname: ASC}}\n  ) {\n    edges {\n      node {\n        id\n        html\n        frontmatter {\n          bluesky\n          fname\n          github\n          lname\n          mastodon\n          quote\n          score\n          twitter\n          website\n          uid\n          avatar {\n            childImageSharp {\n              gatsbyImageData(\n                width: 240\n                height: 300\n                placeholder: DOMINANT_COLOR\n                transformOptions: {cropFocus: CENTER}\n                layout: CONSTRAINED\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n  accomplices: allMarkdownRemark(\n    filter: {fileAbsolutePath: {regex: \"//pages/people/bios/*/.*/*.md/\"}, frontmatter: {role: {elemMatch: {accomplice: {eq: true}}}}}\n    sort: {frontmatter: {fname: ASC}}\n  ) {\n    edges {\n      node {\n        id\n        html\n        frontmatter {\n          bluesky\n          fname\n          github\n          lname\n          mastodon\n          quote\n          score\n          twitter\n          website\n          uid\n          avatar {\n            childImageSharp {\n              gatsbyImageData(\n                width: 240\n                height: 300\n                placeholder: DOMINANT_COLOR\n                transformOptions: {cropFocus: CENTER}\n                layout: CONSTRAINED\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n}`;\n","import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Actionbar, Action, Icon, Gallery, Tile } from \"ui/components\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst Flex = styled.div`\n  ${breakpoint.tabletUp} {\n    display: flex;\n    & div.sideA,\n    & div.sideB {\n      flex: 0 0 50%;\n    }\n    & div.sideA {\n      ${setSpace(\"prl\")};\n    }\n    & div.sideB {\n      ${setSpace(\"pll\")};\n    }\n  }\n`;\n\nconst BodyHd = styled(Flex)`\n  ${setSpace(\"mbl\")};\n  ${breakpoint.tabletUp} {\n    display: flex;\n  }\n  & div.sideB {\n    display: flex;\n  }\n  & div.time,\n  & div.code {\n    flex: 0 0 50%;\n  }\n  ${breakpoint.phone} {\n    & div.sideB {\n      ${setSpace(\"mtl\")}\n    }\n  }\n`;\n\nconst BodyBd = styled(Flex)`\n  ${setSpace(\"mvl\")};\n  a {\n    color: ${({ theme }) => theme.actionColor};\n    text-decoration: underline;\n  }\n`;\n\nconst BodyFt = styled.div`\n  ${setSpace(\"mth\")};\n  ${setType(\"s\")};\n`;\n\nconst Label = styled.h2`\n  ${setSpace(\"mbs\")};\n  ${setType(\"s\")};\n  color: ${({ theme }) => theme.dimmedColor};\n`;\n\nconst Name = styled.p`\n  ${setType(\"h\")};\n  font-weight: 800;\n  color: ${({ theme }) => theme.titleColor};\n  text-transform: uppercase;\n`;\n\nconst Tagline = styled.p`\n  ${setSpace(\"mbl\")};\n  ${setType(\"l\")};\n  font-weight: 600;\n  color: ${({ theme }) => theme.titleColor};\n`;\n\nconst Description = styled.div`\n  color: ${({ theme }) => theme.titleColor};\n  p {\n    &:not(:last-child) {\n      ${setSpace(\"mbm\")};\n    }\n  }\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    font-weight: 800;\n  }\n  a {\n    color: ${({ theme }) => theme.actionColor};\n  }\n  em {\n    font-style: italic;\n  }\n  strong {\n    color: ${({ theme }) => theme.titleColor};\n    font-weight: 800;\n  }\n  ul,\n  ol {\n    ${setType(\"s\")};\n  }\n  ul li:before {\n    ${setSpace(\"mrs\")};\n    color: ${({ theme }) => theme.color};\n    content: \"–\";\n    display: inline-block;\n  }\n  ol li {\n    list-style: decimal;\n  }\n  ${breakpoint.phone} {\n    ${setSpace(\"mbl\")};\n  }\n`;\n\nconst Meta = styled.p`\n  ${setType(\"s\")};\n  color: ${({ theme }) => theme.titleColor};\n  font-weight: 800;\n  text-transform: uppercase;\n`;\n\nconst Awards = styled.div`\n  ${setSpace(\"mtl\")};\n  ${setType(\"s\")};\n  color: ${({ theme }) => theme.titleColor};\n  li:before {\n    ${setSpace(\"mrx\")};\n    color: ${({ theme }) => theme.dimmedColor};\n    content: \"—\";\n  }\n  strong {\n    font-weight: 600;\n  }\n  i {\n    color: ${({ theme }) => theme.dimmedColor};\n  }\n`;\n\nconst Lists = styled.div`\n  ${setSpace(\"mtl\")};\n  ${setType(\"s\")};\n  color: ${({ theme }) => theme.titleColor};\n  display: flex;\n  & > * {\n    flex: 0 0 50%;\n  }\n  li:before {\n    ${setSpace(\"mrx\")};\n    color: ${({ theme }) => theme.dimmedColor};\n    content: \"—\";\n  }\n  i {\n    color: ${({ theme }) => theme.dimmedColor};\n  }\n`;\n\nexport default class ProjectItemTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const portfolioItem = this.props.data.markdownRemark;\n    const genericCover = this.props.data.defaultCover.edges[0].node\n      .childImageSharp;\n    const { frontmatter, html } = portfolioItem;\n    const {\n      application,\n      awards,\n      bifpresents,\n      cover,\n      date,\n      slides,\n      link,\n      needs,\n      code,\n      source,\n      tagline,\n      timeframe,\n      title\n    } = frontmatter;\n\n    const displayGallery = () => {\n      const images = [];\n      if (cover) {\n        images.push(cover.childImageSharp.gatsbyImageData);\n      }\n      if (slides) {\n        slides.forEach(slide => images.push(slide.childImageSharp.gatsbyImageData));\n      }\n      return <Gallery images={images} defaultImage={genericCover.gatsbyImageData} />;\n    };\n\n    return (\n      <>\n        <Helmet {...this.props} title={title} />\n        <Layout {...this.props}>\n          <Header>\n            <span className=\"small\">BIFFUD Presents</span>\n            <h1 className=\"hero\">{bifpresents}</h1>\n            <span className=\"small\">{date}</span>\n          </Header>\n          <Body>\n            <Tile space=\"h\">\n              <BodyHd>\n                <div className=\"sideA\">\n                  <div className=\"name\">\n                    <Label>Project name</Label>\n                    <Name>{title}</Name>\n                  </div>\n                </div>\n                <div className=\"sideB\">\n                  <div className=\"time\">\n                    <Label>Timeframe</Label>\n                    <Meta>{timeframe}</Meta>\n                  </div>\n                  <div className=\"code\">\n                    <Label>Code</Label>\n                    <Meta>{code}</Meta>\n                  </div>\n                </div>\n              </BodyHd>\n              <BodyBd>\n                <div className=\"sideA\">\n                  <Label>Tagline</Label>\n                  <Tagline>{tagline}</Tagline>\n                  <Label>Description</Label>\n                  <Description dangerouslySetInnerHTML={{ __html: html }} />\n                </div>\n                <div className=\"sideB\">\n                  <Label>Proofs of existence</Label>\n                  {displayGallery()}\n                  {awards && awards.length > 0 && (\n                    <Awards>\n                      <Label>Proofs of excellence</Label>\n                      <ul>\n                        {awards.map(({ name, url, description }, i) => {\n                          if (!name) return null\n                          const AwardName = url ? (\n                            <>\n                              <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <strong>{name}</strong>\n                              </a>{\" \"}\n                              <Icon name=\"popout\" />\n                            </>\n                          ) : (\n                            <strong>{name}</strong>\n                          )\n\n                          return (\n                            <li key={`${name}_${i}`}>\n                              {AwardName}\n                              {description ? ` ${description}` : ''}\n                            </li>\n                          )\n                        })}\n                      </ul>\n                    </Awards>\n                  )}\n                  <Lists>\n                    {source || application ? (\n                      <div className=\"sideB\" style={{ padding: \"0\" }}>\n                        <Label>More proofs</Label>\n                        <ul>\n                          {source ? (\n                            <li>\n                              <a href={source} target=\"_blank\" rel=\"noopener noreferrer\">\n                                Source code\n                              </a>{\" \"}\n                              <Icon name=\"popout\" />\n                            </li>\n                          ) : null}\n                          {application ? (\n                            <li>\n                              <a href={application} target=\"_blank\" rel=\"noopener noreferrer\">\n                                BIFFUD Application\n                              </a>{\" \"}\n                              <Icon name=\"popout\" />\n                            </li>\n                          ) : null}\n                        </ul>\n                      </div>\n                    ) : null}\n                    {Object.keys(needs).length > 0 ? (\n                      <div className=\"sideB\" style={{ padding: \"0\" }}>\n                        <Label>Needs</Label>\n                        <ul>\n                          {Object.keys(needs).map(need => {\n                            const dict = {\n                              code: \"Code\",\n                              graphic: \"Graphic Design\",\n                              money: \"Money\",\n                              users: \"Users\",\n                              uxui: \"UX / UI Design\"\n                            };\n                            if (needs[need]) {\n                              return (\n                                <li key={need}>\n                                  {need !== \"other\" ? dict[need] : needs[need]}\n                                </li>\n                              );\n                            }\n                            return null;\n                          })}\n                        </ul>\n                      </div>\n                    ) : null}\n                  </Lists>\n                </div>\n              </BodyBd>\n              <BodyFt>\n                <Actionbar>\n                  {link ? (\n                    <div>\n                      <Action button primary href={link}>\n                        Launch project\n                      </Action>\n                    </div>\n                  ) : null}\n                  <div>\n                    <Action\n                      href=\"https://patreon.com/biffud\"\n                      target=\"_blank\"\n                    >\n                      Donate to support\n                    </Action>\n                  </div>\n                </Actionbar>\n              </BodyFt>\n            </Tile>\n          </Body>\n        </Layout>\n      </>\n    );\n  }\n}\n\nProjectItemTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`query PortfolioItemsByUID($uid: String!) {\n  markdownRemark(frontmatter: {uid: {eq: $uid}}) {\n    html\n    frontmatter {\n      active\n      application\n      slides {\n        childImageSharp {\n          gatsbyImageData(\n            width: 600\n            quality: 90\n            placeholder: DOMINANT_COLOR\n            layout: CONSTRAINED\n          )\n        }\n      }\n      bifpresents\n      date(formatString: \"MMM YYYY\")\n      link\n      code\n      source\n      tagline\n      timeframe\n      title\n      uid\n      awards {\n        name\n        url\n        description\n      }\n      needs {\n        code\n        graphic\n        money\n        uxui\n        users\n        other\n      }\n      cover {\n        childImageSharp {\n          gatsbyImageData(\n            width: 600\n            quality: 90\n            placeholder: DOMINANT_COLOR\n            layout: CONSTRAINED\n          )\n        }\n      }\n    }\n  }\n  defaultCover: allFile(filter: {relativePath: {eq: \"images/default-cover.png\"}}) {\n    edges {\n      node {\n        childImageSharp {\n          gatsbyImageData(\n            width: 600\n            quality: 90\n            placeholder: DOMINANT_COLOR\n            layout: CONSTRAINED\n          )\n        }\n      }\n    }\n  }\n}`;\n","import { graphql, Link } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Icon, Tile } from \"ui/components\";\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst Projects = styled.ol`\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 40px;\n    grid-template-columns: repeat(auto-fill, minmax(340px, 1fr));\n    margin-left: auto;\n    margin-right: auto;\n  }\n  ${breakpoint.desktopUp} {\n    grid-template-columns: repeat(auto-fill, minmax(380px, 1fr));\n  }\n`;\n\nconst Flag = styled.span`\n  ${setType(\"x\")};\n  ${setSpace(\"mlx\")};\n  color: ${({ theme }) => theme.dimmedColor};\n  font-weight: 800;\n  text-transform: uppercase;\n`;\n\nconst Project = styled.li`\n  grid-row-end: span 1;\n  ${breakpoint.phone} {\n    ${setSpace(\"mbl\")};\n  }\n  ${breakpoint.tabletUp} {\n    &:nth-child(even) {\n      transform: translateY(30px);\n    }\n  }\n`;\n\nconst ProjectCover = styled.div`\n  ${setSpace(\"mbm\")};\n  border: 2px solid ${({ theme }) => theme.actionColor};\n  position: relative;\n  ${({ $hasPlaceholder, theme }) =>\n    $hasPlaceholder\n      ? `\n  .thinking {\n    color: ${theme.actionColor};\n    display: inline-block;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    i {\n      font-size: 80px !important;\n    }\n  }`\n      : ``};\n`;\n\nconst ProjectHd = styled.div`\n  ${setSpace(\"mbm\")};\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  span {\n    font-weight: 800;\n    text-transform: uppercase;\n  }\n  span.code {\n    align-items: center;\n    color: ${({ theme }) => theme.titleColor};\n    display: flex;\n  }\n  span.date {\n    color: ${({ theme }) => theme.dimmedColor};\n  }\n`;\n\nconst ProjectBd = styled.div`\n  align-items: flex-start;\n  display: flex;\n  justify-content: space-between;\n  h2,\n  span {\n    ${setType(\"l\")};\n    color: ${({ theme }) => theme.actionColor};\n    font-weight: 800;\n    text-transform: uppercase;\n  }\n  h2 {\n    max-width: 75%;\n  }\n  span {\n    display: none;\n  }\n  ${breakpoint.desktopUp} {\n    span {\n      display: inline-block;\n    }\n  }\n`;\n\nconst ProjectFt = styled.div`\n  color: ${({ theme }) => theme.titleColor};\n  p.summary {\n    ${setSpace(\"mts\")};\n  }\n`;\n\nexport default class ProjectListingTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { defaultCover, projects, markdownRemark } = this.props.data;\n    const genericCover = defaultCover.edges[0].node.childImageSharp;\n    const { frontmatter } = markdownRemark;\n    return <>\n      <Helmet {...this.props} title={frontmatter.title} />\n      <Layout {...this.props}>\n        <Header>\n          <h1 className=\"hero\">{frontmatter.heading}</h1>\n          <p className=\"para\">{frontmatter.subheading}</p>\n        </Header>\n        <Body>\n          <Projects>\n            {projects.edges.map(({ node }) => {\n              const {\n                active,\n                cover,\n                date,\n                code,\n                tagline,\n                title,\n                uid\n              } = node.frontmatter;\n              return (\n                <Project key={uid} as=\"li\">\n                  <Tile as={Link} to={`/projects/${uid}`}>\n                    <ProjectHd>\n                      <span className=\"code\">\n                        {code} {!active ? <Flag>(Hibernated)</Flag> : null}\n                      </span>\n                      <span className=\"date\">{date}</span>\n                    </ProjectHd>\n                    <ProjectCover $hasPlaceholder={!cover}>\n                      <GatsbyImage\n                        image={cover\n                          ? cover.childImageSharp.gatsbyImageData\n                          : genericCover.gatsbyImageData}\n                        alt={title}\n                      />\n                      {!cover ? (\n                        <span className=\"thinking\">\n                          <Icon name=\"thinking\" size=\"h\" />\n                        </span>\n                      ) : null}\n                    </ProjectCover>\n                    <ProjectBd>\n                      <h2 className=\"title\">{title}</h2>\n                      <span>\n                        <Icon name=\"arrow-right\" text=\"Read more…\" />\n                      </span>\n                    </ProjectBd>\n                    <ProjectFt>\n                      <p className=\"summary\">{tagline}</p>\n                    </ProjectFt>\n                  </Tile>\n                </Project>\n              );\n            })}\n          </Projects>\n        </Body>\n      </Layout>\n    </>;\n  }\n}\n\nProjectListingTpl.propTypes = {\n  data: shape({\n    projects: object.isRequired,\n    markdownRemark: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`query ProjectsTplQuery($uid: String!) {\n  markdownRemark(frontmatter: {uid: {eq: $uid}}) {\n    html\n    frontmatter {\n      uid\n      title\n      heading\n      subheading\n    }\n  }\n  defaultCover: allFile(filter: {relativePath: {eq: \"images/default-cover.png\"}}) {\n    edges {\n      node {\n        childImageSharp {\n          gatsbyImageData(\n            width: 600\n            quality: 90\n            placeholder: DOMINANT_COLOR\n            layout: CONSTRAINED\n          )\n        }\n      }\n    }\n  }\n  projects: allMarkdownRemark(\n    filter: {fileAbsolutePath: {regex: \"/pages/projects/.*project.md/\"}}\n    sort: [{frontmatter: {score: DESC}}, {frontmatter: {date: ASC}}]\n  ) {\n    edges {\n      node {\n        id\n        frontmatter {\n          uid\n          date(formatString: \"MMM YYYY\")\n          title\n          active\n          tagline\n          code\n          cover {\n            childImageSharp {\n              gatsbyImageData(\n                width: 600\n                quality: 90\n                placeholder: DOMINANT_COLOR\n                layout: CONSTRAINED\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n}`;\n","import { graphql, type PageProps } from \"gatsby\";\nimport React from \"react\";\n\nimport { Copy, Tile } from \"ui/components\";\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\n\nconst AboutTpl = ({ data, ...props }: PageProps<Queries.AboutTplQuery>) => {\n  const { frontmatter, html } = data.markdownRemark ?? {};\n\n  return (\n    <>\n      <Helmet {...props} title={frontmatter?.title ?? \"\"} />\n      <Layout {...props}>\n        <Header>\n          <h1 className=\"hero\">{frontmatter?.heading ?? \"\"}</h1>\n          <p className=\"para\">{frontmatter?.subheading ?? \"\"}</p>\n        </Header>\n        <Body\n          style={{\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            maxWidth: \"900px\",\n          }}\n        >\n          <Tile space=\"h\">\n            <Copy dangerouslySetInnerHTML={{ __html: html ?? \"\" }} />\n          </Tile>\n        </Body>\n      </Layout>\n    </>\n  );\n};\n\nexport default AboutTpl;\n\nexport const pageQuery = graphql`\n  query AboutTpl($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n      }\n    }\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { graphql, type PageProps } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Copy, Tile } from \"ui/components\";\n\nconst BlogPostReadTimer = () => {\n  const [readingTime, setReadingTime] = useState<number>(Math.random() * 300);\n\n  function tick() {\n    setReadingTime((previous) => previous + Math.random() * 15 - 4);\n  }\n\n  useEffect(() => {\n    let timer: number;\n    if (typeof window !== \"undefined\") {\n      timer = window.setInterval(tick, 3000);\n    }\n\n    return () => {\n      if (typeof window !== \"undefined\") {\n        window.clearInterval(timer);\n      }\n    };\n  }, []);\n\n  return <span>{readingTime.toFixed(2)}</span>;\n};\n\nconst BlogPostTpl = ({\n  data,\n  ...props\n}: PageProps<Queries.BlogPostsByUIDQuery>) => {\n  const blogPost = data.markdownRemark;\n  const { frontmatter, html } = blogPost ?? {};\n  const { cover, date, title } = frontmatter ?? {};\n\n  return (\n    <>\n      <Helmet {...props} title={title ?? \"\"} />\n      <Layout {...props}>\n        <Header>\n          <span className=\"small\">\n            Reading Time: <BlogPostReadTimer /> seconds\n          </span>\n          <h1 className=\"hero\">{title}</h1>\n          <span className=\"small\">{date}</span>\n        </Header>\n        <Body\n          style={{\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            maxWidth: \"900px\",\n          }}\n        >\n          {cover?.childImageSharp?.gatsbyImageData ? (\n            <GatsbyImage\n              image={cover.childImageSharp.gatsbyImageData}\n              alt={title ?? \"\"}\n            />\n          ) : null}\n          <Tile space=\"h\">\n            <Copy dangerouslySetInnerHTML={{ __html: html ?? \"\" }} />\n          </Tile>\n        </Body>\n      </Layout>\n    </>\n  );\n};\n\nexport default BlogPostTpl;\n\nexport const pageQuery = graphql`\n  query BlogPostsByUID($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        cover {\n          childImageSharp {\n            gatsbyImageData(\n              width: 900\n              quality: 90\n              placeholder: DOMINANT_COLOR\n              layout: CONSTRAINED\n            )\n          }\n        }\n      }\n    }\n  }\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { scatteredBif1, scatteredBif2, scatteredBif3 } from \"assets/images\";\nimport { color, font } from \"ui/settings\";\nimport { setType } from \"ui/mixins\";\n\nconst Sample = styled.div`\n  font-family: ${font.sans};\n  overflow: hidden;\n  position: relative;\n  h1,\n  p,\n  span {\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n    max-width: 1000px;\n  }\n  .PlxEl {\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    bottom: 0;\n    left: 0;\n    position: absolute;\n    right: 0;\n    top: 0;\n  }\n  .PlxEl1 {\n    background-image: url(${scatteredBif1});\n  }\n  .PlxEl2 {\n    background-image: url(${scatteredBif2});\n  }\n  .PlxEl3 {\n    background-image: url(${scatteredBif3});\n  }\n  h1 {\n    ${setType(\"h\")};\n    font-weight: 800;\n    font-style: italic;\n  }\n  span {\n    position: relative;\n    z-index: 100;\n    ${setType(\"s\")};\n  }\n  p {\n    ${setType(\"m\")};\n  }\n`;\n\nexport default class Playground extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { hexArray } = color;\n    return (\n      <>\n        {hexArray.map((color, i) => (\n          <Sample\n            key={i}\n            style={{\n              background: color,\n              color: \"white\",\n              padding: \"100px\",\n              fontWeight: \"bold\"\n            }}\n          >\n            <div className=\"PlxEl PlxEl1\" />\n            <div className=\"PlxEl PlxEl2\" />\n            <div className=\"PlxEl PlxEl3\" />\n            <span>{color}</span>\n            <h1>\n              Bad Idea Factory is a collective of chaotic creatives using\n              technology to make people thinking face emoji. We have been\n              working in this space for hundreds of thousands of years.\n            </h1>\n            <p>\n              Bad Idea Factory is a collective of chaotic creatives using\n              technology to make people thinking face emoji. We have been\n              working in this space for hundreds of thousands of years.\n            </p>\n          </Sample>\n        ))}\n      </>\n    );\n  }\n}\n\nPlayground.propTypes = {};\n","import React from \"react\";\n\nimport { Playground } from \"ui/templates\";\n\nfunction PlaygroundPage(props) {\n  return <Playground {...props} />\n}\n\nexport default PlaygroundPage;\n"],"names":["PostList","styled","ol","withConfig","displayName","componentId","breakpoint","tabletUp","Post","Tile","setType","phone","setSpace","PostCover","div","_ref","theme","actionColor","PostHd","_ref2","desktopUp","PostBd","_ref3","titleColor","PostFt","_ref4","color","BlogListingTpl","_Component","props","_this","call","state","_inheritsLoose","prototype","render","posts","this","data","frontmatter","markdownRemark","React","Helmet","Object","assign","title","Layout","Header","className","heading","subheading","Body","edges","map","_ref5","node","timeToRead","cover","date","summary","uid","key","as","to","Link","GatsbyImage","image","childImageSharp","gatsbyImageData","alt","Icon","name","text","Component","ContactHolder","Social","ul","SocialItem","li","ContactTpl","email","facebookid","linkedinid","twitterid","myspaceid","githubid","Action","button","obfuscated","href","size","EmojiHolder","EmojiTpl","Questions","$isActive","FAQListingTpl","tab","switchTab","bind","_proto","str","setState","membershipQuestions","membership","html","partnershipQuestions","partnership","style","marginLeft","marginRight","maxWidth","Tabs","count","Tab","handleClick","isActive","partnershipTab","membershipTab","Copy","dangerouslySetInnerHTML","__html","Element","Section","Title","h1","Items","Item","ItemTitle","h3","ItemText","clients","subtitle","client","id","link","target","logo","ItemImage","$hasPlaceholder","p","projects","project","placeholder","tagline","services","service","i","space","background","$span","testimonials","testimonial","span","source","HomeTpl","defaultCover","genericCover","Pitch","Actionbar","Projects","projectsSubtitle","projectsTitle","Clients","clientsTitle","clientsSubtitle","Services","servicesTitle","servicesSubtitle","goodatTitle","goodatSubtitle","goodat","Testimonials","testimonialsTitle","testimonialsSubtitle","LandingTpl","projectsCta","contactCta","MentionsList","Mention","$highlight","MentionCover","MentionHd","MentionBd","MediaTpl","mentions","publication","highlight","Person","time","s","actionDecor","PersonPic","$hasAvatar","PersonDetails","PersonName","PersonLinks","defaultAvatar","avatar","bluesky","fname","github","lname","mastodon","twitter","website","onClick","toggleModal","role","e","stopPropagation","rel","h2","PersonBio","PersonQuote","PersonSocial","quote","Modal","PeopleSection","section","People","fadeIn","l","PeopleIntro","track","m","PeopleTpl","currentPerson","handleShowPerson","obj","prevState","overlords","members","accomplices","genericAvatar","overlordsHeading","overlordsDescr","membersHeading","membersDescr","accomplicesHeading","accomplicesDescr","PersonModal","Flex","BodyHd","BodyBd","BodyFt","Label","dimmedColor","Name","Tagline","Description","_ref6","_ref7","_ref8","Meta","_ref9","Awards","_ref10","_ref11","_ref12","Lists","_ref13","_ref14","_ref15","ProjectItemTpl","portfolioItem","application","awards","bifpresents","slides","needs","code","timeframe","displayGallery","images","push","forEach","slide","Gallery","defaultImage","length","_ref16","url","description","AwardName","padding","keys","need","dict","graphic","money","users","uxui","primary","Flag","Project","ProjectCover","ProjectHd","ProjectBd","ProjectFt","ProjectListingTpl","active","_data$markdownRemark","_frontmatter$title","_frontmatter$heading","_frontmatter$subheadi","BlogPostReadTimer","readingTime","setReadingTime","useState","Math","random","tick","previous","useEffect","timer","window","setInterval","clearInterval","toFixed","_cover$childImageShar","blogPost","Sample","font","sans","scatteredBif1","scatteredBif2","scatteredBif3","Playground","hexArray","fontWeight"],"sourceRoot":""}