{"version":3,"sources":["webpack:///./lib/ui/templates/LandingTpl.js"],"names":["LandingTpl","props","_this","_Component","call","this","state","render","_this$props$data$mark","data","markdownRemark","frontmatter","html","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","Fragment","ui_partials__WEBPACK_IMPORTED_MODULE_5__","Object","assign","title","className","heading","ui_components__WEBPACK_IMPORTED_MODULE_4__","button","to","projectsCta","contactCta","style","marginLeft","marginRight","maxWidth","space","dangerouslySetInnerHTML","__html","Component","propTypes","shape","object","isRequired","pageQuery"],"mappings":"mPAOqBA,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKC,MAAQ,GAFIJ,8BAKnBK,kBAAS,IAAAC,EACuBH,KAAKJ,MAAMQ,KAAKC,eAAtCC,EADDH,EACCG,YAAaC,EADdJ,EACcI,KACrB,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAADC,OAAAC,OAAA,GAAYd,KAAKJ,MAAjB,CAAwBmB,MAAOT,EAAYS,SAC3CP,EAAAC,EAAAC,cAACE,EAAA,EAAWZ,KAAKJ,MACfY,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,MAAIM,UAAU,QAAQV,EAAYW,SAClCT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQC,QAAM,EAACC,GAAG,aACfd,EAAYe,aAEfb,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQE,GAAG,YAAYd,EAAYgB,cAGvCd,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEW,MAAO,CACLC,WAAY,OACZC,YAAa,OACbC,SAAU,UAGZlB,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMS,MAAM,KACVnB,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMU,wBAAyB,CAAEC,OAAQtB,aA7BfuB,aAsCxCnC,EAAWoC,UAAY,CACrB3B,KAAM4B,gBAAM,CACV3B,eAAgB4B,SAAOC,aACtBA,YAGE,IAAMC,EAAS","file":"component---lib-ui-templates-landing-tpl-js-b2a11ca6e8f7a84e67cb.js","sourcesContent":["import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\n\nimport { Actionbar, Action, Copy, Tile } from \"ui/components\";\nimport { Body, Pitch, Helmet, Layout } from \"ui/partials\";\n\nexport default class LandingTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { frontmatter, html } = this.props.data.markdownRemark;\n    return (\n      <>\n        <Helmet {...this.props} title={frontmatter.title} />\n        <Layout {...this.props}>\n          <Pitch>\n            <h1 className=\"hero\">{frontmatter.heading}</h1>\n            <Actionbar>\n              <Action button to=\"/projects\">\n                {frontmatter.projectsCta}\n              </Action>\n              <Action to=\"/contact\">{frontmatter.contactCta}</Action>\n            </Actionbar>\n          </Pitch>\n          <Body\n            style={{\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              maxWidth: \"900px\"\n            }}\n          >\n            <Tile space=\"h\">\n              <Copy dangerouslySetInnerHTML={{ __html: html }} />\n            </Tile>\n          </Body>\n        </Layout>\n      </>\n    );\n  }\n}\n\nLandingTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query LandingTplQuery($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n        contactCta\n        projectsCta\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}