{"version":3,"file":"component---lib-ui-templates-blog-listing-tpl-js-f0829a7da522672a59e7.js","mappings":"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","sources":["webpack://biffud.com/./lib/ui/templates/BlogListingTpl.js"],"sourcesContent":["import { graphql, Link } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport styled from \"styled-components\";\n\nimport { Icon, Tile } from \"ui/components\";\nimport { breakpoint } from \"ui/settings\";\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst PostList = styled.ol`\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nconst Post = styled(Tile)`\n  ${setType(\"m\")};\n  grid-row-end: span 1;\n  position: relative;\n  ${breakpoint.phone} {\n    ${setSpace(\"mbl\")};\n  }\n`;\n\nconst PostCover = styled.div`\n  border: 2px solid ${({ theme }) => theme.actionColor};\n  ${setSpace(\"mbm\")};\n`;\n\nconst PostHd = styled.div`\n  ${setSpace(\"mbs\")};\n  align-items: flex-start;\n  display: flex;\n  justify-content: space-between;\n  h2,\n  span {\n    ${setType(\"l\")};\n    color: ${({ theme }) => theme.actionColor};\n    font-weight: 800;\n  }\n  span {\n    display: none;\n  }\n  ${breakpoint.desktopUp} {\n    span {\n      display: inline-block;\n    }\n  }\n`;\n\nconst PostBd = styled.div`\n  ${setSpace(\"mbm\")};\n  color: ${({ theme }) => theme.titleColor};\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nconst PostFt = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  span {\n    ${setType(\"s\")};\n    color: ${({ theme }) => theme.color};\n  }\n`;\n\nexport default class BlogListingTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { posts } = this.props.data;\n    const { frontmatter } = this.props.data.markdownRemark;\n    return <>\n      <Helmet {...this.props} title={frontmatter.title} />\n      <Layout {...this.props}>\n        <Header>\n          <h1 className=\"hero\">{frontmatter.heading}</h1>\n          <p className=\"para\">{frontmatter.subheading}</p>\n        </Header>\n        <Body>\n          <PostList>\n            {posts.edges.map(({ node }) => {\n              const { timeToRead } = node;\n              const { cover, date, summary, title, uid } = node.frontmatter;\n              return (\n                <Post key={uid} as=\"li\">\n                  <Tile to={`/tldr/${uid}`} as={Link}>\n                    {cover ? (\n                      <PostCover>\n                        <GatsbyImage image={cover.childImageSharp.gatsbyImageData} alt={title} />\n                      </PostCover>\n                    ) : null}\n                    <PostHd>\n                      <h2 className=\"title\">{title}</h2>\n                      <span>\n                        <Icon name=\"arrow-right\" text=\"Read moreâ€¦\" />\n                      </span>\n                    </PostHd>\n                    <PostBd>\n                      <p className=\"summary\">{summary}</p>\n                    </PostBd>\n                    <PostFt>\n                      <span>{date}</span>\n                      <span>{timeToRead} min read</span>\n                    </PostFt>\n                  </Tile>\n                </Post>\n              );\n            })}\n          </PostList>\n        </Body>\n      </Layout>\n    </>;\n  }\n}\n\nBlogListingTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired,\n    posts: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`query BlogTplQuery($uid: String!) {\n  markdownRemark(frontmatter: {uid: {eq: $uid}}) {\n    html\n    frontmatter {\n      uid\n      title\n      heading\n      subheading\n    }\n  }\n  posts: allMarkdownRemark(\n    filter: {fileAbsolutePath: {regex: \"/pages/tldr/.*post.md/\"}}\n    sort: {frontmatter: {date: DESC}}\n  ) {\n    edges {\n      node {\n        id\n        timeToRead\n        frontmatter {\n          uid\n          cover {\n            childImageSharp {\n              gatsbyImageData(\n                height: 240\n                quality: 100\n                placeholder: DOMINANT_COLOR\n                layout: FULL_WIDTH\n              )\n            }\n          }\n          date(formatString: \"MMMM D, YYYY\")\n          summary\n          title\n        }\n      }\n    }\n  }\n}`;\n"],"names":["PostList","styled","ol","withConfig","displayName","componentId","breakpoint","tabletUp","Post","Tile","setType","phone","setSpace","PostCover","div","_ref","theme","actionColor","PostHd","_ref2","desktopUp","PostBd","_ref3","titleColor","PostFt","_ref4","color","BlogListingTpl","_Component","props","_this","call","state","_inheritsLoose","prototype","render","posts","this","data","frontmatter","markdownRemark","React","Helmet","Object","assign","title","Layout","Header","className","heading","subheading","Body","edges","map","_ref5","node","timeToRead","cover","date","summary","uid","key","as","to","Link","GatsbyImage","image","childImageSharp","gatsbyImageData","alt","Icon","name","text","Component"],"sourceRoot":""}