{"version":3,"sources":["webpack:///./lib/ui/templates/ofPeople/Person.js","webpack:///./lib/ui/templates/ofPeople/PersonModal.js","webpack:///./lib/ui/templates/PeopleTpl.js"],"names":["Person","styled","li","time","s","theme","actionDecor","breakpoint","tabletUp","setSpace","PersonPic","div","avatar","actionColor","background","PersonDetails","setType","phone","PersonName","h3","color","PersonLinks","Member","props","defaultAvatar","frontmatter","data","fname","github","lname","twitter","onClick","toggleModal","role","hasAvatar","fluid","childImageSharp","e","stopPropagation","href","rel","target","name","size","defaultProps","h2","titleColor","PersonBio","PersonQuote","PersonSocial","html","quote","dangerouslySetInnerHTML","__html","PeopleSection","section","People","ul","fadeIn","l","PeopleIntro","track","m","PeopleTpl","state","currentPerson","handleShowPerson","bind","obj","this","setState","prevState","render","overlords","members","accomplices","markdownRemark","genericAvatar","edges","node","title","className","heading","subheading","overlordsHeading","overlordsDescr","map","key","uid","membersHeading","membersDescr","accomplicesHeading","accomplicesDescr","PersonModal","Component","pageQuery"],"mappings":"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","file":"component---lib-ui-templates-people-tpl-js-7c6e7ee400811c344b25.js","sourcesContent":["import { func, object, shape } from \"prop-types\";\nimport Img from \"gatsby-image\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Action, Icon } from \"ui/components\";\nimport { breakpoint, time } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst Person = styled.li`\n  align-items: center;\n  background: white;\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  transition: box-shadow ${time.s}, transform ${time.s};\n  &:hover {\n    box-shadow: 6px 6px 0 0 ${({ theme }) => theme.actionDecor};\n    transform: translate(-1px, -1px);\n  }\n  ${breakpoint.tabletUp} {\n    ${setSpace(\"pan\")};\n    );\n  }\n`;\n\nconst PersonPic = styled.div`\n  background: ${({ theme, avatar }) => (avatar ? \"\" : theme.actionColor)};\n  border: 2px solid ${({ theme }) => theme.background};\n  flex: 0 0 ${100 / 3}%;\n`;\n\nconst PersonDetails = styled.div`\n  ${setSpace(\"phm\")};\n  ${setType(\"s\")};\n  ${breakpoint.phone} {\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n  }\n`;\n\nconst PersonName = styled.h3`\n  ${setType(\"s\")};\n  color: ${({ theme }) => theme.color};\n  span {\n    display: block;\n    &:first-child {\n      ${setType(\"m\")};\n      color: ${({ theme }) => theme.actionColor};\n      font-weight: 800;\n    }\n  }\n`;\n\nconst PersonLinks = styled.div`\n  ${setSpace(\"mts\")};\n  & > * {\n    ${setSpace(\"mrs\")};\n    line-height: 1em;\n  }\n  ${breakpoint.phone} {\n    display: none;\n  }\n`;\n\nconst Member = props => {\n  const { defaultAvatar } = props;\n  const { frontmatter } = props.data;\n  const { avatar, fname, github, lname, twitter } = frontmatter;\n  return (\n    <Person onClick={props.toggleModal} role=\"button\">\n      <PersonPic hasAvatar={avatar}>\n        <Img\n          fluid={avatar ? avatar.childImageSharp.fluid : defaultAvatar.fluid}\n        />\n      </PersonPic>\n      <PersonDetails>\n        <PersonName>\n          <span>{fname}</span> <span>{lname}</span>\n        </PersonName>\n        <PersonLinks>\n          {twitter ? (\n            <Action\n              onClick={e => e.stopPropagation()}\n              href={`https://twitter.com/${twitter}`}\n              rel=\"external\"\n              target=\"_blank noreferrer nofollow\"\n            >\n              <Icon name=\"twitter\" size=\"s\" />\n            </Action>\n          ) : null}\n          {github ? (\n            <Action\n              onClick={e => e.stopPropagation()}\n              href={`https://github.com/${github}`}\n              rel=\"external\"\n              target=\"_blank noreferrer nofollow\"\n            >\n              <Icon name=\"github\" size=\"s\" />\n            </Action>\n          ) : null}\n        </PersonLinks>\n      </PersonDetails>\n    </Person>\n  );\n};\n\nMember.propTypes = {\n  defaultAvatar: object.isRequired,\n  data: shape({\n    frontmatter: object.isRequired\n  }).isRequired,\n  toggleModal: func.isRequired\n};\n\nMember.defaultProps = {};\n\nexport default Member;\n","import { func, object, shape } from \"prop-types\";\nimport Img from \"gatsby-image\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Action, Copy, Icon, Modal } from \"ui/components\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst Person = styled.div`\n  ${setSpace(\"pbh\")};\n  ${breakpoint.tabletUp} {\n    display: flex;\n    flex-direction: row;\n  }\n`;\nconst PersonPic = styled.div`\n  background: ${({ hasAvatar, theme }) =>\n    !hasAvatar ? theme.actionColor : \"\"};\n  ${breakpoint.tabletUp} {\n    flex: 0 0 ${100 / 4}%;\n  }\n  ${breakpoint.phone} {\n    ${setSpace(\"mbl\")};\n    & > * {\n      margin-left: auto;\n      margin-right: auto;\n      max-width: 200px;\n    }\n  }\n`;\nconst PersonDetails = styled.div`\n  ${setType(\"s\")};\n  ${breakpoint.tabletUp} {\n    ${setSpace(\"pll\")};\n  }\n`;\nconst PersonName = styled.h2`\n  ${setType(\"l\")};\n  font-weight: 800;\n  color: ${({ theme }) => theme.titleColor};\n`;\nconst PersonBio = styled.div`\n  ${setSpace(\"mvm\")};\n  ${setType(\"m\")};\n  color: ${({ theme }) => theme.titleColor};\n`;\nconst PersonQuote = styled.div`\n  ${setSpace(\"mvm\")};\n`;\nconst PersonSocial = styled.div`\n  & > *:not(:first-child) {\n    ${setSpace(\"mlm\")};\n  }\n  & > *:not(:last-child) {\n    ${setSpace(\"mrm\")};\n  }\n`;\n\nconst Member = props => {\n  const { defaultAvatar } = props;\n  const { frontmatter, html } = props.data;\n  const { avatar, fname, github, lname, quote, twitter } = frontmatter;\n  return (\n    <Modal toggleModal={props.toggleModal}>\n      <Person>\n        <PersonPic hasAvatar={avatar}>\n          <Img\n            fluid={avatar ? avatar.childImageSharp.fluid : defaultAvatar.fluid}\n          />\n        </PersonPic>\n        <PersonDetails>\n          <PersonName>\n            {fname} {lname}\n          </PersonName>\n          <PersonBio>\n            <Copy dangerouslySetInnerHTML={{ __html: html }} />\n          </PersonBio>\n          <PersonQuote>{quote}</PersonQuote>\n          <PersonSocial>\n            <Action href={`https://github.com/${github}`} target=\"_blank\">\n              <Icon name=\"github\" /> GitHub\n            </Action>\n            <Action href={`https://twitter.com/${twitter}`} target=\"_blank\">\n              <Icon name=\"twitter\" /> Twitter\n            </Action>\n          </PersonSocial>\n        </PersonDetails>\n      </Person>\n    </Modal>\n  );\n};\n\nMember.propTypes = {\n  defaultAvatar: object.isRequired,\n  data: shape({\n    frontmatter: object.isRequired\n  }).isRequired,\n  toggleModal: func.isRequired\n};\n\nMember.defaultProps = {};\n\nexport default Member;\n","import { object, shape } from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { breakpoint, time, track } from \"ui/settings\";\nimport { fadeIn } from \"ui/animations\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport Person from \"./ofPeople/Person\";\nimport PersonModal from \"./ofPeople/PersonModal\";\n\nconst PeopleSection = styled.section`\n  ${setSpace(\"mbk\")};\n`;\n\nconst People = styled.ul`\n  animation: ${fadeIn} ${time.l} linear;\n  width: 100%;\n  display: grid;\n  grid-gap: 10px;\n  ${breakpoint.phone} {\n    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n  }\n  ${breakpoint.tabletUp} {\n    grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));\n  }\n`;\n\nconst PeopleIntro = styled.div`\n  ${setSpace(\"mbh\")};\n  text-align: center;\n  h2 {\n    ${setSpace(\"mbm\")};\n    ${setSpace(\"phs\")};\n    ${setSpace(\"pvx\")};\n    ${setType(\"s\")};\n    background: white;\n    color: ${({ theme }) => theme.actionColor};\n    display: inline-block;\n    font-weight: 800;\n    letter-spacing: ${track.m};\n    text-transform: uppercase;\n  }\n  p {\n    ${setType(\"l\")};\n    color: white;\n  }\n`;\n\nexport default class PeopleTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPerson: null\n    };\n    this.handleShowPerson = this.handleShowPerson.bind(this);\n  }\n\n  handleShowPerson(obj) {\n    this.setState(prevState => ({\n      currentPerson: prevState.currentPerson ? null : obj\n    }));\n  }\n\n  render() {\n    const { currentPerson } = this.state;\n    const { defaultAvatar, overlords, members, accomplices } = this.props.data;\n    const { frontmatter } = this.props.data.markdownRemark;\n    const genericAvatar = defaultAvatar.edges[0].node.childImageSharp;\n    return (\n      <>\n        <Helmet {...this.props} title={frontmatter.title} />\n        <Layout {...this.props}>\n          <Header>\n            <h1 className=\"hero\">{frontmatter.heading}</h1>\n            <p className=\"para\">{frontmatter.subheading}</p>\n          </Header>\n          <Body>\n            <PeopleSection>\n              <PeopleIntro>\n                <h2>{frontmatter.overlordsHeading}</h2>\n                <p>{frontmatter.overlordsDescr}</p>\n              </PeopleIntro>\n              <People>\n                {overlords.edges.map(({ node }) => (\n                  <Person\n                    data={node}\n                    defaultAvatar={genericAvatar}\n                    key={node.frontmatter.uid}\n                    toggleModal={e => this.handleShowPerson(node, e)}\n                  />\n                ))}\n              </People>\n            </PeopleSection>\n            <PeopleIntro>\n              <h2>{frontmatter.membersHeading}</h2>\n              <p>{frontmatter.membersDescr}</p>\n            </PeopleIntro>\n            <PeopleSection>\n              <People>\n                {members.edges.map(({ node }) => (\n                  <Person\n                    data={node}\n                    defaultAvatar={genericAvatar}\n                    key={node.frontmatter.uid}\n                    toggleModal={e => this.handleShowPerson(node, e)}\n                  />\n                ))}\n              </People>\n            </PeopleSection>\n            <PeopleSection>\n              <PeopleIntro>\n                <h2>{frontmatter.accomplicesHeading}</h2>\n                <p>{frontmatter.accomplicesDescr}</p>\n              </PeopleIntro>\n              <People>\n                {accomplices.edges.map(({ node }) => (\n                  <Person\n                    data={node}\n                    defaultAvatar={genericAvatar}\n                    key={node.frontmatter.uid}\n                    toggleModal={e => this.handleShowPerson(node, e)}\n                  />\n                ))}\n              </People>\n            </PeopleSection>\n          </Body>\n          {currentPerson !== null ? (\n            <PersonModal\n              toggleModal={this.handleShowPerson}\n              data={currentPerson}\n              defaultAvatar={genericAvatar}\n            />\n          ) : null}\n        </Layout>\n      </>\n    );\n  }\n}\n\nPeopleTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired,\n    overlords: object.isRequired,\n    members: object.isRequired,\n    accomplices: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query PeopleTplQuery($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n        accomplicesHeading\n        accomplicesDescr\n        membersHeading\n        membersDescr\n        overlordsHeading\n        overlordsDescr\n      }\n    }\n    defaultAvatar: allFile(\n      filter: { relativePath: { eq: \"images/default-avatar.png\" } }\n    ) {\n      edges {\n        node {\n          childImageSharp {\n            fluid(\n              maxWidth: 240\n              maxHeight: 300\n              quality: 90\n              traceSVG: { color: \"lightgray\" }\n            ) {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n      }\n    }\n    overlords: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//pages/people/bios/*/.*/*.md/\" }\n        frontmatter: { role: { elemMatch: { overlord: { eq: true } } } }\n      }\n      sort: { order: DESC, fields: [frontmatter___score] }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            fname\n            github\n            lname\n            quote\n            score\n            twitter\n            uid\n            avatar {\n              childImageSharp {\n                fluid(\n                  maxWidth: 240\n                  maxHeight: 300\n                  cropFocus: CENTER\n                  traceSVG: {\n                    color: \"#ffffff\"\n                    optTolerance: 0.1\n                    turdSize: 10\n                    turnPolicy: TURNPOLICY_MINORITY\n                  }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    members: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//pages/people/bios/*/.*/*.md/\" }\n        frontmatter: { role: { elemMatch: { member: { eq: true } } } }\n      }\n      sort: { order: DESC, fields: [frontmatter___score] }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            fname\n            github\n            lname\n            quote\n            score\n            twitter\n            uid\n            avatar {\n              childImageSharp {\n                fluid(\n                  maxWidth: 240\n                  maxHeight: 300\n                  cropFocus: CENTER\n                  traceSVG: {\n                    color: \"#ffffff\"\n                    optTolerance: 0.1\n                    turdSize: 10\n                    turnPolicy: TURNPOLICY_MINORITY\n                  }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    accomplices: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//pages/people/bios/*/.*/*.md/\" }\n        frontmatter: { role: { elemMatch: { accomplice: { eq: true } } } }\n      }\n      sort: { order: DESC, fields: [frontmatter___score, frontmatter___lname] }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            fname\n            github\n            lname\n            quote\n            score\n            twitter\n            uid\n            avatar {\n              childImageSharp {\n                fluid(\n                  maxWidth: 240\n                  maxHeight: 300\n                  cropFocus: CENTER\n                  traceSVG: {\n                    color: \"#ffffff\"\n                    optTolerance: 0.1\n                    turdSize: 10\n                    turnPolicy: TURNPOLICY_MINORITY\n                  }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}