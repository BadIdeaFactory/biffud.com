{"version":3,"file":"component---lib-ui-templates-emoji-tpl-tsx-f89f9fd0a7421f53e0e1.js","mappings":"oLASA,MAAMA,GAAcC,EAAAA,EAAAA,SAAOC,EAAAA,IAAKC,WAAA,CAAAC,YAAA,wBAAAC,YAAA,gBAAZJ,CAAY,0TAC5BK,EAAAA,EAAAA,IAAS,OAKTC,EAAAA,GAAWC,OACTF,EAAAA,EAAAA,IAAS,QAGTA,EAAAA,EAAAA,IAAS,QACFG,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,WAAW,GAMvCJ,EAAAA,GAAWC,OASJI,IAAA,IAAC,MAAEF,GAAOE,EAAA,OAAKF,EAAMC,WAAW,GAEvCJ,EAAAA,GAAWC,OA6BjB,UAvBiBK,IAA0D,IAAAC,EAAA,IAAzD,KAAEC,KAASC,GAAyCH,EACpE,MAAM,YAAEI,GAAmC,QAAtBH,EAAGC,EAAKG,sBAAc,IAAAJ,EAAAA,EAAI,CAAC,GAC1C,MAAEK,EAAK,QAAEC,EAAO,WAAEC,GAAeJ,QAAAA,EAAe,CAAC,EAEvD,OACEK,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACC,EAAAA,GAAMC,OAAAC,OAAA,GAAKT,EAAK,CAAEG,MAAOA,QAAAA,EAAS,MACnCG,EAAAA,cAACI,EAAAA,GAAWV,EACVM,EAAAA,cAACK,EAAAA,GAAI,KACHL,EAAAA,cAACM,EAAAA,GAAM,KACLN,EAAAA,cAAA,MAAIO,UAAU,QAAQT,GACtBE,EAAAA,cAAA,KAAGO,UAAU,QAAQR,IAEvBC,EAAAA,cAACtB,EAAW,KACVsB,EAAAA,cAACQ,EAAAA,GAAI,CAACC,KAAK,aACXT,EAAAA,cAAA,MAAIO,UAAU,QAAO,qBAI1B,C","sources":["webpack://biffud.com/./lib/ui/templates/EmojiTpl.tsx"],"sourcesContent":["import React from \"react\";\nimport { graphql, type PageProps } from \"gatsby\";\nimport styled from \"styled-components\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Icon, Tile } from \"ui/components\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace } from \"ui/mixins\";\n\nconst EmojiHolder = styled(Tile)`\n  ${setSpace(\"pak\")};\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 600px;\n  text-align: center;\n  ${breakpoint.phone} {\n    ${setSpace(\"pvh\")};\n  }\n  i {\n    ${setSpace(\"mbl\")};\n    color: ${({ theme }) => theme.actionColor};\n    display: inline-block;\n    font-size: 240px;\n    height: 240px;\n    line-height: 240px;\n    width: 240px;\n    ${breakpoint.phone} {\n      font-size: 200px;\n      height: 200px;\n      line-height: 200px;\n      width: 200px;\n    }\n  }\n  h2 {\n    font-size: 36px;\n    color: ${({ theme }) => theme.actionColor};\n    font-weight: 800;\n    ${breakpoint.phone} {\n      font-size: 26px;\n    }\n  }\n`;\n\nconst EmojiTpl = ({ data, ...props }: PageProps<Queries.EmojiTplQuery>) => {\n  const { frontmatter } = data.markdownRemark ?? {};\n  const { title, heading, subheading } = frontmatter ?? {};\n\n  return (\n    <>\n      <Helmet {...props} title={title ?? \"\"} />\n      <Layout {...props}>\n        <Body>\n          <Header>\n            <h1 className=\"hero\">{heading}</h1>\n            <p className=\"para\">{subheading}</p>\n          </Header>\n          <EmojiHolder>\n            <Icon name=\"thinking\" />\n            <h2 className=\"name\">:thinkingface:</h2>\n          </EmojiHolder>\n        </Body>\n      </Layout>\n    </>\n  );\n};\n\nexport default EmojiTpl;\n\nexport const pageQuery = graphql`\n  query EmojiTpl($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n      }\n    }\n  }\n`;\n"],"names":["EmojiHolder","styled","Tile","withConfig","displayName","componentId","setSpace","breakpoint","phone","_ref","theme","actionColor","_ref2","_ref3","_data$markdownRemark","data","props","frontmatter","markdownRemark","title","heading","subheading","React","Helmet","Object","assign","Layout","Body","Header","className","Icon","name"],"sourceRoot":""}