{"version":3,"sources":["webpack:///./lib/ui/templates/EmojiTpl.js"],"names":["EmojiHolder","styled","Tile","setSpace","breakpoint","phone","theme","actionColor","EmojiTpl","props","state","render","frontmatter","this","data","markdownRemark","title","className","heading","subheading","name","Component","pageQuery"],"mappings":"mRAUA,IAAMA,EAAcC,YAAOC,KAAV,4EAAGD,CAAH,yTACbE,YAAS,OAKTC,IAAWC,MACTF,YAAS,OAGTA,YAAS,QACF,qBAAGG,MAAkBC,cAM5BH,IAAWC,OASJ,qBAAGC,MAAkBC,cAE5BH,IAAWC,OAMIG,E,oBACnB,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,GAFI,E,0GAKnBC,OAAA,WAAU,IACAC,EAAgBC,KAAKJ,MAAMK,KAAKC,eAAhCH,YACR,OACE,oCACE,kBAAC,IAAD,iBAAYC,KAAKJ,MAAjB,CAAwBO,MAAOJ,EAAYI,SAC3C,kBAAC,IAAWH,KAAKJ,MACf,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,wBAAIQ,UAAU,QAAQL,EAAYM,SAClC,uBAAGD,UAAU,QAAQL,EAAYO,aAEnC,kBAACnB,EAAD,KACE,kBAAC,IAAD,CAAMoB,KAAK,WAAWH,UAAU,UAChC,wBAAIA,UAAU,QAAd,uB,GAnBwBI,aAkCzBC,EAAS","file":"component---lib-ui-templates-emoji-tpl-js-5a430b1d4464fcc5739a.js","sourcesContent":["import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Icon, Tile } from \"ui/components\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace } from \"ui/mixins\";\n\nconst EmojiHolder = styled(Tile)`\n  ${setSpace(\"pak\")};\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 600px;\n  text-align: center;\n  ${breakpoint.phone} {\n    ${setSpace(\"pvh\")};\n  }\n  i {\n    ${setSpace(\"mbl\")};\n    color: ${({ theme }) => theme.actionColor};\n    display: inline-block;\n    font-size: 240px;\n    height: 240px;\n    line-height: 240px;\n    width: 240px;\n    ${breakpoint.phone} {\n      font-size: 200px;\n      height: 200px;\n      line-height: 200px;\n      width: 200px;\n    }\n  }\n  h2 {\n    font-size: 36px;\n    color: ${({ theme }) => theme.actionColor};\n    font-weight: 800;\n    ${breakpoint.phone} {\n      font-size: 26px;\n    }\n  }\n`;\n\nexport default class EmojiTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { frontmatter } = this.props.data.markdownRemark;\n    return (\n      <>\n        <Helmet {...this.props} title={frontmatter.title} />\n        <Layout {...this.props}>\n          <Body>\n            <Header>\n              <h1 className=\"hero\">{frontmatter.heading}</h1>\n              <p className=\"para\">{frontmatter.subheading}</p>\n            </Header>\n            <EmojiHolder>\n              <Icon name=\"thinking\" className=\"emoji\" />\n              <h2 className=\"name\">:thinkingface:</h2>\n            </EmojiHolder>\n          </Body>\n        </Layout>\n      </>\n    );\n  }\n}\n\nEmojiTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query EmojiTplQuery($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}