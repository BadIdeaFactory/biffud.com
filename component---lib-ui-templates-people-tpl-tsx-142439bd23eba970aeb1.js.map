{"version":3,"file":"component---lib-ui-templates-people-tpl-tsx-142439bd23eba970aeb1.js","mappings":"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","sources":["webpack://biffud.com/./lib/ui/templates/ofPeople/Person.tsx","webpack://biffud.com/./lib/ui/templates/ofPeople/PersonModal.tsx","webpack://biffud.com/./lib/ui/templates/PeopleTpl.tsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport styled from \"styled-components\";\n\nimport { Action, Icon } from \"ui/components\";\nimport { breakpoint, time } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst Person = styled.li`\n  align-items: center;\n  background: white;\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  transition: box-shadow ${time.s}, transform ${time.s};\n  &:hover {\n    box-shadow: 6px 6px 0 0 ${({ theme }) => theme.actionDecor};\n    transform: translate(-1px, -1px);\n  }\n  ${breakpoint.tabletUp} {\n    ${setSpace(\"pan\")};\n    );\n  }\n`;\n\ninterface PersonPicProps {\n  readonly $hasAvatar: boolean;\n}\n\nconst PersonPic = styled.div<PersonPicProps>`\n  background: ${({ theme, $hasAvatar }) =>\n    $hasAvatar ? \"\" : theme.actionColor};\n  border: 2px solid ${({ theme }) => theme.background};\n  flex: 0 0 ${100 / 3}%;\n`;\n\nconst PersonDetails = styled.div`\n  ${setSpace(\"phm\")};\n  ${setType(\"s\")};\n  ${breakpoint.phone} {\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n  }\n`;\n\nconst PersonName = styled.h3`\n  ${setType(\"s\")};\n  color: ${({ theme }) => theme.color};\n  span {\n    display: block;\n    &:first-child {\n      ${setType(\"m\")};\n      color: ${({ theme }) => theme.actionColor};\n      font-weight: 800;\n    }\n  }\n`;\n\nconst PersonLinks = styled.div`\n  ${setSpace(\"mts\")};\n  & > * {\n    ${setSpace(\"mrs\")};\n    line-height: 1em;\n  }\n  ${breakpoint.phone} {\n    display: none;\n  }\n`;\n\ninterface MemberProps {\n  data: PersonNode;\n  defaultAvatar: any;\n}\n\nfunction Member(props: MemberProps) {\n  const { defaultAvatar } = props;\n  const { frontmatter } = props.data;\n  const {\n    uid,\n    avatar,\n    bluesky,\n    fname,\n    github,\n    lname,\n    mastodon,\n    twitter,\n    website,\n  } = frontmatter ?? {};\n\n  return (\n    <Link to={`/people/${uid}`}>\n      <Person>\n        <PersonPic $hasAvatar={avatar ? true : false}>\n          <GatsbyImage\n            image={\n              avatar?.childImageSharp?.gatsbyImageData\n                ? avatar.childImageSharp.gatsbyImageData\n                : defaultAvatar.gatsbyImageData\n            }\n            alt=\"\"\n          />\n        </PersonPic>\n        <PersonDetails>\n          <PersonName>\n            <span>{fname}</span> <span>{lname}</span>\n          </PersonName>\n          <PersonLinks>\n            {website ? (\n              <Action\n                onClick={(e: React.MouseEvent) => e.stopPropagation()}\n                href={`https://${website}/`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"website\" size=\"s\" />\n              </Action>\n            ) : null}\n            {bluesky ? (\n              <Action\n                onClick={(e: React.MouseEvent) => e.stopPropagation()}\n                href={`https://bsky.app/profile/${bluesky}`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"bluesky\" size=\"s\" />\n              </Action>\n            ) : null}\n            {mastodon ? (\n              <Action\n                onClick={(e: React.MouseEvent) => e.stopPropagation()}\n                href={`https://${mastodon}`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"mastodon\" size=\"s\" />\n              </Action>\n            ) : null}\n            {twitter ? (\n              <Action\n                onClick={(e: React.MouseEvent) => e.stopPropagation()}\n                href={`https://twitter.com/${twitter}`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"twitter\" size=\"s\" />\n              </Action>\n            ) : null}\n            {github ? (\n              <Action\n                onClick={(e: React.MouseEvent) => e.stopPropagation()}\n                href={`https://github.com/${github}`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"github\" size=\"s\" />\n              </Action>\n            ) : null}\n          </PersonLinks>\n        </PersonDetails>\n      </Person>\n    </Link>\n  );\n}\n\nexport default Member;\n","import React from \"react\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport styled from \"styled-components\";\n\nimport { Action, Copy, Icon, Modal } from \"ui/components\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst Person = styled.div`\n  ${setSpace(\"pbh\")};\n  ${breakpoint.tabletUp} {\n    display: flex;\n    flex-direction: row;\n  }\n`;\n\ninterface PersonPicProps {\n  readonly $hasAvatar: boolean;\n}\n\nconst PersonPic = styled.div<PersonPicProps>`\n  background: ${({ $hasAvatar, theme }) =>\n    !$hasAvatar ? theme.actionColor : \"\"};\n  ${breakpoint.tabletUp} {\n    flex: 0 0 ${100 / 4}%;\n  }\n  ${breakpoint.phone} {\n    ${setSpace(\"mbl\")};\n    & > * {\n      margin-left: auto;\n      margin-right: auto;\n      max-width: 200px;\n    }\n  }\n`;\nconst PersonDetails = styled.div`\n  ${setType(\"s\")};\n  ${breakpoint.tabletUp} {\n    ${setSpace(\"pll\")};\n  }\n`;\nconst PersonName = styled.h2`\n  ${setType(\"l\")};\n  font-weight: 800;\n  color: ${({ theme }) => theme.titleColor};\n`;\nconst PersonBio = styled.div`\n  ${setSpace(\"mvm\")};\n  ${setType(\"m\")};\n  color: ${({ theme }) => theme.titleColor};\n`;\nconst PersonQuote = styled.div`\n  ${setSpace(\"mvm\")};\n`;\nconst PersonSocial = styled.div`\n  & > * {\n    ${setSpace(\"mvx\")};\n  }\n  & > *:not(:last-child) {\n    ${setSpace(\"mrl\")};\n  }\n`;\n\ninterface PersonModalProps {\n  defaultAvatar: NonNullable<\n    Queries.PeopleTplQuery[\"defaultAvatar\"][\"edges\"][0][\"node\"][\"childImageSharp\"]\n  >;\n  data: PersonNode;\n  toggleModal: (obj: PersonNode) => void;\n}\n\nconst PersonModal: React.FC<PersonModalProps> = ({\n  defaultAvatar,\n  data,\n  toggleModal,\n}) => {\n  const { frontmatter, html } = data ?? {};\n  const {\n    avatar,\n    bluesky,\n    fname,\n    github,\n    lname,\n    mastodon,\n    quote,\n    twitter,\n    website,\n  } = frontmatter ?? {};\n\n  return (\n    <Modal toggleModal={toggleModal as VoidFunction}>\n      <Person>\n        <PersonPic $hasAvatar={avatar ? true : false}>\n          <GatsbyImage\n            image={\n              avatar?.childImageSharp?.gatsbyImageData\n                ? avatar.childImageSharp.gatsbyImageData\n                : defaultAvatar.gatsbyImageData\n            }\n            alt=\"\"\n          />\n        </PersonPic>\n        <PersonDetails>\n          <PersonName>\n            {fname} {lname}\n          </PersonName>\n          <PersonBio>\n            <Copy dangerouslySetInnerHTML={{ __html: html ?? \"\" }} />\n          </PersonBio>\n          <PersonQuote>{quote}</PersonQuote>\n          <PersonSocial>\n            {website && (\n              <Action\n                href={`https://${website}/`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"website\" /> Website\n              </Action>\n            )}\n            {bluesky && (\n              <Action\n                href={`https://bsky.app/profile/${bluesky}`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"bluesky\" /> Bluesky\n              </Action>\n            )}\n            {mastodon && (\n              <Action\n                href={`https://${mastodon}`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"mastodon\" /> Mastodon\n              </Action>\n            )}\n            {twitter && (\n              <Action\n                href={`https://twitter.com/${twitter}`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"twitter\" /> Twitter\n              </Action>\n            )}\n            {github && (\n              <Action\n                href={`https://github.com/${github}`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"github\" /> GitHub\n              </Action>\n            )}\n          </PersonSocial>\n        </PersonDetails>\n      </Person>\n    </Modal>\n  );\n};\n\nexport default PersonModal;\n","import React, { useState } from \"react\";\nimport { graphql, navigate, type PageProps } from \"gatsby\";\nimport styled from \"styled-components\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { breakpoint, time, track } from \"ui/settings\";\nimport { fadeIn } from \"ui/animations\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport Person from \"./ofPeople/Person\";\nimport PersonModal from \"./ofPeople/PersonModal\";\n\nconst PeopleSection = styled.section`\n  ${setSpace(\"mbk\")};\n`;\n\nconst People = styled.ul`\n  animation: ${fadeIn} ${time.l} linear;\n  width: 100%;\n  display: grid;\n  grid-gap: 10px;\n  ${breakpoint.phone} {\n    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n  }\n  ${breakpoint.tabletUp} {\n    grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));\n  }\n`;\n\nconst PeopleIntro = styled.div`\n  ${setSpace(\"mbh\")};\n  text-align: center;\n  h2 {\n    ${setSpace(\"mbm\")};\n    ${setSpace(\"phs\")};\n    ${setSpace(\"pvx\")};\n    ${setType(\"s\")};\n    background: white;\n    color: ${({ theme }) => theme.actionColor};\n    display: inline-block;\n    font-weight: 800;\n    letter-spacing: ${track.m};\n    text-transform: uppercase;\n  }\n  p {\n    ${setType(\"l\")};\n    color: white;\n  }\n`;\n\nconst PeopleTpl = (props: PageProps<Queries.PeopleTplQuery>) => {\n  const { defaultAvatar, overlords, members, accomplices, all } = props.data;\n  const { frontmatter } = props.data.markdownRemark ?? {};\n  const genericAvatar = defaultAvatar.edges[0].node.childImageSharp;\n\n  // For routing to a specific person\n  let personObj\n  if (typeof window !== \"undefined\") {\n    const personId = window.location.pathname\n      .replace(\"/people/\", \"\")\n      .replace(\"/\", \"\");\n    personObj = all.edges.find(\n      ({ node }: { node: PersonNode }) => node.frontmatter?.uid === personId\n    )?.node;\n  }\n\n  const [currentPerson, setCurrentPerson] = useState<PersonNode | null>(\n    personObj ?? null\n  );\n\n  // from the <Modal /> component when it closes force a navigation back to\n  // parent page\n  function closeModal() {\n    navigate(\"/people\");\n  }\n\n  return (\n    <>\n      <Helmet {...props} title={frontmatter?.title ?? \"\"} />\n      <Layout {...props}>\n        <Header>\n          <h1 className=\"hero\">{frontmatter?.heading}</h1>\n          <p className=\"para\">{frontmatter?.subheading}</p>\n        </Header>\n        <Body>\n          <PeopleSection>\n            <PeopleIntro>\n              <h2>{frontmatter?.overlordsHeading}</h2>\n              <p>{frontmatter?.overlordsDescr}</p>\n            </PeopleIntro>\n            <People>\n              {overlords.edges.map(({ node }: { node: PersonNode }) => (\n                <Person\n                  data={node}\n                  defaultAvatar={genericAvatar}\n                  key={node.frontmatter?.uid}\n                />\n              ))}\n            </People>\n          </PeopleSection>\n          <PeopleIntro>\n            <h2>{frontmatter?.membersHeading}</h2>\n            <p>{frontmatter?.membersDescr}</p>\n          </PeopleIntro>\n          <PeopleSection>\n            <People>\n              {members.edges.map(({ node }: { node: PersonNode }) => (\n                <Person\n                  data={node}\n                  defaultAvatar={genericAvatar}\n                  key={node.frontmatter?.uid}\n                />\n              ))}\n            </People>\n          </PeopleSection>\n          <PeopleSection>\n            <PeopleIntro>\n              <h2>{frontmatter?.accomplicesHeading}</h2>\n              <p>{frontmatter?.accomplicesDescr}</p>\n            </PeopleIntro>\n            <People>\n              {accomplices.edges.map(({ node }: { node: PersonNode }) => (\n                <Person\n                  data={node}\n                  defaultAvatar={genericAvatar}\n                  key={node.frontmatter?.uid}\n                />\n              ))}\n            </People>\n          </PeopleSection>\n        </Body>\n        {currentPerson !== null ? (\n          <PersonModal\n            toggleModal={closeModal}\n            data={currentPerson}\n            defaultAvatar={genericAvatar!}\n          />\n        ) : null}\n      </Layout>\n    </>\n  );\n};\n\nexport default PeopleTpl;\n\nexport const pageQuery = graphql`\n  query PeopleTpl($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n        accomplicesHeading\n        accomplicesDescr\n        membersHeading\n        membersDescr\n        overlordsHeading\n        overlordsDescr\n      }\n    }\n    defaultAvatar: allFile(\n      filter: { relativePath: { eq: \"images/default-avatar.png\" } }\n    ) {\n      edges {\n        node {\n          childImageSharp {\n            gatsbyImageData(\n              width: 240\n              height: 300\n              quality: 90\n              placeholder: DOMINANT_COLOR\n              layout: CONSTRAINED\n            )\n          }\n        }\n      }\n    }\n    overlords: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//pages/people/bios/*/.*/*.md/\" }\n        frontmatter: { role: { elemMatch: { overlord: { eq: true } } } }\n      }\n      sort: { frontmatter: { fname: ASC } }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            bluesky\n            fname\n            github\n            lname\n            mastodon\n            quote\n            score\n            twitter\n            website\n            uid\n            avatar {\n              childImageSharp {\n                gatsbyImageData(\n                  width: 240\n                  height: 300\n                  placeholder: DOMINANT_COLOR\n                  transformOptions: { cropFocus: CENTER }\n                  layout: CONSTRAINED\n                )\n              }\n            }\n          }\n        }\n      }\n    }\n    members: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//pages/people/bios/*/.*/*.md/\" }\n        frontmatter: { role: { elemMatch: { member: { eq: true } } } }\n      }\n      sort: { frontmatter: { fname: ASC } }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            bluesky\n            fname\n            github\n            lname\n            mastodon\n            quote\n            score\n            twitter\n            website\n            uid\n            avatar {\n              childImageSharp {\n                gatsbyImageData(\n                  width: 240\n                  height: 300\n                  placeholder: DOMINANT_COLOR\n                  transformOptions: { cropFocus: CENTER }\n                  layout: CONSTRAINED\n                )\n              }\n            }\n          }\n        }\n      }\n    }\n    accomplices: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//pages/people/bios/*/.*/*.md/\" }\n        frontmatter: { role: { elemMatch: { accomplice: { eq: true } } } }\n      }\n      sort: { frontmatter: { fname: ASC } }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            bluesky\n            fname\n            github\n            lname\n            mastodon\n            quote\n            score\n            twitter\n            website\n            uid\n            avatar {\n              childImageSharp {\n                gatsbyImageData(\n                  width: 240\n                  height: 300\n                  placeholder: DOMINANT_COLOR\n                  transformOptions: { cropFocus: CENTER }\n                  layout: CONSTRAINED\n                )\n              }\n            }\n          }\n        }\n      }\n    }\n    all: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"//pages/people/bios/*/.*/*.md/\" } }\n      sort: { frontmatter: { fname: ASC } }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            bluesky\n            fname\n            github\n            lname\n            mastodon\n            quote\n            score\n            twitter\n            website\n            uid\n            avatar {\n              childImageSharp {\n                gatsbyImageData(\n                  width: 240\n                  height: 300\n                  placeholder: DOMINANT_COLOR\n                  transformOptions: { cropFocus: CENTER }\n                  layout: CONSTRAINED\n                )\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["Person","styled","li","withConfig","displayName","componentId","time","s","_ref","theme","actionDecor","breakpoint","tabletUp","setSpace","PersonPic","div","_ref2","$hasAvatar","actionColor","_ref3","background","PersonDetails","setType","phone","PersonName","h3","_ref4","color","_ref5","PersonLinks","props","_avatar$childImageSha","defaultAvatar","frontmatter","data","uid","avatar","bluesky","fname","github","lname","mastodon","twitter","website","React","Link","to","GatsbyImage","image","childImageSharp","gatsbyImageData","alt","Action","onClick","e","stopPropagation","href","rel","target","Icon","name","size","h2","titleColor","PersonBio","PersonQuote","PersonSocial","toggleModal","html","quote","Modal","Copy","dangerouslySetInnerHTML","__html","PeopleSection","section","People","ul","fadeIn","l","PeopleIntro","track","m","_props$data$markdownR","_personObj","_frontmatter$title","overlords","members","accomplices","all","markdownRemark","genericAvatar","edges","node","personObj","window","_all$edges$find","personId","location","pathname","replace","find","_node$frontmatter","currentPerson","setCurrentPerson","useState","Helmet","Object","assign","title","Layout","Header","className","heading","subheading","Body","overlordsHeading","overlordsDescr","map","_node$frontmatter2","key","membersHeading","membersDescr","_node$frontmatter3","accomplicesHeading","accomplicesDescr","_node$frontmatter4","PersonModal","navigate"],"sourceRoot":""}