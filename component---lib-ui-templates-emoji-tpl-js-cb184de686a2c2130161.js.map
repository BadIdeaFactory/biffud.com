{"version":3,"file":"component---lib-ui-templates-emoji-tpl-js-cb184de686a2c2130161.js","mappings":"oOAUA,MAAMA,GAAcC,EAAAA,EAAAA,SAAOC,EAAAA,IAAKC,WAAA,CAAAC,YAAA,wBAAAC,YAAA,gBAAZJ,CAAY,0TAC5BK,EAAAA,EAAAA,IAAS,OAKTC,EAAAA,GAAWC,OACTF,EAAAA,EAAAA,IAAS,QAGTA,EAAAA,EAAAA,IAAS,QACFG,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,WAAW,GAMvCJ,EAAAA,GAAWC,OASJI,IAAA,IAAC,MAAEF,GAAOE,EAAA,OAAKF,EAAMC,WAAW,GAEvCJ,EAAAA,GAAWC,OAIf,IAEmBK,EAAQ,SAAAC,GAC3B,SAAAD,EAAYE,GAAQ,IAADC,EAED,OADhBA,EAAAF,EAAAG,KAAA,KAAMF,IAAM,MACPG,MAAQ,CAAC,EAAEF,CAClB,CAqBC,OArBAG,EAAAA,EAAAA,GAAAN,EAAAC,GAAAD,EAAAO,UAEDC,OAAA,WACE,MAAM,YAAEC,GAAgBC,KAAKR,MAAMS,KAAKC,eACxC,OACEC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACC,EAAAA,GAAMC,OAAAC,OAAA,GAAKN,KAAKR,MAAK,CAAEe,MAAOR,EAAYQ,SAC3CJ,EAAAA,cAACK,EAAAA,GAAWR,KAAKR,MACfW,EAAAA,cAACM,EAAAA,GAAI,KACHN,EAAAA,cAACO,EAAAA,GAAM,KACLP,EAAAA,cAAA,MAAIQ,UAAU,QAAQZ,EAAYa,SAClCT,EAAAA,cAAA,KAAGQ,UAAU,QAAQZ,EAAYc,aAEnCV,EAAAA,cAAC1B,EAAW,KACV0B,EAAAA,cAACW,EAAAA,GAAI,CAACC,KAAK,WAAWJ,UAAU,UAChCR,EAAAA,cAAA,MAAIQ,UAAU,QAAO,qBAMjC,EAACrB,CAAA,CAzB0B,CAAS0B,EAAAA,U","sources":["webpack://biffud.com/./lib/ui/templates/EmojiTpl.js"],"sourcesContent":["import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Icon, Tile } from \"ui/components\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace } from \"ui/mixins\";\n\nconst EmojiHolder = styled(Tile)`\n  ${setSpace(\"pak\")};\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 600px;\n  text-align: center;\n  ${breakpoint.phone} {\n    ${setSpace(\"pvh\")};\n  }\n  i {\n    ${setSpace(\"mbl\")};\n    color: ${({ theme }) => theme.actionColor};\n    display: inline-block;\n    font-size: 240px;\n    height: 240px;\n    line-height: 240px;\n    width: 240px;\n    ${breakpoint.phone} {\n      font-size: 200px;\n      height: 200px;\n      line-height: 200px;\n      width: 200px;\n    }\n  }\n  h2 {\n    font-size: 36px;\n    color: ${({ theme }) => theme.actionColor};\n    font-weight: 800;\n    ${breakpoint.phone} {\n      font-size: 26px;\n    }\n  }\n`;\n\nexport default class EmojiTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { frontmatter } = this.props.data.markdownRemark;\n    return (\n      <>\n        <Helmet {...this.props} title={frontmatter.title} />\n        <Layout {...this.props}>\n          <Body>\n            <Header>\n              <h1 className=\"hero\">{frontmatter.heading}</h1>\n              <p className=\"para\">{frontmatter.subheading}</p>\n            </Header>\n            <EmojiHolder>\n              <Icon name=\"thinking\" className=\"emoji\" />\n              <h2 className=\"name\">:thinkingface:</h2>\n            </EmojiHolder>\n          </Body>\n        </Layout>\n      </>\n    );\n  }\n}\n\nEmojiTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query EmojiTplQuery($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n      }\n    }\n  }\n`;\n"],"names":["EmojiHolder","styled","Tile","withConfig","displayName","componentId","setSpace","breakpoint","phone","_ref","theme","actionColor","_ref2","EmojiTpl","_Component","props","_this","call","state","_inheritsLoose","prototype","render","frontmatter","this","data","markdownRemark","React","Helmet","Object","assign","title","Layout","Body","Header","className","heading","subheading","Icon","name","Component"],"sourceRoot":""}