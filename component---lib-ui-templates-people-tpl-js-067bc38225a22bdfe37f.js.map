{"version":3,"sources":["webpack:///./lib/ui/templates/ofPeople/Person.js","webpack:///./lib/ui/templates/ofPeople/PersonModal.js","webpack:///./lib/ui/templates/PeopleTpl.js"],"names":["Person","styled","li","withConfig","displayName","componentId","time","s","_ref","theme","actionDecor","breakpoint","tabletUp","setSpace","PersonPic","div","_ref2","avatar","actionColor","_ref3","background","PersonDetails","setType","phone","PersonName","h3","_ref4","color","_ref5","PersonLinks","Member","props","defaultAvatar","frontmatter","data","fname","github","lname","twitter","react_default","a","createElement","onClick","toggleModal","role","hasAvatar","gatsby_image_default","fluid","childImageSharp","components","e","stopPropagation","href","rel","target","name","size","propTypes","object","isRequired","shape","func","defaultProps","h2","titleColor","PersonBio","PersonQuote","PersonSocial","_props$data","html","quote","PersonModal_Person","PersonModal_PersonPic","PersonModal_PersonDetails","PersonModal_PersonName","dangerouslySetInnerHTML","__html","PeopleSection","section","People","ul","fadeIn","l","PeopleIntro","track","m","PeopleTpl","_this","_Component","call","this","state","currentPerson","handleShowPerson","bind","assertThisInitialized_default","obj","setState","prevState","render","_this2","_this$props$data","overlords","members","accomplices","markdownRemark","genericAvatar","edges","node","Fragment","partials","Object","assign","title","className","heading","subheading","overlordsHeading","overlordsDescr","map","ofPeople_Person","key","uid","membersHeading","membersDescr","accomplicesHeading","accomplicesDescr","PersonModal","Component","pageQuery"],"mappings":"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","file":"component---lib-ui-templates-people-tpl-js-067bc38225a22bdfe37f.js","sourcesContent":["import { func, object, shape } from \"prop-types\";\nimport Img from \"gatsby-image\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Action, Icon } from \"ui/components\";\nimport { breakpoint, time } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst Person = styled.li`\n  align-items: center;\n  background: white;\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  transition: box-shadow ${time.s}, transform ${time.s};\n  &:hover {\n    box-shadow: 6px 6px 0 0 ${({ theme }) => theme.actionDecor};\n    transform: translate(-1px, -1px);\n  }\n  ${breakpoint.tabletUp} {\n    ${setSpace(\"pan\")};\n    );\n  }\n`;\n\nconst PersonPic = styled.div`\n  background: ${({ theme, avatar }) => (avatar ? \"\" : theme.actionColor)};\n  border: 2px solid ${({ theme }) => theme.background};\n  flex: 0 0 ${100 / 3}%;\n`;\n\nconst PersonDetails = styled.div`\n  ${setSpace(\"phm\")};\n  ${setType(\"s\")};\n  ${breakpoint.phone} {\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n  }\n`;\n\nconst PersonName = styled.h3`\n  ${setType(\"s\")};\n  color: ${({ theme }) => theme.color};\n  span {\n    display: block;\n    &:first-child {\n      ${setType(\"m\")};\n      color: ${({ theme }) => theme.actionColor};\n      font-weight: 800;\n    }\n  }\n`;\n\nconst PersonLinks = styled.div`\n  ${setSpace(\"mts\")};\n  & > * {\n    ${setSpace(\"mrs\")};\n    line-height: 1em;\n  }\n  ${breakpoint.phone} {\n    display: none;\n  }\n`;\n\nconst Member = props => {\n  const { defaultAvatar } = props;\n  const { frontmatter } = props.data;\n  const { avatar, fname, github, lname, twitter } = frontmatter;\n  return (\n    <Person onClick={props.toggleModal} role=\"button\">\n      <PersonPic hasAvatar={avatar}>\n        <Img\n          fluid={avatar ? avatar.childImageSharp.fluid : defaultAvatar.fluid}\n        />\n      </PersonPic>\n      <PersonDetails>\n        <PersonName>\n          <span>{fname}</span> <span>{lname}</span>\n        </PersonName>\n        <PersonLinks>\n          {twitter ? (\n            <Action\n              onClick={e => e.stopPropagation()}\n              href={`https://twitter.com/${twitter}`}\n              rel=\"external\"\n              target=\"_blank noreferrer nofollow\"\n            >\n              <Icon name=\"twitter\" size=\"s\" />\n            </Action>\n          ) : null}\n          {github ? (\n            <Action\n              onClick={e => e.stopPropagation()}\n              href={`https://github.com/${github}`}\n              rel=\"external\"\n              target=\"_blank noreferrer nofollow\"\n            >\n              <Icon name=\"github\" size=\"s\" />\n            </Action>\n          ) : null}\n        </PersonLinks>\n      </PersonDetails>\n    </Person>\n  );\n};\n\nMember.propTypes = {\n  defaultAvatar: object.isRequired,\n  data: shape({\n    frontmatter: object.isRequired\n  }).isRequired,\n  toggleModal: func.isRequired\n};\n\nMember.defaultProps = {};\n\nexport default Member;\n","import { func, object, shape } from \"prop-types\";\nimport Img from \"gatsby-image\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Action, Copy, Icon, Modal } from \"ui/components\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst Person = styled.div`\n  ${setSpace(\"pbh\")};\n  ${breakpoint.tabletUp} {\n    display: flex;\n    flex-direction: row;\n  }\n`;\nconst PersonPic = styled.div`\n  background: ${({ hasAvatar, theme }) =>\n    !hasAvatar ? theme.actionColor : \"\"};\n  ${breakpoint.tabletUp} {\n    flex: 0 0 ${100 / 4}%;\n  }\n  ${breakpoint.phone} {\n    ${setSpace(\"mbl\")};\n    & > * {\n      margin-left: auto;\n      margin-right: auto;\n      max-width: 200px;\n    }\n  }\n`;\nconst PersonDetails = styled.div`\n  ${setType(\"s\")};\n  ${breakpoint.tabletUp} {\n    ${setSpace(\"pll\")};\n  }\n`;\nconst PersonName = styled.h2`\n  ${setType(\"l\")};\n  font-weight: 800;\n  color: ${({ theme }) => theme.titleColor};\n`;\nconst PersonBio = styled.div`\n  ${setSpace(\"mvm\")};\n  ${setType(\"m\")};\n  color: ${({ theme }) => theme.titleColor};\n`;\nconst PersonQuote = styled.div`\n  ${setSpace(\"mvm\")};\n`;\nconst PersonSocial = styled.div`\n  & > *:not(:first-child) {\n    ${setSpace(\"mlm\")};\n  }\n  & > *:not(:last-child) {\n    ${setSpace(\"mrm\")};\n  }\n`;\n\nconst Member = props => {\n  const { defaultAvatar } = props;\n  const { frontmatter, html } = props.data;\n  const { avatar, fname, github, lname, quote, twitter } = frontmatter;\n  return (\n    <Modal toggleModal={props.toggleModal}>\n      <Person>\n        <PersonPic hasAvatar={avatar}>\n          <Img\n            fluid={avatar ? avatar.childImageSharp.fluid : defaultAvatar.fluid}\n          />\n        </PersonPic>\n        <PersonDetails>\n          <PersonName>\n            {fname} {lname}\n          </PersonName>\n          <PersonBio>\n            <Copy dangerouslySetInnerHTML={{ __html: html }} />\n          </PersonBio>\n          <PersonQuote>{quote}</PersonQuote>\n          <PersonSocial>\n            <Action href={`https://github.com/${github}`} target=\"_blank\">\n              <Icon name=\"github\" /> Github\n            </Action>\n            <Action href={`https://twitter.com/${twitter}`} target=\"_blank\">\n              <Icon name=\"twitter\" /> Twitter\n            </Action>\n          </PersonSocial>\n        </PersonDetails>\n      </Person>\n    </Modal>\n  );\n};\n\nMember.propTypes = {\n  defaultAvatar: object.isRequired,\n  data: shape({\n    frontmatter: object.isRequired\n  }).isRequired,\n  toggleModal: func.isRequired\n};\n\nMember.defaultProps = {};\n\nexport default Member;\n","import { object, shape } from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { breakpoint, time, track } from \"ui/settings\";\nimport { fadeIn } from \"ui/animations\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport Person from \"./ofPeople/Person\";\nimport PersonModal from \"./ofPeople/PersonModal\";\n\nconst PeopleSection = styled.section`\n  ${setSpace(\"mbk\")};\n`;\n\nconst People = styled.ul`\n  animation: ${fadeIn} ${time.l} linear;\n  width: 100%;\n  display: grid;\n  grid-gap: 10px;\n  ${breakpoint.phone} {\n    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n  }\n  ${breakpoint.tabletUp} {\n    grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));\n  }\n`;\n\nconst PeopleIntro = styled.div`\n  ${setSpace(\"mbh\")};\n  text-align: center;\n  h2 {\n    ${setSpace(\"mbm\")};\n    ${setSpace(\"phs\")};\n    ${setSpace(\"pvx\")};\n    ${setType(\"s\")};\n    background: white;\n    color: ${({ theme }) => theme.actionColor};\n    display: inline-block;\n    font-weight: 800;\n    letter-spacing: ${track.m};\n    text-transform: uppercase;\n  }\n  p {\n    ${setType(\"l\")};\n    color: white;\n  }\n`;\n\nexport default class PeopleTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPerson: null\n    };\n    this.handleShowPerson = this.handleShowPerson.bind(this);\n  }\n\n  handleShowPerson(obj) {\n    this.setState(prevState => ({\n      currentPerson: prevState.currentPerson ? null : obj\n    }));\n  }\n\n  render() {\n    const { currentPerson } = this.state;\n    const { defaultAvatar, overlords, members, accomplices } = this.props.data;\n    const { frontmatter } = this.props.data.markdownRemark;\n    const genericAvatar = defaultAvatar.edges[0].node.childImageSharp;\n    return (\n      <>\n        <Helmet {...this.props} title={frontmatter.title} />\n        <Layout {...this.props}>\n          <Header>\n            <h1 className=\"hero\">{frontmatter.heading}</h1>\n            <p className=\"para\">{frontmatter.subheading}</p>\n          </Header>\n          <Body>\n            <PeopleSection>\n              <PeopleIntro>\n                <h2>{frontmatter.overlordsHeading}</h2>\n                <p>{frontmatter.overlordsDescr}</p>\n              </PeopleIntro>\n              <People>\n                {overlords.edges.map(({ node }) => (\n                  <Person\n                    data={node}\n                    defaultAvatar={genericAvatar}\n                    key={node.frontmatter.uid}\n                    toggleModal={e => this.handleShowPerson(node, e)}\n                  />\n                ))}\n              </People>\n            </PeopleSection>\n            <PeopleIntro>\n              <h2>{frontmatter.membersHeading}</h2>\n              <p>{frontmatter.membersDescr}</p>\n            </PeopleIntro>\n            <PeopleSection>\n              <People>\n                {members.edges.map(({ node }) => (\n                  <Person\n                    data={node}\n                    defaultAvatar={genericAvatar}\n                    key={node.frontmatter.uid}\n                    toggleModal={e => this.handleShowPerson(node, e)}\n                  />\n                ))}\n              </People>\n            </PeopleSection>\n            <PeopleSection>\n              <PeopleIntro>\n                <h2>{frontmatter.accomplicesHeading}</h2>\n                <p>{frontmatter.accomplicesDescr}</p>\n              </PeopleIntro>\n              <People>\n                {accomplices.edges.map(({ node }) => (\n                  <Person\n                    data={node}\n                    defaultAvatar={genericAvatar}\n                    key={node.frontmatter.uid}\n                    toggleModal={e => this.handleShowPerson(node, e)}\n                  />\n                ))}\n              </People>\n            </PeopleSection>\n          </Body>\n          {currentPerson !== null ? (\n            <PersonModal\n              toggleModal={this.handleShowPerson}\n              data={currentPerson}\n              defaultAvatar={genericAvatar}\n            />\n          ) : null}\n        </Layout>\n      </>\n    );\n  }\n}\n\nPeopleTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired,\n    overlords: object.isRequired,\n    members: object.isRequired,\n    accomplices: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query PeopleTplQuery($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n        accomplicesHeading\n        accomplicesDescr\n        membersHeading\n        membersDescr\n        overlordsHeading\n        overlordsDescr\n      }\n    }\n    defaultAvatar: allFile(\n      filter: { relativePath: { eq: \"images/default-avatar.png\" } }\n    ) {\n      edges {\n        node {\n          childImageSharp {\n            fluid(\n              maxWidth: 240\n              maxHeight: 300\n              quality: 90\n              traceSVG: { color: \"lightgray\" }\n            ) {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n      }\n    }\n    overlords: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//pages/people/bios/*/.*/*.md/\" }\n        frontmatter: { role: { elemMatch: { overlord: { eq: true } } } }\n      }\n      sort: { order: DESC, fields: [frontmatter___score] }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            fname\n            github\n            lname\n            quote\n            score\n            twitter\n            uid\n            avatar {\n              childImageSharp {\n                fluid(\n                  maxWidth: 240\n                  maxHeight: 300\n                  cropFocus: CENTER\n                  traceSVG: {\n                    color: \"#ffffff\"\n                    optTolerance: 0.1\n                    turdSize: 10\n                    turnPolicy: TURNPOLICY_MINORITY\n                  }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    members: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//pages/people/bios/*/.*/*.md/\" }\n        frontmatter: { role: { elemMatch: { member: { eq: true } } } }\n      }\n      sort: { order: DESC, fields: [frontmatter___score] }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            fname\n            github\n            lname\n            quote\n            score\n            twitter\n            uid\n            avatar {\n              childImageSharp {\n                fluid(\n                  maxWidth: 240\n                  maxHeight: 300\n                  cropFocus: CENTER\n                  traceSVG: {\n                    color: \"#ffffff\"\n                    optTolerance: 0.1\n                    turdSize: 10\n                    turnPolicy: TURNPOLICY_MINORITY\n                  }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    accomplices: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//pages/people/bios/*/.*/*.md/\" }\n        frontmatter: { role: { elemMatch: { accomplice: { eq: true } } } }\n      }\n      sort: { order: DESC, fields: [frontmatter___score, frontmatter___lname] }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            fname\n            github\n            lname\n            quote\n            score\n            twitter\n            uid\n            avatar {\n              childImageSharp {\n                fluid(\n                  maxWidth: 240\n                  maxHeight: 300\n                  cropFocus: CENTER\n                  traceSVG: {\n                    color: \"#ffffff\"\n                    optTolerance: 0.1\n                    turdSize: 10\n                    turnPolicy: TURNPOLICY_MINORITY\n                  }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}