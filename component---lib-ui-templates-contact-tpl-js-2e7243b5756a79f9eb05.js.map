{"version":3,"file":"component---lib-ui-templates-contact-tpl-js-2e7243b5756a79f9eb05.js","mappings":"0NASA,MAAMA,GAAgBC,EAAAA,EAAAA,SAAOC,EAAAA,IAAKC,WAAA,CAAAC,YAAA,4BAAAC,YAAA,gBAAZJ,CAAY,qIAC9BK,EAAAA,EAAAA,IAAS,QASPC,EAASN,EAAAA,QAAOO,GAAEL,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAATJ,CAAS,0BACpBK,EAAAA,EAAAA,IAAS,QAIPG,EAAaR,EAAAA,QAAOS,GAAEP,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAATJ,CAAS,iBACxBK,EAAAA,EAAAA,IAAS,QAEPA,EAAAA,EAAAA,IAAS,QAEb,IAEmBK,EAAU,SAAAC,GAC7B,SAAAD,EAAYE,GAAQ,IAADC,EAED,OADhBA,EAAAF,EAAAG,KAAA,KAAMF,IAAM,MACPG,MAAQ,CAAC,EAAEF,CAClB,CA4EC,OA5EAG,EAAAA,EAAAA,GAAAN,EAAAC,GAAAD,EAAAO,UAEDC,OAAA,WACE,MAAM,YAAEC,GAAgBC,KAAKR,MAAMS,KAAKC,gBAClC,MACJC,EAAK,WACLC,EAAU,WACVC,EAAU,UACVC,EAAS,UACTC,EAAS,SACTC,GACET,EACJ,OACEU,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACC,EAAAA,GAAMC,OAAAC,OAAA,GAAKZ,KAAKR,MAAK,CAAEqB,MAAOd,EAAYc,SAC3CJ,EAAAA,cAACK,EAAAA,GAAWd,KAAKR,MACfiB,EAAAA,cAACM,EAAAA,GAAI,KACHN,EAAAA,cAACO,EAAAA,GAAM,KACLP,EAAAA,cAAA,MAAIQ,UAAU,QAAQlB,EAAYmB,SAClCT,EAAAA,cAAA,KAAGQ,UAAU,QAAQlB,EAAYoB,aAEnCV,EAAAA,cAAC9B,EAAa,KACZ8B,EAAAA,cAACW,EAAAA,GAAM,CAACC,QAAM,EAACC,YAAU,EAACnB,MAAOA,IACjCM,EAAAA,cAACvB,EAAM,KACJoB,EACCG,EAAAA,cAACrB,EAAU,KACTqB,EAAAA,cAACW,EAAAA,GAAM,CAACG,KAAM,uBAAuBjB,KACnCG,EAAAA,cAACe,EAAAA,GAAI,CAACC,KAAK,UAAUC,KAAK,MACzBpB,IAGH,KACHE,EACCC,EAAAA,cAACrB,EAAU,KACTqB,EAAAA,cAACW,EAAAA,GAAM,CAACG,KAAM,sBAAsBf,IAAYkB,KAAK,KACnDjB,EAAAA,cAACe,EAAAA,GAAI,CAACC,KAAK,WACVjB,IAGH,KACHH,EACCI,EAAAA,cAACrB,EAAU,KACTqB,EAAAA,cAACW,EAAAA,GAAM,CACLG,KAAM,wBAAwBlB,IAC9BqB,KAAK,KAELjB,EAAAA,cAACe,EAAAA,GAAI,CAACC,KAAK,aACVpB,IAGH,KACHE,EACCE,EAAAA,cAACrB,EAAU,KACTqB,EAAAA,cAACW,EAAAA,GAAM,CAACG,KAAM,uBAAuBhB,IAAamB,KAAK,KACrDjB,EAAAA,cAACe,EAAAA,GAAI,CAACC,KAAK,YACVlB,IAGH,KACHH,EACCK,EAAAA,cAACrB,EAAU,KACTqB,EAAAA,cAACW,EAAAA,GAAM,CACLG,KAAM,wBAAwBnB,IAC9BsB,KAAK,KAELjB,EAAAA,cAACe,EAAAA,GAAI,CAACC,KAAK,aACVrB,IAGH,SAOlB,EAACd,CAAA,CAhF4B,CAASqC,EAAAA,U","sources":["webpack://biffud.com/./lib/ui/templates/ContactTpl.js"],"sourcesContent":["import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Action, Icon, Tile } from \"ui/components\";\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { setSpace } from \"ui/mixins\";\n\nconst ContactHolder = styled(Tile)`\n  ${setSpace(\"pah\")};\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 600px;\n  text-align: center;\n`;\nconst Social = styled.ul`\n  ${setSpace(\"mtl\")};\n  text-align: left;\n`;\n\nconst SocialItem = styled.li`\n  ${setSpace(\"mts\")};\n  i {\n    ${setSpace(\"mrs\")};\n  }\n`;\n\nexport default class ContactTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { frontmatter } = this.props.data.markdownRemark;\n    const {\n      email,\n      facebookid,\n      linkedinid,\n      twitterid,\n      myspaceid,\n      githubid\n    } = frontmatter;\n    return (\n      <>\n        <Helmet {...this.props} title={frontmatter.title} />\n        <Layout {...this.props}>\n          <Body>\n            <Header>\n              <h1 className=\"hero\">{frontmatter.heading}</h1>\n              <p className=\"para\">{frontmatter.subheading}</p>\n            </Header>\n            <ContactHolder>\n              <Action button obfuscated email={email} />\n              <Social>\n                {twitterid ? (\n                  <SocialItem>\n                    <Action href={`https://twitter.com/${twitterid}`}>\n                      <Icon name=\"twitter\" size=\"s\" />\n                      {twitterid}\n                    </Action>\n                  </SocialItem>\n                ) : null}\n                {githubid ? (\n                  <SocialItem>\n                    <Action href={`https://github.com/${githubid}`} size=\"s\">\n                      <Icon name=\"github\" />\n                      {githubid}\n                    </Action>\n                  </SocialItem>\n                ) : null}\n                {linkedinid ? (\n                  <SocialItem>\n                    <Action\n                      href={`https://linkedin.com/${linkedinid}`}\n                      size=\"s\"\n                    >\n                      <Icon name=\"linkedin\" />\n                      {linkedinid}\n                    </Action>\n                  </SocialItem>\n                ) : null}\n                {myspaceid ? (\n                  <SocialItem>\n                    <Action href={`https://myspace.com/${myspaceid}`} size=\"s\">\n                      <Icon name=\"myspace\" />\n                      {myspaceid}\n                    </Action>\n                  </SocialItem>\n                ) : null}\n                {facebookid ? (\n                  <SocialItem>\n                    <Action\n                      href={`https://facebook.com/${facebookid}`}\n                      size=\"s\"\n                    >\n                      <Icon name=\"facebook\" />\n                      {facebookid}\n                    </Action>\n                  </SocialItem>\n                ) : null}\n              </Social>\n            </ContactHolder>\n          </Body>\n        </Layout>\n      </>\n    );\n  }\n}\n\nContactTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query ContactTplQuery($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n        email\n        facebookid\n        twitterid\n        githubid\n      }\n    }\n  }\n`;\n"],"names":["ContactHolder","styled","Tile","withConfig","displayName","componentId","setSpace","Social","ul","SocialItem","li","ContactTpl","_Component","props","_this","call","state","_inheritsLoose","prototype","render","frontmatter","this","data","markdownRemark","email","facebookid","linkedinid","twitterid","myspaceid","githubid","React","Helmet","Object","assign","title","Layout","Body","Header","className","heading","subheading","Action","button","obfuscated","href","Icon","name","size","Component"],"sourceRoot":""}