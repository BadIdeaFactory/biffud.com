{"version":3,"sources":["webpack:///./lib/ui/templates/ContactTpl.js","webpack:///./lib/ui/templates/EmojiTpl.js","webpack:///./lib/ui/templates/LandingTpl.js","webpack:///./lib/ui/templates/MediaTpl.js","webpack:///./lib/ui/templates/ProjectListingTpl.js","webpack:///./lib/ui/templates/FAQListingTpl.js","webpack:///./lib/ui/templates/BlogListingTpl.js","webpack:///./lib/ui/templates/AboutTpl.js","webpack:///./lib/ui/templates/BlogPostTpl.js","webpack:///./lib/ui/templates/ProjectItemTpl.js","webpack:///./lib/ui/templates/ofHome/Section.js","webpack:///./lib/ui/templates/ofHome/Clients.js","webpack:///./lib/ui/templates/ofHome/Projects.js","webpack:///./lib/ui/templates/ofHome/Services.js","webpack:///./lib/ui/templates/ofHome/Testimonials.js","webpack:///./lib/ui/templates/HomeTpl.js","webpack:///./lib/ui/templates/ofPeople/Person.js","webpack:///./lib/ui/templates/ofPeople/PersonModal.js","webpack:///./lib/ui/templates/PeopleTpl.js","webpack:///./lib/ui/templates/Playground.js","webpack:///./src/pages/playground.js","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./node_modules/core-js/modules/es6.string.fixed.js"],"names":["ContactHolder","styled","Tile","withConfig","displayName","componentId","setSpace","Social","ul","SocialItem","li","ContactTpl","props","_this","_Component","call","this","state","render","frontmatter","data","markdownRemark","email","facebookid","linkedinid","twitterid","myspaceid","githubid","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","Fragment","ui_partials__WEBPACK_IMPORTED_MODULE_6__","Object","assign","title","className","heading","subheading","ui_components__WEBPACK_IMPORTED_MODULE_5__","button","obfuscated","href","name","size","Component","propTypes","shape","object","isRequired","pageQuery","EmojiHolder","breakpoint","phone","_ref","theme","actionColor","_ref2","EmojiTpl","ui_partials__WEBPACK_IMPORTED_MODULE_5__","ui_components__WEBPACK_IMPORTED_MODULE_6__","LandingTpl","_this$props$data$mark","html","ui_components__WEBPACK_IMPORTED_MODULE_4__","to","projectsCta","contactCta","style","marginLeft","marginRight","maxWidth","space","dangerouslySetInnerHTML","__html","MentionsList","ol","tabletUp","Mention","setType","highlight","MentionCover","div","MentionHd","_ref3","MentionBd","_ref4","titleColor","Copy","MediaTpl","mentions","react__WEBPACK_IMPORTED_MODULE_4___default","ui_partials__WEBPACK_IMPORTED_MODULE_8__","edges","map","_ref5","node","_node$frontmatter","cover","publication","source","as","ui_components__WEBPACK_IMPORTED_MODULE_9__","target","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","fluid","childImageSharp","alt","text","Projects","desktopUp","Flag","span","dimmedColor","Project","ProjectCover","hasPlaceholder","ProjectHd","ProjectBd","_ref6","ProjectFt","_ref7","ProjectListingTpl","_this$props$data","defaultCover","projects","genericCover","react__WEBPACK_IMPORTED_MODULE_5___default","_ref8","active","date","code","tagline","uid","key","ui_components__WEBPACK_IMPORTED_MODULE_7__","Link","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","Questions","isActive","FAQListingTpl","tab","switchTab","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default","str","setState","_this2","membershipQuestions","membership","partnershipQuestions","partnership","count","handleClick","partnershipTab","membershipTab","limit","PostList","Post","PostCover","PostHd","PostBd","PostFt","color","BlogListingTpl","posts","ui_partials__WEBPACK_IMPORTED_MODULE_9__","timeToRead","summary","gatsby_image__WEBPACK_IMPORTED_MODULE_5___default","AboutTpl","BlogPostTpl","readingTime","Math","random","window","tick","setInterval","prevState","blogPost","toFixed","Flex","BodyHd","BodyBd","BodyFt","Label","h2","Name","p","Tagline","Description","Meta","_ref9","Lists","_ref10","_ref11","_ref12","ProjectItemTpl","images","portfolioItem","application","bifpresents","slides","link","needs","timeframe","react__WEBPACK_IMPORTED_MODULE_7___default","ui_components__WEBPACK_IMPORTED_MODULE_10__","push","forEach","slide","defaultImage","padding","keys","length","need","graphic","money","users","uxui","primary","Section","Element","Title","h1","Items","Item","ItemTitle","h3","ItemText","Clients","clients","subtitle","react_default","partials","client","components","gatsby_image_default","fixed","logo","array","string","ItemImage","Projects_Element","Projects_Title","Projects_Items","project","Projects_Item","placeholder","Projects_ItemTitle","Projects_ItemText","Services","services","Services_Element","Services_Title","Services_Items","service","i","Services_Item","Services_ItemTitle","background","Testimonials","testimonials","Testimonials_Element","Testimonials_Title","Testimonials_Items","testimonial","Testimonials_Item","HomeTpl","ofHome_Projects","projectsSubtitle","projectsTitle","ofHome_Clients","clientsTitle","clientsSubtitle","ofHome_Services","servicesTitle","servicesSubtitle","goodatTitle","goodatSubtitle","goodat","ofHome_Testimonials","testimonialsTitle","testimonialsSubtitle","Person","time","s","actionDecor","PersonPic","avatar","PersonDetails","PersonName","PersonLinks","Member","defaultAvatar","fname","github","lname","twitter","onClick","toggleModal","role","hasAvatar","e","stopPropagation","rel","func","defaultProps","PersonBio","PersonQuote","PersonSocial","_props$data","quote","PersonModal_Person","PersonModal_PersonPic","PersonModal_PersonDetails","PersonModal_PersonName","PeopleSection","section","People","fadeIn","l","PeopleIntro","track","m","PeopleTpl","currentPerson","handleShowPerson","assertThisInitialized_default","obj","overlords","members","accomplices","genericAvatar","overlordsHeading","overlordsDescr","ofPeople_Person","membersHeading","membersDescr","accomplicesHeading","accomplicesDescr","PersonModal","Sample","font","sans","scatteredBif1","scatteredBif2","scatteredBif3","Playground","hexArray","fontWeight","__webpack_exports__","Playground_Playground","$export","__webpack_require__","fails","defined","quot","createHTML","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","url"],"mappings":"kSASMA,EAAgBC,YAAOC,KAAVC,WAAA,CAAAC,YAAA,4BAAAC,YAAA,gBAAGJ,CAAH,oIACfK,YAAS,QASPC,EAASN,IAAOO,GAAVL,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAGJ,CAAH,yBACRK,YAAS,QAIPG,EAAaR,IAAOS,GAAVP,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAGJ,CAAH,gBACZK,YAAS,OAEPA,YAAS,QAIMK,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKC,MAAQ,GAFIJ,8BAKnBK,kBAAS,IACCC,EAAgBH,KAAKJ,MAAMQ,KAAKC,eAAhCF,YAENG,EAMEH,EANFG,MACAC,EAKEJ,EALFI,WACAC,EAIEL,EAJFK,WACAC,EAGEN,EAHFM,UACAC,EAEEP,EAFFO,UACAC,EACER,EADFQ,SAEF,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAADC,OAAAC,OAAA,GAAYlB,KAAKJ,MAAjB,CAAwBuB,MAAOhB,EAAYgB,SAC3CP,EAAAC,EAAAC,cAACE,EAAA,EAAWhB,KAAKJ,MACfgB,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,MAAIM,UAAU,QAAQjB,EAAYkB,SAClCT,EAAAC,EAAAC,cAAA,KAAGM,UAAU,QAAQjB,EAAYmB,aAEnCV,EAAAC,EAAAC,cAAC9B,EAAD,KACE4B,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAQC,QAAM,EAACC,YAAU,EAACnB,MAAOA,IACjCM,EAAAC,EAAAC,cAACvB,EAAD,KACGkB,EACCG,EAAAC,EAAAC,cAACrB,EAAD,KACEmB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAQG,KAAI,uBAAyBjB,GACnCG,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMI,KAAK,UAAUC,KAAK,MACzBnB,IAGH,KACHE,EACCC,EAAAC,EAAAC,cAACrB,EAAD,KACEmB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAQG,KAAI,sBAAwBf,EAAYiB,KAAK,KACnDhB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMI,KAAK,WACVhB,IAGH,KACHH,EACCI,EAAAC,EAAAC,cAACrB,EAAD,KACEmB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEG,KAAI,wBAA0BlB,EAC9BoB,KAAK,KAELhB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMI,KAAK,aACVnB,IAGH,KACHE,EACCE,EAAAC,EAAAC,cAACrB,EAAD,KACEmB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAQG,KAAI,uBAAyBhB,EAAakB,KAAK,KACrDhB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMI,KAAK,YACVjB,IAGH,KACHH,EACCK,EAAAC,EAAAC,cAACrB,EAAD,KACEmB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEG,KAAI,wBAA0BnB,EAC9BqB,KAAK,KAELhB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMI,KAAK,aACVpB,IAGH,cAzEoBsB,aAmFxClC,EAAWmC,UAAY,CACrB1B,KAAM2B,gBAAM,CACV1B,eAAgB2B,SAAOC,aACtBA,YAGE,IAAMC,EAAS,kOC9GhBC,EAAclD,YAAOC,KAAVC,WAAA,CAAAC,YAAA,wBAAAC,YAAA,gBAAGJ,CAAH,yTACbK,YAAS,OAKT8C,IAAWC,MACT/C,YAAS,OAGTA,YAAS,OACF,SAAAgD,GAAA,OAAAA,EAAGC,MAAkBC,aAM5BJ,IAAWC,MASJ,SAAAI,GAAA,OAAAA,EAAGF,MAAkBC,aAE5BJ,IAAWC,OAMIK,cACnB,SAAAA,EAAY9C,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKC,MAAQ,GAFIJ,8BAKnBK,kBAAS,IACCC,EAAgBH,KAAKJ,MAAMQ,KAAKC,eAAhCF,YACR,OACES,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAC6B,EAAA,EAAD1B,OAAAC,OAAA,GAAYlB,KAAKJ,MAAjB,CAAwBuB,MAAOhB,EAAYgB,SAC3CP,EAAAC,EAAAC,cAAC6B,EAAA,EAAW3C,KAAKJ,MACfgB,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACE/B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACE/B,EAAAC,EAAAC,cAAA,MAAIM,UAAU,QAAQjB,EAAYkB,SAClCT,EAAAC,EAAAC,cAAA,KAAGM,UAAU,QAAQjB,EAAYmB,aAEnCV,EAAAC,EAAAC,cAACqB,EAAD,KACEvB,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAMjB,KAAK,WAAWP,UAAU,UAChCR,EAAAC,EAAAC,cAAA,MAAIM,UAAU,QAAd,0BAnBwBS,aA4BtCa,EAASZ,UAAY,CACnB1B,KAAM2B,gBAAM,CACV1B,eAAgB2B,SAAOC,aACtBA,YAGE,IAAMC,EAAS,uMCvEDW,cACnB,SAAAA,EAAYjD,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKC,MAAQ,GAFIJ,8BAKnBK,kBAAS,IAAA4C,EACuB9C,KAAKJ,MAAMQ,KAAKC,eAAtCF,EADD2C,EACC3C,YAAa4C,EADdD,EACcC,KACrB,OACEnC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAC6B,EAAA,EAAD1B,OAAAC,OAAA,GAAYlB,KAAKJ,MAAjB,CAAwBuB,MAAOhB,EAAYgB,SAC3CP,EAAAC,EAAAC,cAAC6B,EAAA,EAAW3C,KAAKJ,MACfgB,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACE/B,EAAAC,EAAAC,cAAA,MAAIM,UAAU,QAAQjB,EAAYkB,SAClCT,EAAAC,EAAAC,cAACkC,EAAA,EAAD,KACEpC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAQxB,QAAM,EAACyB,GAAG,aACf9C,EAAY+C,aAEftC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAQC,GAAG,YAAY9C,EAAYgD,cAGvCvC,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CACES,MAAO,CACLC,WAAY,OACZC,YAAa,OACbC,SAAU,UAGZ3C,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAMQ,MAAM,KACV5C,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAMS,wBAAyB,CAAEC,OAAQX,aA7BflB,aAsCxCgB,EAAWf,UAAY,CACrB1B,KAAM2B,gBAAM,CACV1B,eAAgB2B,SAAOC,aACtBA,YAGE,IAAMC,EAAS,kPCxChByB,EAAe1E,IAAO2E,GAAVzE,WAAA,CAAAC,YAAA,yBAAAC,YAAA,YAAGJ,CAAH,kIACdmD,IAAWyB,UASTC,EAAU7E,YAAOC,KAAVC,WAAA,CAAAC,YAAA,oBAAAC,YAAA,YAAGJ,CAAH,4DACT8E,YAAQ,KAGR3B,IAAWC,MACT/C,YAAS,OAEX,SAAAgD,GAAA,OAAAA,EAAG0B,UACM,sHAUPC,EAAehF,IAAOiF,IAAV/E,WAAA,CAAAC,YAAA,yBAAAC,YAAA,YAAGJ,CAAH,4CACdK,YAAS,OACS,SAAAmD,GAAA,OAAAA,EAAGF,MAAkBC,cAIrC2B,EAAYlF,IAAOiF,IAAV/E,WAAA,CAAAC,YAAA,sBAAAC,YAAA,YAAGJ,CAAH,8GAMT8E,YAAQ,KACD,SAAAK,GAAA,OAAAA,EAAG7B,MAAkBC,cAK5B6B,EAAYpF,IAAOiF,IAAV/E,WAAA,CAAAC,YAAA,sBAAAC,YAAA,YAAGJ,CAAH,4BACXK,YAAS,OACF,SAAAgF,GAAA,OAAAA,EAAG/B,MAAkBgC,YAC5BC,IACElF,YAAS,QAIMmF,cACnB,SAAAA,EAAY7E,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKC,MAAQ,GAFIJ,8BAKnBK,kBAAS,IACCwE,EAAa1E,KAAKJ,MAAMQ,KAAxBsE,SACAvE,EAAgBH,KAAKJ,MAAMQ,KAAKC,eAAhCF,YACR,OACEwE,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAAE,SAAA,KACE4D,EAAA9D,EAAAC,cAAC8D,EAAA,EAAD3D,OAAAC,OAAA,GAAYlB,KAAKJ,MAAjB,CAAwBuB,MAAOhB,EAAYgB,SAC3CwD,EAAA9D,EAAAC,cAAC8D,EAAA,EAAW5E,KAAKJ,MACf+E,EAAA9D,EAAAC,cAAC8D,EAAA,EAAD,KACED,EAAA9D,EAAAC,cAAA,MAAIM,UAAU,QAAQjB,EAAYkB,SAClCsD,EAAA9D,EAAAC,cAAA,KAAGM,UAAU,QAAQjB,EAAYmB,aAEnCqD,EAAA9D,EAAAC,cAAC8D,EAAA,EAAD,KACED,EAAA9D,EAAAC,cAAC6C,EAAD,KACGe,EAASG,MAAMC,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACbjC,EAASiC,EAATjC,KADwBkC,EAQ5BD,EAAK7E,YALP+E,EAH8BD,EAG9BC,MACAC,EAJ8BF,EAI9BE,YACAC,EAL8BH,EAK9BG,OACApB,EAN8BiB,EAM9BjB,UACA7C,EAP8B8D,EAO9B9D,MAEF,OACEwD,EAAA9D,EAAAC,cAACgD,EAAD,CAASuB,GAAG,KAAKrB,UAAWA,GAC1BW,EAAA9D,EAAAC,cAACwE,EAAA,EAAD,CAAM5D,KAAM0D,EAAQG,OAAO,SAASF,GAAG,KACpCH,EACCP,EAAA9D,EAAAC,cAACmD,EAAD,KACEU,EAAA9D,EAAAC,cAAC0E,EAAA3E,EAAD,CACE4E,MAAOP,EAAMQ,gBAAgBD,MAC7BE,IAAKxE,KAGP,KACJwD,EAAA9D,EAAAC,cAACqD,EAAD,KACEQ,EAAA9D,EAAAC,cAAA,MAAIM,UAAU,SAASD,GACvBwD,EAAA9D,EAAAC,cAAA,YACE6D,EAAA9D,EAAAC,cAACwE,EAAA,EAAD,CAAM3D,KAAK,SAASiE,KAAK,wBAG7BjB,EAAA9D,EAAAC,cAACuD,EAAD,KACGtB,EACC4B,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAAE,SAAA,KACE4D,EAAA9D,EAAAC,cAACwE,EAAA,EAAD,CAAM7B,wBAAyB,CAAEC,OAAQX,MAEzC,KACJ4B,EAAA9D,EAAAC,cAAA,eAAOqE,gBAnDOtD,aAiEtC4C,EAAS3C,UAAY,CACnB1B,KAAM2B,gBAAM,CACV1B,eAAgB2B,SAAOC,WACvByC,SAAU1C,SAAOC,aAChBA,YAGE,IAAMC,EAAS,4PC9HhB2D,EAAW5G,IAAO2E,GAAVzE,WAAA,CAAAC,YAAA,8BAAAC,YAAA,gBAAGJ,CAAH,iMACVmD,IAAWyB,SAOXzB,IAAW0D,WAKTC,EAAO9G,IAAO+G,KAAV7G,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAGJ,CAAH,gEACN8E,YAAQ,KACRzE,YAAS,OACF,SAAAgD,GAAA,OAAAA,EAAGC,MAAkB0D,cAK1BC,EAAUjH,IAAOS,GAAVP,WAAA,CAAAC,YAAA,6BAAAC,YAAA,gBAAGJ,CAAH,qFAETmD,IAAWC,MACT/C,YAAS,OAEX8C,IAAWyB,UAOTsC,EAAelH,IAAOiF,IAAV/E,WAAA,CAAAC,YAAA,kCAAAC,YAAA,gBAAGJ,CAAH,oDACdK,YAAS,OACS,SAAAmD,GAAA,OAAAA,EAAGF,MAAkBC,aAEvC,SAAA4B,GAAA,IAAGgC,EAAHhC,EAAGgC,eAAgB7D,EAAnB6B,EAAmB7B,MAAnB,OACA6D,EAAc,+BAGL7D,EAAMC,YAHD,4LAgBZ6D,EAAYpH,IAAOiF,IAAV/E,WAAA,CAAAC,YAAA,+BAAAC,YAAA,gBAAGJ,CAAH,gMACXK,YAAS,OAUA,SAAAgF,GAAA,OAAAA,EAAG/B,MAAkBgC,YAIrB,SAAAQ,GAAA,OAAAA,EAAGxC,MAAkB0D,cAI5BK,EAAYrH,IAAOiF,IAAV/E,WAAA,CAAAC,YAAA,+BAAAC,YAAA,gBAAGJ,CAAH,4MAMT8E,YAAQ,KACD,SAAAwC,GAAA,OAAAA,EAAGhE,MAAkBC,aAU9BJ,IAAW0D,WAOTU,EAAYvH,IAAOiF,IAAV/E,WAAA,CAAAC,YAAA,+BAAAC,YAAA,gBAAGJ,CAAH,8BACJ,SAAAwH,GAAA,OAAAA,EAAGlE,MAAkBgC,YAE1BjF,YAAS,QAIMoH,cACnB,SAAAA,EAAY9G,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKC,MAAQ,GAFIJ,8BAKnBK,kBAAS,IAAAyG,EAC4C3G,KAAKJ,MAAMQ,KAAtDwG,EADDD,EACCC,aAAcC,EADfF,EACeE,SAAUxG,EADzBsG,EACyBtG,eAC1ByG,EAAeF,EAAa/B,MAAM,GAAGG,KAAKU,gBACxCvF,EAAgBE,EAAhBF,YACR,OACE4G,EAAAlG,EAAAC,cAAAiG,EAAAlG,EAAAE,SAAA,KACEgG,EAAAlG,EAAAC,cAAC8D,EAAA,EAAD3D,OAAAC,OAAA,GAAYlB,KAAKJ,MAAjB,CAAwBuB,MAAOhB,EAAYgB,SAC3C4F,EAAAlG,EAAAC,cAAC8D,EAAA,EAAW5E,KAAKJ,MACfmH,EAAAlG,EAAAC,cAAC8D,EAAA,EAAD,KACEmC,EAAAlG,EAAAC,cAAA,MAAIM,UAAU,QAAQjB,EAAYkB,SAClC0F,EAAAlG,EAAAC,cAAA,KAAGM,UAAU,QAAQjB,EAAYmB,aAEnCyF,EAAAlG,EAAAC,cAAC8D,EAAA,EAAD,KACEmC,EAAAlG,EAAAC,cAAC+E,EAAD,KACGgB,EAAShC,MAAMC,IAAI,SAAAkC,GAAc,IAAA/B,EAAA+B,EAAXhC,KASZ7E,YAPP8G,EAF8BhC,EAE9BgC,OACA/B,EAH8BD,EAG9BC,MACAgC,EAJ8BjC,EAI9BiC,KACAC,EAL8BlC,EAK9BkC,KACAC,EAN8BnC,EAM9BmC,QACAjG,EAP8B8D,EAO9B9D,MACAkG,EAR8BpC,EAQ9BoC,IAEF,OACEN,EAAAlG,EAAAC,cAACoF,EAAD,CAASoB,IAAKD,EAAKhC,GAAG,MACpB0B,EAAAlG,EAAAC,cAACyG,EAAA,EAAD,CAAMlC,GAAImC,OAAMvE,GAAE,aAAeoE,GAC/BN,EAAAlG,EAAAC,cAACuF,EAAD,KACEU,EAAAlG,EAAAC,cAAA,QAAMM,UAAU,QACb+F,EADH,IACWF,EAAqC,KAA5BF,EAAAlG,EAAAC,cAACiF,EAAD,sBAEpBgB,EAAAlG,EAAAC,cAAA,QAAMM,UAAU,QAAQ8F,IAE1BH,EAAAlG,EAAAC,cAACqF,EAAD,CAAcC,gBAAiBlB,GAC7B6B,EAAAlG,EAAAC,cAAC2G,EAAA5G,EAAD,CACE4E,MACEP,EACIA,EAAMQ,gBAAgBD,MACtBqB,EAAarB,MAEnBE,IAAKxE,IAGL+D,EAIE,KAHF6B,EAAAlG,EAAAC,cAAA,QAAMM,UAAU,YACd2F,EAAAlG,EAAAC,cAACyG,EAAA,EAAD,CAAM5F,KAAK,WAAWC,KAAK,QAIjCmF,EAAAlG,EAAAC,cAACwF,EAAD,KACES,EAAAlG,EAAAC,cAAA,MAAIM,UAAU,SAASD,GACvB4F,EAAAlG,EAAAC,cAAA,YACEiG,EAAAlG,EAAAC,cAACyG,EAAA,EAAD,CAAM5F,KAAK,cAAciE,KAAK,iBAGlCmB,EAAAlG,EAAAC,cAAC0F,EAAD,KACEO,EAAAlG,EAAAC,cAAA,KAAGM,UAAU,WAAWgG,gBA9DDvF,aA4E/C6E,EAAkB5E,UAAY,CAC5B1B,KAAM2B,gBAAM,CACV8E,SAAU7E,SAAOC,WACjB5B,eAAgB2B,SAAOC,aACtBA,YAGE,IAAMC,EAAS,0OC7LhBwF,EAAYzI,YAAOC,KAAVC,WAAA,CAAAC,YAAA,2BAAAC,YAAA,gBAAGJ,CAAH,wEACXK,YAAS,OACA,SAAAgD,GAAA,OAAAA,EAAGqF,SAA2B,QAAU,SAMhCC,cACnB,SAAAA,EAAYhI,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKC,MAAQ,CACX4H,IAAK,eAEPhI,EAAKiI,UAAYjI,EAAKiI,UAAUC,KAAfC,QAAAnI,KALAA,sCAQnBiI,mBAAUG,GACRjI,KAAKkI,SAAS,CAAEL,IAAKI,OAGvB/H,kBAAS,IAAAiI,EAAAnI,KACCG,EAAgBH,KAAKJ,MAAMQ,KAAKC,eAAhCF,YACFiI,EAAsBpI,KAAKJ,MAAMQ,KAAKiI,WAAWxD,MAAM,GAAGG,KAAKjC,KAC/DuF,EAAuBtI,KAAKJ,MAAMQ,KAAKmI,YAAY1D,MAAM,GAAGG,KAAKjC,KACvE,OACE4B,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAAE,SAAA,KACE4D,EAAA9D,EAAAC,cAACE,EAAA,EAADC,OAAAC,OAAA,GAAYlB,KAAKJ,MAAjB,CAAwBuB,MAAM,gCAC9BwD,EAAA9D,EAAAC,cAACE,EAAA,EAAWhB,KAAKJ,MACf+E,EAAA9D,EAAAC,cAACE,EAAA,EAAD,KACE2D,EAAA9D,EAAAC,cAAA,MAAIM,UAAU,QAAQjB,EAAYkB,SAClCsD,EAAA9D,EAAAC,cAAA,KAAGM,UAAU,QAAQjB,EAAYmB,aAEnCqD,EAAA9D,EAAAC,cAACE,EAAA,EAAD,CACEoC,MAAO,CACLC,WAAY,OACZC,YAAa,OACbC,SAAU,UAGZoB,EAAA9D,EAAAC,cAACyG,EAAA,EAAD,CAAMiB,MAAO,GACX7D,EAAA9D,EAAAC,cAACyG,EAAA,EAAD,CACEkB,YAAa,kBAAMN,EAAKL,UAAU,gBAClCH,SAA6B,gBAAnB3H,KAAKC,MAAM4H,KAEpB1H,EAAYuI,gBAEf/D,EAAA9D,EAAAC,cAACyG,EAAA,EAAD,CACEkB,YAAa,kBAAMN,EAAKL,UAAU,eAClCH,SAA6B,eAAnB3H,KAAKC,MAAM4H,KAEpB1H,EAAYwI,gBAGjBhE,EAAA9D,EAAAC,cAAC4G,EAAD,CAAWC,SAA6B,gBAAnB3H,KAAKC,MAAM4H,IAAuBe,OAAK,GAC1DjE,EAAA9D,EAAAC,cAACyG,EAAA,EAAD,CACE9D,wBAAyB,CAAEC,OAAQ4E,MAGvC3D,EAAA9D,EAAAC,cAAC4G,EAAD,CAAWC,SAA6B,eAAnB3H,KAAKC,MAAM4H,IAAsBe,OAAK,GACzDjE,EAAA9D,EAAAC,cAACyG,EAAA,EAAD,CAAM9D,wBAAyB,CAAEC,OAAQ0E,aApDZvG,aA6D3C+F,EAAc9F,UAAY,CACxB1B,KAAM2B,gBAAM,CACV1B,eAAgB2B,SAAOC,WACvBoG,WAAYrG,SAAOC,WACnBsG,YAAavG,SAAOC,aACnBA,YAGE,IAAMC,EAAS,2PC3EhB2G,EAAW5J,IAAO2E,GAAVzE,WAAA,CAAAC,YAAA,2BAAAC,YAAA,gBAAGJ,CAAH,kIACVmD,IAAWyB,UASTiF,EAAO7J,YAAOC,KAAVC,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAGJ,CAAH,wDACN8E,YAAQ,KAGR3B,IAAWC,MACT/C,YAAS,QAITyJ,EAAY9J,IAAOiF,IAAV/E,WAAA,CAAAC,YAAA,4BAAAC,YAAA,gBAAGJ,CAAH,8BACO,SAAAqD,GAAA,OAAAA,EAAGC,MAAkBC,aACvClD,YAAS,QAGP0J,EAAS/J,IAAOiF,IAAV/E,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAGJ,CAAH,qKACRK,YAAS,OAMPyE,YAAQ,KACD,SAAAtB,GAAA,OAAAA,EAAGF,MAAkBC,aAM9BJ,IAAW0D,WAOTmD,EAAShK,IAAOiF,IAAV/E,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAGJ,CAAH,iFACRK,YAAS,OACF,SAAA8E,GAAA,OAAAA,EAAG7B,MAAkBgC,aAM1B2E,EAASjK,IAAOiF,IAAV/E,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAGJ,CAAH,uFAKN8E,YAAQ,KACD,SAAAO,GAAA,OAAAA,EAAG/B,MAAkB4G,QAIbC,cACnB,SAAAA,EAAYxJ,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKC,MAAQ,GAFIJ,8BAKnBK,kBAAS,IACCmJ,EAAUrJ,KAAKJ,MAAMQ,KAArBiJ,MACAlJ,EAAgBH,KAAKJ,MAAMQ,KAAKC,eAAhCF,YACR,OACEwE,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAAE,SAAA,KACE4D,EAAA9D,EAAAC,cAACwI,EAAA,EAADrI,OAAAC,OAAA,GAAYlB,KAAKJ,MAAjB,CAAwBuB,MAAOhB,EAAYgB,SAC3CwD,EAAA9D,EAAAC,cAACwI,EAAA,EAAWtJ,KAAKJ,MACf+E,EAAA9D,EAAAC,cAACwI,EAAA,EAAD,KACE3E,EAAA9D,EAAAC,cAAA,MAAIM,UAAU,QAAQjB,EAAYkB,SAClCsD,EAAA9D,EAAAC,cAAA,KAAGM,UAAU,QAAQjB,EAAYmB,aAEnCqD,EAAA9D,EAAAC,cAACwI,EAAA,EAAD,KACE3E,EAAA9D,EAAAC,cAAC+H,EAAD,KACGQ,EAAMxE,MAAMC,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACVuE,EAAevE,EAAfuE,WADqBtE,EAEgBD,EAAK7E,YAA1C+E,EAFqBD,EAErBC,MAAOgC,EAFcjC,EAEdiC,KAAMsC,EAFQvE,EAERuE,QAASrI,EAFD8D,EAEC9D,MAAOkG,EAFRpC,EAEQoC,IACrC,OACE1C,EAAA9D,EAAAC,cAACgI,EAAD,CAAMxB,IAAKD,EAAKhC,GAAG,MACjBV,EAAA9D,EAAAC,cAACyG,EAAA,EAAD,CAAMtE,GAAE,SAAWoE,EAAOhC,GAAImC,QAC3BtC,EACCP,EAAA9D,EAAAC,cAACiI,EAAD,KACEpE,EAAA9D,EAAAC,cAAC2I,EAAA5I,EAAD,CACE4E,MAAOP,EAAMQ,gBAAgBD,MAC7BE,IAAKxE,KAGP,KACJwD,EAAA9D,EAAAC,cAACkI,EAAD,KACErE,EAAA9D,EAAAC,cAAA,MAAIM,UAAU,SAASD,GACvBwD,EAAA9D,EAAAC,cAAA,YACE6D,EAAA9D,EAAAC,cAACyG,EAAA,EAAD,CAAM5F,KAAK,cAAciE,KAAK,iBAGlCjB,EAAA9D,EAAAC,cAACmI,EAAD,KACEtE,EAAA9D,EAAAC,cAAA,KAAGM,UAAU,WAAWoI,IAE1B7E,EAAA9D,EAAAC,cAACoI,EAAD,KACEvE,EAAA9D,EAAAC,cAAA,YAAOoG,GACPvC,EAAA9D,EAAAC,cAAA,YAAOyI,EAAP,0BA5CoB1H,aA0D5CuH,EAAetH,UAAY,CACzB1B,KAAM2B,gBAAM,CACV1B,eAAgB2B,SAAOC,WACvBoH,MAAOrH,SAAOC,aACbA,YAGE,IAAMC,EAAS,uMCpIDwH,cACnB,SAAAA,EAAY9J,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKC,MAAQ,GAFIJ,8BAKnBK,kBAAS,IAAA4C,EACuB9C,KAAKJ,MAAMQ,KAAKC,eAAtCF,EADD2C,EACC3C,YAAa4C,EADdD,EACcC,KACrB,OACEnC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAC6B,EAAA,EAAD1B,OAAAC,OAAA,GAAYlB,KAAKJ,MAAjB,CAAwBuB,MAAOhB,EAAYgB,SAC3CP,EAAAC,EAAAC,cAAC6B,EAAA,EAAW3C,KAAKJ,MACfgB,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACE/B,EAAAC,EAAAC,cAAA,MAAIM,UAAU,QAAQjB,EAAYkB,SAClCT,EAAAC,EAAAC,cAAA,KAAGM,UAAU,QAAQjB,EAAYmB,aAEnCV,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CACES,MAAO,CACLC,WAAY,OACZC,YAAa,OACbC,SAAU,UAGZ3C,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAMQ,MAAM,KACV5C,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAMS,wBAAyB,CAAEC,OAAQX,aAxBjBlB,aAiCtC6H,EAAS5H,UAAY,CACnB1B,KAAM2B,gBAAM,CACV1B,eAAgB2B,SAAOC,aACtBA,YAGE,IAAMC,EAAS,0OCtCDyH,cACnB,SAAAA,EAAY/J,GAAO,IAAAC,EACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,KACA,IAAM4J,EAA8B,IAAhBC,KAAKC,SAFR,MAGK,oBAAXC,SACTlK,EAAKmK,KAAOnK,EAAKmK,KAAKjC,KAAVC,QAAAnI,KACZoK,YAAYpK,EAAKmK,KAAM,MAEzBnK,EAAKI,MAAQ,CACX2J,eARe/J,sCAYnBmK,gBACEhK,KAAKkI,SAAS,SAAAgC,GAAS,MAAK,CAC1BN,YAAaM,EAAUN,YAA8B,GAAhBC,KAAKC,SAAgB,QAI9D5J,kBACE,IAAMiK,EAAWnK,KAAKJ,MAAMQ,KAAKC,eACzBF,EAAsBgK,EAAtBhK,YAAa4C,EAASoH,EAATpH,KACbmC,EAAuB/E,EAAvB+E,MAAOgC,EAAgB/G,EAAhB+G,KAAM/F,EAAUhB,EAAVgB,MACrB,OACEwD,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAAE,SAAA,KACE4D,EAAA9D,EAAAC,cAACE,EAAA,EAADC,OAAAC,OAAA,GAAYlB,KAAKJ,MAAjB,CAAwBuB,MAAOA,KAC/BwD,EAAA9D,EAAAC,cAACE,EAAA,EAAWhB,KAAKJ,MACf+E,EAAA9D,EAAAC,cAACE,EAAA,EAAD,KACE2D,EAAA9D,EAAAC,cAAA,QAAMM,UAAU,SAAhB,iBACiBpB,KAAKC,MAAM2J,YAAYQ,QAAQ,GADhD,YAGAzF,EAAA9D,EAAAC,cAAA,MAAIM,UAAU,QAAQD,GACtBwD,EAAA9D,EAAAC,cAAA,QAAMM,UAAU,SAAS8F,IAE3BvC,EAAA9D,EAAAC,cAACE,EAAA,EAAD,CACEoC,MAAO,CACLC,WAAY,OACZC,YAAa,OACbC,SAAU,UAGX2B,EACCP,EAAA9D,EAAAC,cAAC2I,EAAA5I,EAAD,CAAK4E,MAAOP,EAAMQ,gBAAgBD,MAAOE,IAAKxE,IAC5C,KACJwD,EAAA9D,EAAAC,cAACyG,EAAA,EAAD,CAAM/D,MAAM,KACVmB,EAAA9D,EAAAC,cAACyG,EAAA,EAAD,CAAM9D,wBAAyB,CAAEC,OAAQX,aA7CdlB,aAsDzC8H,EAAY7H,UAAY,CACtB1B,KAAM2B,gBAAM,CACV1B,eAAgB2B,SAAOC,aACtBA,YAGE,IAAMC,EAAS,4PC1DhBmI,EAAOpL,IAAOiF,IAAV/E,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAGJ,CAAH,+FACNmD,IAAWyB,SAOPvE,YAAS,OAGTA,YAAS,QAKXgL,EAASrL,YAAOoL,GAAVlL,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAGJ,CAAH,8GACRK,YAAS,OACT8C,IAAWyB,SAUXzB,IAAWC,MAEP/C,YAAS,QAKXiL,EAAStL,YAAOoL,GAAVlL,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAGJ,CAAH,8EACRK,YAAS,OAEA,SAAAgD,GAAA,OAAAA,EAAGC,MAAkBC,cAQ5BgI,EAASvL,IAAOiF,IAAV/E,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAGJ,CAAH,aACRK,YAAS,OACTyE,YAAQ,MAGN0G,EAAQxL,IAAOyL,GAAVvL,WAAA,CAAAC,YAAA,wBAAAC,YAAA,gBAAGJ,CAAH,uBACPK,YAAS,OACTyE,YAAQ,KACD,SAAAtB,GAAA,OAAAA,EAAGF,MAAkB0D,cAG1B0E,EAAO1L,IAAO2L,EAAVzL,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAGJ,CAAH,4DACN8E,YAAQ,KAED,SAAAK,GAAA,OAAAA,EAAG7B,MAAkBgC,aAI1BsG,EAAU5L,IAAO2L,EAAVzL,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAGJ,CAAH,uCACTK,YAAS,OACTyE,YAAQ,KAED,SAAAO,GAAA,OAAAA,EAAG/B,MAAkBgC,aAG1BuG,EAAc7L,IAAOiF,IAAV/E,WAAA,CAAAC,YAAA,8BAAAC,YAAA,gBAAGJ,CAAH,6PACN,SAAA8F,GAAA,OAAAA,EAAGxC,MAAkBgC,YAGxBjF,YAAS,OAYJ,SAAAiH,GAAA,OAAAA,EAAGhE,MAAkBC,aAMrB,SAAAiE,GAAA,OAAAA,EAAGlE,MAAkBgC,YAK5BR,YAAQ,KAGRzE,YAAS,OACF,SAAA0H,GAAA,OAAAA,EAAGzE,MAAkB4G,OAO9B/G,IAAWC,MACT/C,YAAS,QAITyL,EAAO9L,IAAO2L,EAAVzL,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAGJ,CAAH,4DACN8E,YAAQ,KACD,SAAAiH,GAAA,OAAAA,EAAGzI,MAAkBgC,aAK1B0G,EAAQhM,IAAOiF,IAAV/E,WAAA,CAAAC,YAAA,wBAAAC,YAAA,gBAAGJ,CAAH,0GACPK,YAAS,OACTyE,YAAQ,KACD,SAAAmH,GAAA,OAAAA,EAAG3I,MAAkBgC,YAM1BjF,YAAS,OACF,SAAA6L,GAAA,OAAAA,EAAG5I,MAAkB0D,aAIrB,SAAAmF,GAAA,OAAAA,EAAG7I,MAAkB0D,cAIboF,cACnB,SAAAA,EAAYzL,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKC,MAAQ,GAFIJ,8BAKnBK,kBACE,IAoBQoL,EApBFC,EAAgBvL,KAAKJ,MAAMQ,KAAKC,eAChCyG,EAAe9G,KAAKJ,MAAMQ,KAAKwG,aAAa/B,MAAM,GAAGG,KACxDU,gBACKvF,EAAsBoL,EAAtBpL,YAAa4C,EAASwI,EAATxI,KAEnByI,EAYErL,EAZFqL,YACAC,EAWEtL,EAXFsL,YACAvG,EAUE/E,EAVF+E,MACAgC,EASE/G,EATF+G,KACAwE,EAQEvL,EARFuL,OACAC,EAOExL,EAPFwL,KACAC,EAMEzL,EANFyL,MACAzE,EAKEhH,EALFgH,KACA/B,EAIEjF,EAJFiF,OACAgC,EAGEjH,EAHFiH,QACAyE,EAEE1L,EAFF0L,UACA1K,EACEhB,EADFgB,MAcF,OACE2K,EAAAjL,EAAAC,cAAAgL,EAAAjL,EAAAE,SAAA,KACE+K,EAAAjL,EAAAC,cAACwI,EAAA,EAADrI,OAAAC,OAAA,GAAYlB,KAAKJ,MAAjB,CAAwBuB,MAAOA,KAC/B2K,EAAAjL,EAAAC,cAACwI,EAAA,EAAWtJ,KAAKJ,MACfkM,EAAAjL,EAAAC,cAACwI,EAAA,EAAD,KACEwC,EAAAjL,EAAAC,cAAA,QAAMM,UAAU,SAAhB,mBACA0K,EAAAjL,EAAAC,cAAA,MAAIM,UAAU,QAAQqK,GACtBK,EAAAjL,EAAAC,cAAA,QAAMM,UAAU,SAAS8F,IAE3B4E,EAAAjL,EAAAC,cAACwI,EAAA,EAAD,KACEwC,EAAAjL,EAAAC,cAACiL,EAAA,EAAD,CAAMvI,MAAM,KACVsI,EAAAjL,EAAAC,cAACwJ,EAAD,KACEwB,EAAAjL,EAAAC,cAAA,OAAKM,UAAU,SACb0K,EAAAjL,EAAAC,cAAA,OAAKM,UAAU,QACb0K,EAAAjL,EAAAC,cAAC2J,EAAD,qBACAqB,EAAAjL,EAAAC,cAAC6J,EAAD,KAAOxJ,KAGX2K,EAAAjL,EAAAC,cAAA,OAAKM,UAAU,SACb0K,EAAAjL,EAAAC,cAAA,OAAKM,UAAU,QACb0K,EAAAjL,EAAAC,cAAC2J,EAAD,kBACAqB,EAAAjL,EAAAC,cAACiK,EAAD,KAAOc,IAETC,EAAAjL,EAAAC,cAAA,OAAKM,UAAU,QACb0K,EAAAjL,EAAAC,cAAC2J,EAAD,aACAqB,EAAAjL,EAAAC,cAACiK,EAAD,KAAO5D,MAIb2E,EAAAjL,EAAAC,cAACyJ,EAAD,KACEuB,EAAAjL,EAAAC,cAAA,OAAKM,UAAU,SACb0K,EAAAjL,EAAAC,cAAC2J,EAAD,gBACAqB,EAAAjL,EAAAC,cAAC+J,EAAD,KAAUzD,GACV0E,EAAAjL,EAAAC,cAAC2J,EAAD,oBACAqB,EAAAjL,EAAAC,cAACgK,EAAD,CAAarH,wBAAyB,CAAEC,OAAQX,MAElD+I,EAAAjL,EAAAC,cAAA,OAAKM,UAAU,SACb0K,EAAAjL,EAAAC,cAAC2J,EAAD,gBA/CNa,EAAS,GACXpG,GACFoG,EAAOU,KAAK9G,EAAMQ,gBAAgBD,OAEhCiG,GACFA,EAAOO,QAAQ,SAAAC,GAAK,OAAIZ,EAAOU,KAAKE,EAAMxG,gBAAgBD,SAErDqG,EAAAjL,EAAAC,cAACiL,EAAA,EAAD,CAAST,OAAQA,EAAQa,aAAcrF,EAAarB,SA0C/CqG,EAAAjL,EAAAC,cAACmK,EAAD,KACG7F,GAAUoG,EACTM,EAAAjL,EAAAC,cAAA,OAAKM,UAAU,QAAQgC,MAAO,CAAEgJ,QAAS,MACvCN,EAAAjL,EAAAC,cAAC2J,EAAD,oBACAqB,EAAAjL,EAAAC,cAAA,UACGsE,EACC0G,EAAAjL,EAAAC,cAAA,UACEgL,EAAAjL,EAAAC,cAAA,KAAGY,KAAM0D,EAAQG,OAAO,UAAxB,eAEK,IACLuG,EAAAjL,EAAAC,cAACiL,EAAA,EAAD,CAAMpK,KAAK,YAEX,KACH6J,EACCM,EAAAjL,EAAAC,cAAA,UACEgL,EAAAjL,EAAAC,cAAA,KAAGY,KAAM8J,EAAajG,OAAO,UAA7B,sBAEK,IACLuG,EAAAjL,EAAAC,cAACiL,EAAA,EAAD,CAAMpK,KAAK,YAEX,OAGN,KACHV,OAAOoL,KAAKT,GAAOU,OAAS,EAC3BR,EAAAjL,EAAAC,cAAA,OAAKM,UAAU,QAAQgC,MAAO,CAAEgJ,QAAS,MACvCN,EAAAjL,EAAAC,cAAC2J,EAAD,cACAqB,EAAAjL,EAAAC,cAAA,UACGG,OAAOoL,KAAKT,GAAO9G,IAAI,SAAAyH,GAQtB,OAAIX,EAAMW,GAENT,EAAAjL,EAAAC,cAAA,MAAIwG,IAAKsE,EAAMW,IACH,UAATA,EAVM,CACXpF,KAAM,OACNqF,QAAS,iBACTC,MAAO,QACPC,MAAO,QACPC,KAAM,kBAKuBJ,GAAQX,EAAMW,IAItC,SAIX,QAIVT,EAAAjL,EAAAC,cAAC0J,EAAD,KACEsB,EAAAjL,EAAAC,cAACiL,EAAA,EAAD,KACGJ,EACCG,EAAAjL,EAAAC,cAAA,WACEgL,EAAAjL,EAAAC,cAACiL,EAAA,EAAD,CAAQvK,QAAM,EAACoL,SAAO,EAAClL,KAAMiK,GAA7B,mBAIA,KACJG,EAAAjL,EAAAC,cAAA,WACEgL,EAAAjL,EAAAC,cAACiL,EAAA,EAAD,CACEvK,QAASmK,EACTjK,KAAK,6BACLkL,SAAUjB,EACVpG,OAAO,UAJT,gCAzIwB1D,aA4J5CwJ,EAAevJ,UAAY,CACzB1B,KAAM2B,gBAAM,CACV1B,eAAgB2B,SAAOC,aACtBA,YAGE,IAAMC,EAAS,6LCvSP2K,EAZC5N,IAAOiF,IAAV/E,WAAA,CAAAC,YAAA,UAAAC,YAAA,gBAAGJ,CAAH,qFACTK,YAAS,OAOPA,YAAS,QCDTwN,EAAU7N,YAAO4N,GAAV1N,WAAA,CAAAC,YAAA,mBAAAC,YAAA,eAAGJ,CAAH,MACP8N,EAAQ9N,IAAO+N,GAAV7N,WAAA,CAAAC,YAAA,iBAAAC,YAAA,eAAGJ,CAAH,iBAEL8E,YAAQ,MAGRkJ,EAAQhO,IAAOO,GAAVL,WAAA,CAAAC,YAAA,iBAAAC,YAAA,eAAGJ,CAAH,qIAEPmD,IAAWyB,UASTqJ,EAAOjO,IAAOS,GAAVP,WAAA,CAAAC,YAAA,gBAAAC,YAAA,eAAGJ,CAAH,kCACNmD,IAAWC,MAEP/C,YAAS,QAIX6N,EAAYlO,IAAOmO,GAAVjO,WAAA,CAAAC,YAAA,qBAAAC,YAAA,eAAGJ,CAAH,SACXK,YAAS,QAEP+N,EAAWpO,IAAOiF,IAAV/E,WAAA,CAAAC,YAAA,oBAAAC,YAAA,eAAGJ,CAAH,uCACH,SAAAqD,GAAA,OAAAA,EAAGC,MAAkB4G,QAM1BmE,EAAU,SAAA1N,GAAS,IACf2N,EAA6B3N,EAA7B2N,QAASpM,EAAoBvB,EAApBuB,MAAOqM,EAAa5N,EAAb4N,SACxB,OACEC,EAAA5M,EAAAC,cAACgM,EAAD,CAASzH,GAAG,WACVoI,EAAA5M,EAAAC,cAAA,OAAKM,UAAU,MACbqM,EAAA5M,EAAAC,cAAC4M,EAAA,EAAD,CAAQtM,UAAU,MAChBqM,EAAA5M,EAAAC,cAACiM,EAAD,CAAO3L,UAAU,QAAQD,GACxBqM,EAAWC,EAAA5M,EAAAC,cAAA,KAAGM,UAAU,QAAQoM,GAAgB,MAEnDC,EAAA5M,EAAAC,cAACmM,EAAD,KACGM,EAAQzI,IAAI,SAAArC,GAAc,IAAXuC,EAAWvC,EAAXuC,KACR2I,EAAS3I,EAAK7E,YACpB,OACEsN,EAAA5M,EAAAC,cAACoM,EAAD,CAAM5F,IAAKtC,EAAKqC,KACdoG,EAAA5M,EAAAC,cAAC8M,EAAA,EAAD,CAAMlM,KAAMiM,EAAOhC,KAAMpG,OAAO,SAASF,GAAG,KAC1CoI,EAAA5M,EAAAC,cAACqM,EAAD,KACEM,EAAA5M,EAAAC,cAAC+M,EAAAhN,EAAD,CACEiN,MAAOH,EAAOI,KAAKrI,gBAAgBoI,MACnCnI,IAAKgI,EAAOhM,QAGhB8L,EAAA5M,EAAAC,cAACuM,EAAD,CAAU5J,wBAAyB,CAAEC,OAAQsB,EAAKjC,gBAWpEuK,EAAQxL,UAAY,CAClByL,QAASS,QAAM/L,WACfuL,SAAUS,SAAOhM,WACjBd,MAAO8M,SAAOhM,YAGDqL,gBCvETR,EAAU7N,YAAO4N,GAAV1N,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAGJ,CAAH,MACP8N,EAAQ9N,IAAO+N,GAAV7N,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAGJ,CAAH,iBAEL8E,YAAQ,MAGRkJ,EAAQhO,IAAOO,GAAVL,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAGJ,CAAH,4MAEPmD,IAAWyB,SAOXzB,IAAW0D,WAIToH,EAAOjO,IAAOS,GAAVP,WAAA,CAAAC,YAAA,iBAAAC,YAAA,gBAAGJ,CAAH,kCACNmD,IAAWC,MAEP/C,YAAS,QAIX4O,EAAYjP,IAAOiF,IAAV/E,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAGJ,CAAH,oDACXK,YAAS,OACS,SAAAgD,GAAA,OAAAA,EAAGC,MAAkBC,aAEvC,SAAAC,GAAA,IAAG2D,EAAH3D,EAAG2D,eAAgB7D,EAAnBE,EAAmBF,MAAnB,OACA6D,EAAc,mCAGH7D,EAAMC,YAHH,2MAeZ2K,EAAYlO,IAAOiF,IAAV/E,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAGJ,CAAH,4MAMT8E,YAAQ,KACD,SAAAK,GAAA,OAAAA,EAAG7B,MAAkBC,aAU9BJ,IAAW0D,WAMTuH,EAAWpO,IAAO2L,EAAVzL,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAGJ,CAAH,SACVK,YAAS,QAGPuG,EAAW,SAAAjG,GAAS,IAChBiH,EAA8BjH,EAA9BiH,SAAU1F,EAAoBvB,EAApBuB,MAAOqM,EAAa5N,EAAb4N,SACzB,OACEC,EAAA5M,EAAAC,cAACqN,EAAD,CAAS9I,GAAG,WACVoI,EAAA5M,EAAAC,cAAA,OAAKM,UAAU,MACbqM,EAAA5M,EAAAC,cAAC4M,EAAA,EAAD,CAAQtM,UAAU,MAChBqM,EAAA5M,EAAAC,cAACsN,EAAD,CAAOhN,UAAU,QAAQD,GACxBqM,EAAWC,EAAA5M,EAAAC,cAAA,KAAGM,UAAU,QAAQoM,GAAgB,MAEnDC,EAAA5M,EAAAC,cAACuN,EAAD,KACGxH,EAAS/B,IAAI,SAAAR,GAAc,IAAXU,EAAWV,EAAXU,KACTsJ,EAAUtJ,EAAK7E,YACrB,OACEsN,EAAA5M,EAAAC,cAACyN,EAAD,CAAMjH,IAAKtC,EAAKqC,KACdoG,EAAA5M,EAAAC,cAAC8M,EAAA,EAAD,CAAMvI,GAAImC,OAAMvE,GAAE,aAAeqL,EAAQjH,KACvCoG,EAAA5M,EAAAC,cAACoN,EAAD,CAAW9H,gBAAiBkI,EAAQpJ,OAClCuI,EAAA5M,EAAAC,cAAC+M,EAAAhN,EAAD,CACE4E,MACE6I,EAAQpJ,MACJoJ,EAAQpJ,MAAMQ,gBAAgBD,MAC9B7F,EAAM4O,YAEZ7I,IAAK2I,EAAQnN,QAEbmN,EAAQpJ,MAIN,KAHFuI,EAAA5M,EAAAC,cAAA,QAAMM,UAAU,YACdqM,EAAA5M,EAAAC,cAAC8M,EAAA,EAAD,CAAMjM,KAAK,eAIjB8L,EAAA5M,EAAAC,cAAC2N,EAAD,KACEhB,EAAA5M,EAAAC,cAAA,MAAIM,UAAU,SAASkN,EAAQnN,OAC/BsM,EAAA5M,EAAAC,cAAA,YACE2M,EAAA5M,EAAAC,cAAC8M,EAAA,EAAD,CAAMjM,KAAK,cAAciE,KAAK,iBAGlC6H,EAAA5M,EAAAC,cAAC4N,EAAD,KAAWJ,EAAQlH,iBAWrCvB,EAAS/D,UAAY,CACnB+E,SAAUmH,QAAM/L,WAChBuL,SAAUS,SAAOhM,WACjBd,MAAO8M,SAAOhM,YAGD4D,QChITiH,EAAU7N,YAAO4N,GAAV1N,WAAA,CAAAC,YAAA,oBAAAC,YAAA,YAAGJ,CAAH,MACP8N,EAAQ9N,IAAO+N,GAAV7N,WAAA,CAAAC,YAAA,kBAAAC,YAAA,YAAGJ,CAAH,iBAEL8E,YAAQ,MAGRkJ,EAAQhO,IAAOO,GAAVL,WAAA,CAAAC,YAAA,kBAAAC,YAAA,YAAGJ,CAAH,oMAEPmD,IAAWyB,SAQXzB,IAAW0D,WAIToH,EAAOjO,IAAOS,GAAVP,WAAA,CAAAC,YAAA,iBAAAC,YAAA,YAAGJ,CAAH,kCACNmD,IAAWC,MAEP/C,YAAS,QAIX6N,EAAYlO,IAAOmO,GAAVjO,WAAA,CAAAC,YAAA,sBAAAC,YAAA,YAAGJ,CAAH,6BACXK,YAAS,OACTyE,YAAQ,MAIN4K,EAAW,SAAA/O,GAAS,IAChBgP,EAA8BhP,EAA9BgP,SAAUzN,EAAoBvB,EAApBuB,MAAOqM,EAAa5N,EAAb4N,SACzB,OACEC,EAAA5M,EAAAC,cAAC+N,EAAD,CAASxJ,GAAG,WACVoI,EAAA5M,EAAAC,cAAA,OAAKM,UAAU,MACbqM,EAAA5M,EAAAC,cAAC4M,EAAA,EAAD,CAAQtM,UAAU,MAChBqM,EAAA5M,EAAAC,cAACgO,EAAD,CAAO1N,UAAU,QAAQD,GACxBqM,EAAWC,EAAA5M,EAAAC,cAAA,KAAGM,UAAU,QAAQoM,GAAgB,MAEnDC,EAAA5M,EAAAC,cAACiO,EAAD,KACGH,EAAS9J,IAAI,SAACkK,EAASC,GAAV,OACZxB,EAAA5M,EAAAC,cAACoO,EAAD,CAAM5H,IAAK2H,GACTxB,EAAA5M,EAAAC,cAAC8M,EAAA,EAAD,CAAMpK,MAAM,KACViK,EAAA5M,EAAAC,cAACqO,EAAD,CAAW/N,UAAU,aAAa4N,EAAQ7N,OAC1CsM,EAAA5M,EAAAC,cAAA,SAAIkO,EAAQpJ,cAU5B+I,EAAS7M,UAAY,CACnB8M,SAAUZ,QAAM/L,WAChBuL,SAAUS,SAAOhM,WACjBd,MAAO8M,SAAOhM,YAGD0M,QC/DT7B,EAAU7N,YAAO4N,GAAV1N,WAAA,CAAAC,YAAA,wBAAAC,YAAA,gBAAGJ,CAAH,MACP8N,EAAQ9N,IAAO+N,GAAV7N,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAGJ,CAAH,iBAEL8E,YAAQ,MAGRkJ,EAAQhO,IAAOO,GAAVL,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAGJ,CAAH,qIAEPmD,IAAWyB,UASTqJ,EAAOjO,IAAOS,GAAVP,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAGJ,CAAH,6OAGJK,YAAS,OACTA,YAAS,OAIA,SAAAgD,GAAA,OAAAA,EAAGC,MAAkB6M,YAC5BrL,YAAQ,KAeVA,YAAQ,KAGV3B,IAAWC,MAEP/C,YAAS,OAGb,SAAAmD,GAAA,OAAAA,EAAGuD,KACC,sHAUFqJ,EAAe,SAAAzP,GAAS,IACpB0P,EAAkC1P,EAAlC0P,aAAcnO,EAAoBvB,EAApBuB,MAAOqM,EAAa5N,EAAb4N,SAC7B,OACEC,EAAA5M,EAAAC,cAACyO,EAAD,CAASlK,GAAG,WACVoI,EAAA5M,EAAAC,cAAA,OAAKM,UAAU,MACbqM,EAAA5M,EAAAC,cAAC4M,EAAA,EAAD,CAAQtM,UAAU,MAChBqM,EAAA5M,EAAAC,cAAC0O,EAAD,CAAOpO,UAAU,QAAQD,GACxBqM,EAAWC,EAAA5M,EAAAC,cAAA,KAAGM,UAAU,QAAQoM,GAAgB,MAEnDC,EAAA5M,EAAAC,cAAC2O,EAAD,KACGH,EAAaxK,IAAI,SAAC4K,EAAaT,GAAd,OAChBxB,EAAA5M,EAAAC,cAAC6O,EAAD,CAAMrI,IAAK2H,EAAGjJ,KAAM0J,EAAY1J,MAC9ByH,EAAA5M,EAAAC,cAAC8M,EAAA,EAAD,KACEH,EAAA5M,EAAAC,cAAA,cAAYM,UAAU,SACpBqM,EAAA5M,EAAAC,cAAA,SAAI4O,EAAY9J,OAElB6H,EAAA5M,EAAAC,cAAA,KAAGM,UAAU,UAAb,KAAyBsO,EAAYtK,gBAUrDiK,EAAavN,UAAY,CACvBwN,aAActB,QAAM/L,WACpBuL,SAAUS,SAAOhM,WACjBd,MAAO8M,SAAOhM,YAGDoN,0FC1FMO,cACnB,SAAAA,EAAYhQ,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKC,MAAQ,GAFIJ,8BAKnBK,kBAAS,IACCC,EAAgBH,KAAKJ,MAAMQ,KAAKC,eAAhCF,YADDwG,EAEqC3G,KAAKJ,MAAMQ,KAA/CmN,EAFD5G,EAEC4G,QAAS1G,EAFVF,EAEUE,SACXC,EAHCH,EAEoBC,aACO/B,MAAM,GAAGG,KAAKU,gBAChD,OACE+H,EAAA5M,EAAAC,cAAA2M,EAAA5M,EAAAE,SAAA,KACE0M,EAAA5M,EAAAC,cAAC4M,EAAA,EAADzM,OAAAC,OAAA,GAAYlB,KAAKJ,MAAjB,CAAwBuB,MAAOhB,EAAYgB,SAC3CsM,EAAA5M,EAAAC,cAAC4M,EAAA,EAAW1N,KAAKJ,MACf6N,EAAA5M,EAAAC,cAAC4M,EAAA,EAAD,KACED,EAAA5M,EAAAC,cAAA,MAAIM,UAAU,QAAQjB,EAAYkB,SAClCoM,EAAA5M,EAAAC,cAAC8M,EAAA,EAAD,KACEH,EAAA5M,EAAAC,cAAC8M,EAAA,EAAD,CAAQpM,QAAM,EAACE,KAAK,8GAA8G6D,OAAO,UAAzI,kBAGAkI,EAAA5M,EAAAC,cAAC8M,EAAA,EAAD,CAAQlM,KAAK,6BAA6B6D,OAAO,UAAjD,iBACAkI,EAAA5M,EAAAC,cAAA,QAAMM,UAAU,QAAhB,MACAqM,EAAA5M,EAAAC,cAAC8M,EAAA,EAAD,CAAQ3K,GAAG,WAAX,yBAGJwK,EAAA5M,EAAAC,cAAC+O,EAAD,CACErB,YAAa1H,EAAarB,MAC1BoB,SAAUA,EAAShC,MACnB2I,SAAUrN,EAAY2P,iBACtB3O,MAAOhB,EAAY4P,gBAErBtC,EAAA5M,EAAAC,cAACkP,EAAD,CACE7O,MAAOhB,EAAY8P,aACnBzC,SAAUrN,EAAY+P,gBACtB3C,QAASA,EAAQ1I,QAEnB4I,EAAA5M,EAAAC,cAACqP,EAAD,CACEhP,MAAOhB,EAAYiQ,cACnB5C,SAAUrN,EAAYkQ,iBACtBzB,SAAUzO,EAAYyO,WAExBnB,EAAA5M,EAAAC,cAACqP,EAAD,CACEhP,MAAOhB,EAAYmQ,YACnB9C,SAAUrN,EAAYoQ,eACtB3B,SAAUzO,EAAYqQ,SAExB/C,EAAA5M,EAAAC,cAAC2P,EAAD,CACEtP,MAAOhB,EAAYuQ,kBACnBlD,SAAUrN,EAAYwQ,qBACtBrB,aAAcnP,EAAYmP,qBAjDDzN,aAyDrC+N,EAAQ9N,UAAY,CAClB1B,KAAM2B,gBAAM,CACV1B,eAAgB2B,SAAOC,aACtBA,YAGE,IAAMC,EAAS,gMClEhB0O,EAAS3R,IAAOS,GAAVP,WAAA,CAAAC,YAAA,SAAAC,YAAA,YAAGJ,CAAH,gOAOe4R,IAAKC,EAAgBD,IAAKC,EAEvB,SAAAxO,GAAA,OAAAA,EAAGC,MAAkBwO,aAG/C3O,IAAWyB,SACTvE,YAAS,QAKT0R,EAAY/R,IAAOiF,IAAV/E,WAAA,CAAAC,YAAA,oBAAAC,YAAA,YAAGJ,CAAH,uDACC,SAAAwD,GAAA,IAAGF,EAAHE,EAAGF,MAAH,OAAAE,EAAUwO,OAAuB,GAAK1O,EAAMC,aACtC,SAAA4B,GAAA,OAAAA,EAAG7B,MAAkB6M,YAC7B,IAAM,GAGd8B,EAAgBjS,IAAOiF,IAAV/E,WAAA,CAAAC,YAAA,wBAAAC,YAAA,YAAGJ,CAAH,2FACfK,YAAS,OACTyE,YAAQ,KACR3B,IAAWC,OAQT8O,EAAalS,IAAOmO,GAAVjO,WAAA,CAAAC,YAAA,qBAAAC,YAAA,YAAGJ,CAAH,oFACZ8E,YAAQ,KACD,SAAAO,GAAA,OAAAA,EAAG/B,MAAkB4G,OAIxBpF,YAAQ,KACD,SAAAgB,GAAA,OAAAA,EAAGxC,MAAkBC,cAM9B4O,EAAcnS,IAAOiF,IAAV/E,WAAA,CAAAC,YAAA,sBAAAC,YAAA,YAAGJ,CAAH,sDACbK,YAAS,OAEPA,YAAS,OAGX8C,IAAWC,OAKTgP,EAAS,SAAAzR,GAAS,IACd0R,EAAkB1R,EAAlB0R,cACAnR,EAAgBP,EAAMQ,KAAtBD,YACA8Q,EAA0C9Q,EAA1C8Q,OAAQM,EAAkCpR,EAAlCoR,MAAOC,EAA2BrR,EAA3BqR,OAAQC,EAAmBtR,EAAnBsR,MAAOC,EAAYvR,EAAZuR,QACtC,OACEjE,EAAA5M,EAAAC,cAAC8P,EAAD,CAAQe,QAAS/R,EAAMgS,YAAaC,KAAK,UACvCpE,EAAA5M,EAAAC,cAACkQ,EAAD,CAAWc,UAAWb,GACpBxD,EAAA5M,EAAAC,cAAC+M,EAAAhN,EAAD,CACE4E,MAAOwL,EAASA,EAAOvL,gBAAgBD,MAAQ6L,EAAc7L,SAGjEgI,EAAA5M,EAAAC,cAACoQ,EAAD,KACEzD,EAAA5M,EAAAC,cAACqQ,EAAD,KACE1D,EAAA5M,EAAAC,cAAA,YAAOyQ,GADT,IACuB9D,EAAA5M,EAAAC,cAAA,YAAO2Q,IAE9BhE,EAAA5M,EAAAC,cAACsQ,EAAD,KACGM,EACCjE,EAAA5M,EAAAC,cAAC8M,EAAA,EAAD,CACE+D,QAAS,SAAAI,GAAC,OAAIA,EAAEC,mBAChBtQ,KAAI,uBAAyBgQ,EAC7BO,IAAI,WACJ1M,OAAO,8BAEPkI,EAAA5M,EAAAC,cAAC8M,EAAA,EAAD,CAAMjM,KAAK,UAAUC,KAAK,OAE1B,KACH4P,EACC/D,EAAA5M,EAAAC,cAAC8M,EAAA,EAAD,CACE+D,QAAS,SAAAI,GAAC,OAAIA,EAAEC,mBAChBtQ,KAAI,sBAAwB8P,EAC5BS,IAAI,WACJ1M,OAAO,8BAEPkI,EAAA5M,EAAAC,cAAC8M,EAAA,EAAD,CAAMjM,KAAK,SAASC,KAAK,OAEzB,SAOdyP,EAAOvP,UAAY,CACjBwP,cAAetP,SAAOC,WACtB7B,KAAM2B,gBAAM,CACV5B,YAAa6B,SAAOC,aACnBA,WACH2P,YAAaM,OAAKjQ,YAGpBoP,EAAOc,aAAe,GAEPd,QC/GTT,EAAS3R,IAAOiF,IAAV/E,WAAA,CAAAC,YAAA,sBAAAC,YAAA,eAAGJ,CAAH,8CACRK,YAAS,OACT8C,IAAWyB,UAKTmN,EAAY/R,IAAOiF,IAAV/E,WAAA,CAAAC,YAAA,yBAAAC,YAAA,eAAGJ,CAAH,0GACC,SAAAqD,GAAA,IAAGwP,EAAHxP,EAAGwP,UAAWvP,EAAdD,EAAcC,MAAd,OACXuP,EAAgC,GAApBvP,EAAMC,aACnBJ,IAAWyB,SACC,GAEZzB,IAAWC,MACT/C,YAAS,QAQT4R,EAAgBjS,IAAOiF,IAAV/E,WAAA,CAAAC,YAAA,6BAAAC,YAAA,eAAGJ,CAAH,kBACf8E,YAAQ,KACR3B,IAAWyB,SACTvE,YAAS,QAGT6R,EAAalS,IAAOyL,GAAVvL,WAAA,CAAAC,YAAA,0BAAAC,YAAA,eAAGJ,CAAH,mCACZ8E,YAAQ,KAED,SAAAtB,GAAA,OAAAA,EAAGF,MAAkBgC,aAE1B6N,EAAYnT,IAAOiF,IAAV/E,WAAA,CAAAC,YAAA,yBAAAC,YAAA,eAAGJ,CAAH,uBACXK,YAAS,OACTyE,YAAQ,KACD,SAAAK,GAAA,OAAAA,EAAG7B,MAAkBgC,aAE1B8N,EAAcpT,IAAOiF,IAAV/E,WAAA,CAAAC,YAAA,2BAAAC,YAAA,eAAGJ,CAAH,SACbK,YAAS,QAEPgT,EAAerT,IAAOiF,IAAV/E,WAAA,CAAAC,YAAA,4BAAAC,YAAA,eAAGJ,CAAH,8DAEZK,YAAS,OAGTA,YAAS,QAIT+R,EAAS,SAAAzR,GAAS,IACd0R,EAAkB1R,EAAlB0R,cADciB,EAEQ3S,EAAMQ,KAA5BD,EAFcoS,EAEdpS,YAAa4C,EAFCwP,EAEDxP,KACbkO,EAAiD9Q,EAAjD8Q,OAAQM,EAAyCpR,EAAzCoR,MAAOC,EAAkCrR,EAAlCqR,OAAQC,EAA0BtR,EAA1BsR,MAAOe,EAAmBrS,EAAnBqS,MAAOd,EAAYvR,EAAZuR,QAC7C,OACEjE,EAAA5M,EAAAC,cAAC8M,EAAA,EAAD,CAAOgE,YAAahS,EAAMgS,aACxBnE,EAAA5M,EAAAC,cAAC2R,EAAD,KACEhF,EAAA5M,EAAAC,cAAC4R,EAAD,CAAWZ,UAAWb,GACpBxD,EAAA5M,EAAAC,cAAC+M,EAAAhN,EAAD,CACE4E,MAAOwL,EAASA,EAAOvL,gBAAgBD,MAAQ6L,EAAc7L,SAGjEgI,EAAA5M,EAAAC,cAAC6R,EAAD,KACElF,EAAA5M,EAAAC,cAAC8R,EAAD,KACGrB,EADH,IACWE,GAEXhE,EAAA5M,EAAAC,cAACsR,EAAD,KACE3E,EAAA5M,EAAAC,cAAC8M,EAAA,EAAD,CAAMnK,wBAAyB,CAAEC,OAAQX,MAE3C0K,EAAA5M,EAAAC,cAACuR,EAAD,KAAcG,GACd/E,EAAA5M,EAAAC,cAACwR,EAAD,KACE7E,EAAA5M,EAAAC,cAAC8M,EAAA,EAAD,CAAQlM,KAAI,sBAAwB8P,EAAUjM,OAAO,UACnDkI,EAAA5M,EAAAC,cAAC8M,EAAA,EAAD,CAAMjM,KAAK,WADb,WAGA8L,EAAA5M,EAAAC,cAAC8M,EAAA,EAAD,CAAQlM,KAAI,uBAAyBgQ,EAAWnM,OAAO,UACrDkI,EAAA5M,EAAAC,cAAC8M,EAAA,EAAD,CAAMjM,KAAK,YADb,iBAUZ0P,EAAOvP,UAAY,CACjBwP,cAAetP,SAAOC,WACtB7B,KAAM2B,gBAAM,CACV5B,YAAa6B,SAAOC,aACnBA,WACH2P,YAAaM,OAAKjQ,YAGpBoP,EAAOc,aAAe,GAEPd,sFC3Ff,IAAMwB,EAAgB5T,IAAO6T,QAAV3T,WAAA,CAAAC,YAAA,2BAAAC,YAAA,YAAGJ,CAAH,SACfK,YAAS,QAGPyT,EAAS9T,IAAOO,GAAVL,WAAA,CAAAC,YAAA,oBAAAC,YAAA,YAAGJ,CAAH,kMACG+T,IAAUnC,IAAKoC,EAI1B7Q,IAAWC,MAGXD,IAAWyB,UAKTqP,EAAcjU,IAAOiF,IAAV/E,WAAA,CAAAC,YAAA,yBAAAC,YAAA,YAAGJ,CAAH,8KACbK,YAAS,OAGPA,YAAS,OACTA,YAAS,OACTA,YAAS,OACTyE,YAAQ,KAED,SAAAzB,GAAA,OAAAA,EAAGC,MAAkBC,aAGZ2Q,IAAMC,EAItBrP,YAAQ,MAKOsP,cACnB,SAAAA,EAAYzT,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKC,MAAQ,CACXqT,cAAe,MAEjBzT,EAAK0T,iBAAmB1T,EAAK0T,iBAAiBxL,KAAtByL,QAAA3T,KALPA,sCAQnB0T,0BAAiBE,GACfzT,KAAKkI,SAAS,SAAAgC,GAAS,MAAK,CAC1BoJ,cAAepJ,EAAUoJ,cAAgB,KAAOG,QAIpDvT,kBAAS,IAAAiI,EAAAnI,KACCsT,EAAkBtT,KAAKC,MAAvBqT,cADD3M,EAEoD3G,KAAKJ,MAAMQ,KAA9DkR,EAFD3K,EAEC2K,cAAeoC,EAFhB/M,EAEgB+M,UAAWC,EAF3BhN,EAE2BgN,QAASC,EAFpCjN,EAEoCiN,YACnCzT,EAAgBH,KAAKJ,MAAMQ,KAAKC,eAAhCF,YACF0T,EAAgBvC,EAAczM,MAAM,GAAGG,KAAKU,gBAClD,OACE+H,EAAA5M,EAAAC,cAAA2M,EAAA5M,EAAAE,SAAA,KACE0M,EAAA5M,EAAAC,cAAC4M,EAAA,EAADzM,OAAAC,OAAA,GAAYlB,KAAKJ,MAAjB,CAAwBuB,MAAOhB,EAAYgB,SAC3CsM,EAAA5M,EAAAC,cAAC4M,EAAA,EAAW1N,KAAKJ,MACf6N,EAAA5M,EAAAC,cAAC4M,EAAA,EAAD,KACED,EAAA5M,EAAAC,cAAA,MAAIM,UAAU,QAAQjB,EAAYkB,SAClCoM,EAAA5M,EAAAC,cAAA,KAAGM,UAAU,QAAQjB,EAAYmB,aAEnCmM,EAAA5M,EAAAC,cAAC4M,EAAA,EAAD,KACED,EAAA5M,EAAAC,cAAC+R,EAAD,KACEpF,EAAA5M,EAAAC,cAACoS,EAAD,KACEzF,EAAA5M,EAAAC,cAAA,UAAKX,EAAY2T,kBACjBrG,EAAA5M,EAAAC,cAAA,SAAIX,EAAY4T,iBAElBtG,EAAA5M,EAAAC,cAACiS,EAAD,KACGW,EAAU7O,MAAMC,IAAI,SAAArC,GAAA,IAAGuC,EAAHvC,EAAGuC,KAAH,OACnByI,EAAA5M,EAAAC,cAACkT,EAAD,CACE5T,KAAM4E,EACNsM,cAAeuC,EACfvM,IAAKtC,EAAK7E,YAAYkH,IACtBuK,YAAa,SAAAG,GAAC,OAAI5J,EAAKoL,iBAAiBvO,EAAM+M,UAKtDtE,EAAA5M,EAAAC,cAACoS,EAAD,KACEzF,EAAA5M,EAAAC,cAAA,UAAKX,EAAY8T,gBACjBxG,EAAA5M,EAAAC,cAAA,SAAIX,EAAY+T,eAElBzG,EAAA5M,EAAAC,cAAC+R,EAAD,KACEpF,EAAA5M,EAAAC,cAACiS,EAAD,KACGY,EAAQ9O,MAAMC,IAAI,SAAAV,GAAA,IAAGY,EAAHZ,EAAGY,KAAH,OACjByI,EAAA5M,EAAAC,cAACkT,EAAD,CACE5T,KAAM4E,EACNsM,cAAeuC,EACfvM,IAAKtC,EAAK7E,YAAYkH,IACtBuK,YAAa,SAAAG,GAAC,OAAI5J,EAAKoL,iBAAiBvO,EAAM+M,UAKtDtE,EAAA5M,EAAAC,cAAC+R,EAAD,KACEpF,EAAA5M,EAAAC,cAACoS,EAAD,KACEzF,EAAA5M,EAAAC,cAAA,UAAKX,EAAYgU,oBACjB1G,EAAA5M,EAAAC,cAAA,SAAIX,EAAYiU,mBAElB3G,EAAA5M,EAAAC,cAACiS,EAAD,KACGa,EAAY/O,MAAMC,IAAI,SAAAR,GAAA,IAAGU,EAAHV,EAAGU,KAAH,OACrByI,EAAA5M,EAAAC,cAACkT,EAAD,CACE5T,KAAM4E,EACNsM,cAAeuC,EACfvM,IAAKtC,EAAK7E,YAAYkH,IACtBuK,YAAa,SAAAG,GAAC,OAAI5J,EAAKoL,iBAAiBvO,EAAM+M,WAMrC,OAAlBuB,EACC7F,EAAA5M,EAAAC,cAACuT,EAAD,CACEzC,YAAa5R,KAAKuT,iBAClBnT,KAAMkT,EACNhC,cAAeuC,IAEf,WApFyBhS,aA2FvCwR,EAAUvR,UAAY,CACpB1B,KAAM2B,gBAAM,CACV1B,eAAgB2B,SAAOC,WACvByR,UAAW1R,SAAOC,WAClB0R,QAAS3R,SAAOC,WAChB2R,YAAa5R,SAAOC,aACnBA,YAGE,IAAMC,EAAS,sMC/IhBoS,EAASrV,IAAOiF,IAAV/E,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAGJ,CAAH,2cACKsV,IAAKC,KAsBMC,IAGAC,IAGAC,IAGtB5Q,YAAQ,KAORA,YAAQ,KAGRA,YAAQ,MAIO6Q,cACnB,SAAAA,EAAYhV,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKC,MAAQ,GAFIJ,8BAKnBK,kBAAS,IACC2U,EAAa1L,IAAb0L,SACR,OACEpH,EAAA5M,EAAAC,cAAA2M,EAAA5M,EAAAE,SAAA,KACG8T,EAAS/P,IAAI,SAACqE,EAAO8F,GAAR,OACZxB,EAAA5M,EAAAC,cAACwT,EAAD,CACEhN,IAAK2H,EACL7L,MAAO,CACLgM,WAAYjG,EACZA,MAAO,QACPiD,QAAS,QACT0I,WAAY,SAGdrH,EAAA5M,EAAAC,cAAA,OAAKM,UAAU,iBACfqM,EAAA5M,EAAAC,cAAA,OAAKM,UAAU,iBACfqM,EAAA5M,EAAAC,cAAA,OAAKM,UAAU,iBACfqM,EAAA5M,EAAAC,cAAA,YAAOqI,GACPsE,EAAA5M,EAAAC,cAAA,+LAKA2M,EAAA5M,EAAAC,cAAA,sMA7B4Be,aAyCxC+S,EAAW9S,UAAY,iBC1FRiT,EAAA,iBAAAnV,GAAK,OAAI6N,EAAA5M,EAAAC,cAACkU,EAAepV,yBCJxC,IAAAqV,EAAcC,EAAQ,IACtBC,EAAYD,EAAQ,IACpBE,EAAcF,EAAQ,IACtBG,EAAA,KAEAC,EAAA,SAAArH,EAAAsH,EAAAC,EAAAC,GACA,IAAAC,EAAAC,OAAAP,EAAAnH,IACA2H,EAAA,IAAAL,EAEA,MADA,KAAAC,IAAAI,GAAA,IAAAJ,EAAA,KAAAG,OAAAF,GAAAI,QAAAR,EAAA,UAA0F,KAC1FO,EAAA,IAAAF,EAAA,KAAAH,EAAA,KAEAO,EAAAC,QAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA,GACAA,EAAAF,GAAAC,EAAAX,GACAL,IAAAkB,EAAAlB,EAAAmB,EAAAjB,EAAA,WACA,IAAAkB,EAAA,GAAAL,GAAA,KACA,OAAAK,MAAAC,eAAAD,EAAAE,MAAA,KAAAjK,OAAA,IACG,SAAA4J,sCCfHhB,EAAQ,IAARA,CAAwB,gBAAAI,GACxB,gBAAAkB,GACA,OAAAlB,EAAAtV,KAAA,WAAAwW,wCCFAtB,EAAQ,IAARA,CAAwB,iBAAAI,GACxB,kBACA,OAAAA,EAAAtV,KAAA","file":"component---src-pages-playground-js-903449531703be31f61f.js","sourcesContent":["import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Action, Icon, Tile } from \"ui/components\";\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { setSpace } from \"ui/mixins\";\n\nconst ContactHolder = styled(Tile)`\n  ${setSpace(\"pah\")};\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 600px;\n  text-align: center;\n`;\nconst Social = styled.ul`\n  ${setSpace(\"mtl\")};\n  text-align: left;\n`;\n\nconst SocialItem = styled.li`\n  ${setSpace(\"mts\")};\n  i {\n    ${setSpace(\"mrs\")};\n  }\n`;\n\nexport default class ContactTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { frontmatter } = this.props.data.markdownRemark;\n    const {\n      email,\n      facebookid,\n      linkedinid,\n      twitterid,\n      myspaceid,\n      githubid\n    } = frontmatter;\n    return (\n      <>\n        <Helmet {...this.props} title={frontmatter.title} />\n        <Layout {...this.props}>\n          <Body>\n            <Header>\n              <h1 className=\"hero\">{frontmatter.heading}</h1>\n              <p className=\"para\">{frontmatter.subheading}</p>\n            </Header>\n            <ContactHolder>\n              <Action button obfuscated email={email} />\n              <Social>\n                {twitterid ? (\n                  <SocialItem>\n                    <Action href={`https://twitter.com/${twitterid}`}>\n                      <Icon name=\"twitter\" size=\"s\" />\n                      {twitterid}\n                    </Action>\n                  </SocialItem>\n                ) : null}\n                {githubid ? (\n                  <SocialItem>\n                    <Action href={`https://github.com/${githubid}`} size=\"s\">\n                      <Icon name=\"github\" />\n                      {githubid}\n                    </Action>\n                  </SocialItem>\n                ) : null}\n                {linkedinid ? (\n                  <SocialItem>\n                    <Action\n                      href={`https://linkedin.com/${linkedinid}`}\n                      size=\"s\"\n                    >\n                      <Icon name=\"linkedin\" />\n                      {linkedinid}\n                    </Action>\n                  </SocialItem>\n                ) : null}\n                {myspaceid ? (\n                  <SocialItem>\n                    <Action href={`https://myspace.com/${myspaceid}`} size=\"s\">\n                      <Icon name=\"myspace\" />\n                      {myspaceid}\n                    </Action>\n                  </SocialItem>\n                ) : null}\n                {facebookid ? (\n                  <SocialItem>\n                    <Action\n                      href={`https://facebook.com/${facebookid}`}\n                      size=\"s\"\n                    >\n                      <Icon name=\"facebook\" />\n                      {facebookid}\n                    </Action>\n                  </SocialItem>\n                ) : null}\n              </Social>\n            </ContactHolder>\n          </Body>\n        </Layout>\n      </>\n    );\n  }\n}\n\nContactTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query ContactTplQuery($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n        email\n        facebookid\n        twitterid\n        githubid\n      }\n    }\n  }\n`;\n","import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Icon, Tile } from \"ui/components\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace } from \"ui/mixins\";\n\nconst EmojiHolder = styled(Tile)`\n  ${setSpace(\"pak\")};\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 600px;\n  text-align: center;\n  ${breakpoint.phone} {\n    ${setSpace(\"pvh\")};\n  }\n  i {\n    ${setSpace(\"mbl\")};\n    color: ${({ theme }) => theme.actionColor};\n    display: inline-block;\n    font-size: 240px;\n    height: 240px;\n    line-height: 240px;\n    width: 240px;\n    ${breakpoint.phone} {\n      font-size: 200px;\n      height: 200px;\n      line-height: 200px;\n      width: 200px;\n    }\n  }\n  h2 {\n    font-size: 36px;\n    color: ${({ theme }) => theme.actionColor};\n    font-weight: 800;\n    ${breakpoint.phone} {\n      font-size: 26px;\n    }\n  }\n`;\n\nexport default class EmojiTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { frontmatter } = this.props.data.markdownRemark;\n    return (\n      <>\n        <Helmet {...this.props} title={frontmatter.title} />\n        <Layout {...this.props}>\n          <Body>\n            <Header>\n              <h1 className=\"hero\">{frontmatter.heading}</h1>\n              <p className=\"para\">{frontmatter.subheading}</p>\n            </Header>\n            <EmojiHolder>\n              <Icon name=\"thinking\" className=\"emoji\" />\n              <h2 className=\"name\">:thinkingface:</h2>\n            </EmojiHolder>\n          </Body>\n        </Layout>\n      </>\n    );\n  }\n}\n\nEmojiTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query EmojiTplQuery($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n      }\n    }\n  }\n`;\n","import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\n\nimport { Actionbar, Action, Copy, Tile } from \"ui/components\";\nimport { Body, Pitch, Helmet, Layout } from \"ui/partials\";\n\nexport default class LandingTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { frontmatter, html } = this.props.data.markdownRemark;\n    return (\n      <>\n        <Helmet {...this.props} title={frontmatter.title} />\n        <Layout {...this.props}>\n          <Pitch>\n            <h1 className=\"hero\">{frontmatter.heading}</h1>\n            <Actionbar>\n              <Action button to=\"/projects\">\n                {frontmatter.projectsCta}\n              </Action>\n              <Action to=\"/contact\">{frontmatter.contactCta}</Action>\n            </Actionbar>\n          </Pitch>\n          <Body\n            style={{\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              maxWidth: \"900px\"\n            }}\n          >\n            <Tile space=\"h\">\n              <Copy dangerouslySetInnerHTML={{ __html: html }} />\n            </Tile>\n          </Body>\n        </Layout>\n      </>\n    );\n  }\n}\n\nLandingTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query LandingTplQuery($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n        contactCta\n        projectsCta\n      }\n    }\n  }\n`;\n","import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport Img from \"gatsby-image\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Copy, Icon, Tile } from \"ui/components\";\n\nconst MentionsList = styled.ol`\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nconst Mention = styled(Tile)`\n  ${setType(\"m\")};\n  grid-row-end: span 1;\n  position: relative;\n  ${breakpoint.phone} {\n    ${setSpace(\"mbl\")};\n  }\n  ${({ highlight }) =>\n    highlight\n      ? `\n    grid-column: 1 / span 2;\n    grid-row: 1 / 2;\n    justify-self: stretch;\n    align-self: stretch;\n  `\n      : ``};\n`;\n\nconst MentionCover = styled.div`\n  ${setSpace(\"mbm\")};\n  border: 2px solid ${({ theme }) => theme.actionColor};\n  display: block;\n`;\n\nconst MentionHd = styled.div`\n  align-items: flex-start;\n  display: flex;\n  justify-content: space-between;\n  h2,\n  span {\n    ${setType(\"l\")};\n    color: ${({ theme }) => theme.actionColor};\n    font-weight: 800;\n  }\n`;\n\nconst MentionBd = styled.div`\n  ${setSpace(\"mts\")};\n  color: ${({ theme }) => theme.titleColor};\n  ${Copy} {\n    ${setSpace(\"mbs\")};\n  }\n`;\n\nexport default class MediaTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { mentions } = this.props.data;\n    const { frontmatter } = this.props.data.markdownRemark;\n    return (\n      <>\n        <Helmet {...this.props} title={frontmatter.title} />\n        <Layout {...this.props}>\n          <Header>\n            <h1 className=\"hero\">{frontmatter.heading}</h1>\n            <p className=\"para\">{frontmatter.subheading}</p>\n          </Header>\n          <Body>\n            <MentionsList>\n              {mentions.edges.map(({ node }) => {\n                const { html } = node;\n                const {\n                  cover,\n                  publication,\n                  source,\n                  highlight,\n                  title\n                } = node.frontmatter;\n                return (\n                  <Mention as=\"li\" highlight={highlight}>\n                    <Tile href={source} target=\"_blank\" as=\"a\">\n                      {cover ? (\n                        <MentionCover>\n                          <Img\n                            fluid={cover.childImageSharp.fluid}\n                            alt={title}\n                          />\n                        </MentionCover>\n                      ) : null}\n                      <MentionHd>\n                        <h2 className=\"title\">{title}</h2>\n                        <span>\n                          <Icon name=\"popout\" text=\"Read the article…\" />\n                        </span>\n                      </MentionHd>\n                      <MentionBd>\n                        {html ? (\n                          <>\n                            <Copy dangerouslySetInnerHTML={{ __html: html }} />\n                          </>\n                        ) : null}\n                        <p>by {publication}</p>\n                      </MentionBd>\n                    </Tile>\n                  </Mention>\n                );\n              })}\n            </MentionsList>\n          </Body>\n        </Layout>\n      </>\n    );\n  }\n}\n\nMediaTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired,\n    mentions: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query MediaTplQuery($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n      }\n    }\n    mentions: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"//pages/fame/.*mention.md/\" } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            date(formatString: \"MMMM YYYY\")\n            title\n            cover {\n              childImageSharp {\n                fluid(\n                  maxHeight: 240\n                  quality: 100\n                  traceSVG: { color: \"lightgray\" }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n            link\n            highlight\n            publication\n            source\n            uid\n          }\n        }\n      }\n    }\n  }\n`;\n","import { graphql, Link } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport Img from \"gatsby-image\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Icon, Tile } from \"ui/components\";\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst Projects = styled.ol`\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 40px;\n    grid-template-columns: repeat(auto-fill, minmax(340px, 1fr));\n    margin-left: auto;\n    margin-right: auto;\n  }\n  ${breakpoint.desktopUp} {\n    grid-template-columns: repeat(auto-fill, minmax(380px, 1fr));\n  }\n`;\n\nconst Flag = styled.span`\n  ${setType(\"x\")};\n  ${setSpace(\"mlx\")};\n  color: ${({ theme }) => theme.dimmedColor};\n  font-weight: 800;\n  text-transform: uppercase;\n`;\n\nconst Project = styled.li`\n  grid-row-end: span 1;\n  ${breakpoint.phone} {\n    ${setSpace(\"mbl\")};\n  }\n  ${breakpoint.tabletUp} {\n    &:nth-child(even) {\n      transform: translateY(30px);\n    }\n  }\n`;\n\nconst ProjectCover = styled.div`\n  ${setSpace(\"mbm\")};\n  border: 2px solid ${({ theme }) => theme.actionColor};\n  position: relative;\n  ${({ hasPlaceholder, theme }) =>\n    hasPlaceholder\n      ? `\n  .thinking {\n    color: ${theme.actionColor};\n    display: inline-block;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    i {\n      font-size: 80px !important;\n    }\n  }`\n      : ``};\n`;\n\nconst ProjectHd = styled.div`\n  ${setSpace(\"mbm\")};\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  span {\n    font-weight: 800;\n    text-transform: uppercase;\n  }\n  span.code {\n    align-items: center;\n    color: ${({ theme }) => theme.titleColor};\n    display: flex;\n  }\n  span.date {\n    color: ${({ theme }) => theme.dimmedColor};\n  }\n`;\n\nconst ProjectBd = styled.div`\n  align-items: flex-start;\n  display: flex;\n  justify-content: space-between;\n  h2,\n  span {\n    ${setType(\"l\")};\n    color: ${({ theme }) => theme.actionColor};\n    font-weight: 800;\n    text-transform: uppercase;\n  }\n  h2 {\n    max-width: 75%;\n  }\n  span {\n    display: none;\n  }\n  ${breakpoint.desktopUp} {\n    span {\n      display: inline-block;\n    }\n  }\n`;\n\nconst ProjectFt = styled.div`\n  color: ${({ theme }) => theme.titleColor};\n  p.summary {\n    ${setSpace(\"mts\")};\n  }\n`;\n\nexport default class ProjectListingTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { defaultCover, projects, markdownRemark } = this.props.data;\n    const genericCover = defaultCover.edges[0].node.childImageSharp;\n    const { frontmatter } = markdownRemark;\n    return (\n      <>\n        <Helmet {...this.props} title={frontmatter.title} />\n        <Layout {...this.props}>\n          <Header>\n            <h1 className=\"hero\">{frontmatter.heading}</h1>\n            <p className=\"para\">{frontmatter.subheading}</p>\n          </Header>\n          <Body>\n            <Projects>\n              {projects.edges.map(({ node }) => {\n                const {\n                  active,\n                  cover,\n                  date,\n                  code,\n                  tagline,\n                  title,\n                  uid\n                } = node.frontmatter;\n                return (\n                  <Project key={uid} as=\"li\">\n                    <Tile as={Link} to={`/projects/${uid}`}>\n                      <ProjectHd>\n                        <span className=\"code\">\n                          {code} {!active ? <Flag>(Hibernated)</Flag> : null}\n                        </span>\n                        <span className=\"date\">{date}</span>\n                      </ProjectHd>\n                      <ProjectCover hasPlaceholder={!cover}>\n                        <Img\n                          fluid={\n                            cover\n                              ? cover.childImageSharp.fluid\n                              : genericCover.fluid\n                          }\n                          alt={title}\n                        />\n\n                        {!cover ? (\n                          <span className=\"thinking\">\n                            <Icon name=\"thinking\" size=\"h\" />\n                          </span>\n                        ) : null}\n                      </ProjectCover>\n                      <ProjectBd>\n                        <h2 className=\"title\">{title}</h2>\n                        <span>\n                          <Icon name=\"arrow-right\" text=\"Read more…\" />\n                        </span>\n                      </ProjectBd>\n                      <ProjectFt>\n                        <p className=\"summary\">{tagline}</p>\n                      </ProjectFt>\n                    </Tile>\n                  </Project>\n                );\n              })}\n            </Projects>\n          </Body>\n        </Layout>\n      </>\n    );\n  }\n}\n\nProjectListingTpl.propTypes = {\n  data: shape({\n    projects: object.isRequired,\n    markdownRemark: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query ProjectsTplQuery($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n      }\n    }\n    defaultCover: allFile(\n      filter: { relativePath: { eq: \"images/default-cover.png\" } }\n    ) {\n      edges {\n        node {\n          childImageSharp {\n            fluid(\n              maxWidth: 600\n              quality: 90\n              traceSVG: { color: \"lightgray\" }\n            ) {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n      }\n    }\n    projects: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/pages/projects/.*project.md/\" } }\n      sort: { order: DESC, fields: [frontmatter___score, frontmatter___date] }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            uid\n            date(formatString: \"MMM YYYY\")\n            title\n            active\n            tagline\n            code\n            cover {\n              childImageSharp {\n                fluid(\n                  maxWidth: 600\n                  quality: 90\n                  traceSVG: { color: \"lightgray\" }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Copy, Tabs, Tab, Tile } from \"ui/components\";\nimport { setSpace } from \"ui/mixins\";\n\nconst Questions = styled(Tile)`\n  ${setSpace(\"pah\")};\n  display: ${({ isActive }) => (isActive ? \"block\" : \"none\")};\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 900px;\n`;\n\nexport default class FAQListingTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tab: \"partnership\"\n    };\n    this.switchTab = this.switchTab.bind(this);\n  }\n\n  switchTab(str) {\n    this.setState({ tab: str });\n  }\n\n  render() {\n    const { frontmatter } = this.props.data.markdownRemark;\n    const membershipQuestions = this.props.data.membership.edges[0].node.html;\n    const partnershipQuestions = this.props.data.partnership.edges[0].node.html;\n    return (\n      <>\n        <Helmet {...this.props} title=\"Frequently Asked Questions\" />\n        <Layout {...this.props}>\n          <Header>\n            <h1 className=\"hero\">{frontmatter.heading}</h1>\n            <p className=\"para\">{frontmatter.subheading}</p>\n          </Header>\n          <Body\n            style={{\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              maxWidth: \"900px\"\n            }}\n          >\n            <Tabs count={2}>\n              <Tab\n                handleClick={() => this.switchTab(\"partnership\")}\n                isActive={this.state.tab === \"partnership\"}\n              >\n                {frontmatter.partnershipTab}\n              </Tab>\n              <Tab\n                handleClick={() => this.switchTab(\"membership\")}\n                isActive={this.state.tab === \"membership\"}\n              >\n                {frontmatter.membershipTab}\n              </Tab>\n            </Tabs>\n            <Questions isActive={this.state.tab === \"partnership\"} limit>\n              <Copy\n                dangerouslySetInnerHTML={{ __html: partnershipQuestions }}\n              />\n            </Questions>\n            <Questions isActive={this.state.tab === \"membership\"} limit>\n              <Copy dangerouslySetInnerHTML={{ __html: membershipQuestions }} />\n            </Questions>\n          </Body>\n        </Layout>\n      </>\n    );\n  }\n}\n\nFAQListingTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired,\n    membership: object.isRequired,\n    partnership: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query FAQTplQuery($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n        membershipTab\n        partnershipTab\n      }\n    }\n    membership: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//pages/question/membership/*/.*/*.md/\" }\n      }\n      sort: { order: ASC, fields: [frontmatter___score] }\n    ) {\n      edges {\n        node {\n          id\n          html\n        }\n      }\n    }\n    partnership: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//pages/question/partnership/*/.*/*.md/\" }\n      }\n      sort: { order: DESC, fields: [frontmatter___score] }\n    ) {\n      edges {\n        node {\n          id\n          html\n        }\n      }\n    }\n  }\n`;\n","import { graphql, Link } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\nimport Img from \"gatsby-image\";\nimport styled from \"styled-components\";\n\nimport { Icon, Tile } from \"ui/components\";\nimport { breakpoint } from \"ui/settings\";\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst PostList = styled.ol`\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nconst Post = styled(Tile)`\n  ${setType(\"m\")};\n  grid-row-end: span 1;\n  position: relative;\n  ${breakpoint.phone} {\n    ${setSpace(\"mbl\")};\n  }\n`;\n\nconst PostCover = styled.div`\n  border: 2px solid ${({ theme }) => theme.actionColor};\n  ${setSpace(\"mbm\")};\n`;\n\nconst PostHd = styled.div`\n  ${setSpace(\"mbs\")};\n  align-items: flex-start;\n  display: flex;\n  justify-content: space-between;\n  h2,\n  span {\n    ${setType(\"l\")};\n    color: ${({ theme }) => theme.actionColor};\n    font-weight: 800;\n  }\n  span {\n    display: none;\n  }\n  ${breakpoint.desktopUp} {\n    span {\n      display: inline-block;\n    }\n  }\n`;\n\nconst PostBd = styled.div`\n  ${setSpace(\"mbm\")};\n  color: ${({ theme }) => theme.titleColor};\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nconst PostFt = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  span {\n    ${setType(\"s\")};\n    color: ${({ theme }) => theme.color};\n  }\n`;\n\nexport default class BlogListingTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { posts } = this.props.data;\n    const { frontmatter } = this.props.data.markdownRemark;\n    return (\n      <>\n        <Helmet {...this.props} title={frontmatter.title} />\n        <Layout {...this.props}>\n          <Header>\n            <h1 className=\"hero\">{frontmatter.heading}</h1>\n            <p className=\"para\">{frontmatter.subheading}</p>\n          </Header>\n          <Body>\n            <PostList>\n              {posts.edges.map(({ node }) => {\n                const { timeToRead } = node;\n                const { cover, date, summary, title, uid } = node.frontmatter;\n                return (\n                  <Post key={uid} as=\"li\">\n                    <Tile to={`/tldr/${uid}`} as={Link}>\n                      {cover ? (\n                        <PostCover>\n                          <Img\n                            fluid={cover.childImageSharp.fluid}\n                            alt={title}\n                          />\n                        </PostCover>\n                      ) : null}\n                      <PostHd>\n                        <h2 className=\"title\">{title}</h2>\n                        <span>\n                          <Icon name=\"arrow-right\" text=\"Read more…\" />\n                        </span>\n                      </PostHd>\n                      <PostBd>\n                        <p className=\"summary\">{summary}</p>\n                      </PostBd>\n                      <PostFt>\n                        <span>{date}</span>\n                        <span>{timeToRead} min read</span>\n                      </PostFt>\n                    </Tile>\n                  </Post>\n                );\n              })}\n            </PostList>\n          </Body>\n        </Layout>\n      </>\n    );\n  }\n}\n\nBlogListingTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired,\n    posts: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query BlogTplQuery($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n      }\n    }\n    posts: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/pages/tldr/.*post.md/\" } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          id\n          timeToRead\n          frontmatter {\n            uid\n            cover {\n              childImageSharp {\n                fluid(\n                  maxHeight: 240\n                  quality: 100\n                  traceSVG: { color: \"lightgray\" }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n            date(formatString: \"MMMM D, YYYY\")\n            summary\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\n\nimport { Copy, Tile } from \"ui/components\";\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\n\nexport default class AboutTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { frontmatter, html } = this.props.data.markdownRemark;\n    return (\n      <>\n        <Helmet {...this.props} title={frontmatter.title} />\n        <Layout {...this.props}>\n          <Header>\n            <h1 className=\"hero\">{frontmatter.heading}</h1>\n            <p className=\"para\">{frontmatter.subheading}</p>\n          </Header>\n          <Body\n            style={{\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              maxWidth: \"900px\"\n            }}\n          >\n            <Tile space=\"h\">\n              <Copy dangerouslySetInnerHTML={{ __html: html }} />\n            </Tile>\n          </Body>\n        </Layout>\n      </>\n    );\n  }\n}\n\nAboutTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query AboutTplQuery($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n      }\n    }\n  }\n`;\n","import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\nimport Img from \"gatsby-image\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Copy, Tile } from \"ui/components\";\n\nexport default class BlogPostTpl extends Component {\n  constructor(props) {\n    super(props);\n    const readingTime = Math.random() * 300;\n    if (typeof window !== \"undefined\") {\n      this.tick = this.tick.bind(this);\n      setInterval(this.tick, 3000);\n    }\n    this.state = {\n      readingTime\n    };\n  }\n\n  tick() {\n    this.setState(prevState => ({\n      readingTime: prevState.readingTime + Math.random() * 15 - 4\n    }));\n  }\n\n  render() {\n    const blogPost = this.props.data.markdownRemark;\n    const { frontmatter, html } = blogPost;\n    const { cover, date, title } = frontmatter;\n    return (\n      <>\n        <Helmet {...this.props} title={title} />\n        <Layout {...this.props}>\n          <Header>\n            <span className=\"small\">\n              Reading Time: {this.state.readingTime.toFixed(2)} seconds\n            </span>\n            <h1 className=\"hero\">{title}</h1>\n            <span className=\"small\">{date}</span>\n          </Header>\n          <Body\n            style={{\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              maxWidth: \"900px\"\n            }}\n          >\n            {cover ? (\n              <Img fluid={cover.childImageSharp.fluid} alt={title} />\n            ) : null}\n            <Tile space=\"h\">\n              <Copy dangerouslySetInnerHTML={{ __html: html }} />\n            </Tile>\n          </Body>\n        </Layout>\n      </>\n    );\n  }\n}\n\nBlogPostTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query BlogPostsByUID($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        cover {\n          childImageSharp {\n            fluid(\n              maxWidth: 800\n              quality: 90\n              traceSVG: { color: \"lightgray\" }\n            ) {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Actionbar, Action, Icon, Gallery, Tile } from \"ui/components\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst Flex = styled.div`\n  ${breakpoint.tabletUp} {\n    display: flex;\n    & div.sideA,\n    & div.sideB {\n      flex: 0 0 50%;\n    }\n    & div.sideA {\n      ${setSpace(\"prl\")};\n    }\n    & div.sideB {\n      ${setSpace(\"pll\")};\n    }\n  }\n`;\n\nconst BodyHd = styled(Flex)`\n  ${setSpace(\"mbl\")};\n  ${breakpoint.tabletUp} {\n    display: flex;\n  }\n  & div.sideB {\n    display: flex;\n  }\n  & div.time,\n  & div.code {\n    flex: 0 0 50%;\n  }\n  ${breakpoint.phone} {\n    & div.sideB {\n      ${setSpace(\"mtl\")}\n    }\n  }\n`;\n\nconst BodyBd = styled(Flex)`\n  ${setSpace(\"mvl\")};\n  a {\n    color: ${({ theme }) => theme.actionColor};\n    text-decoration: none;\n  }\n  a:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst BodyFt = styled.div`\n  ${setSpace(\"mth\")};\n  ${setType(\"s\")};\n`;\n\nconst Label = styled.h2`\n  ${setSpace(\"mbs\")};\n  ${setType(\"s\")};\n  color: ${({ theme }) => theme.dimmedColor};\n`;\n\nconst Name = styled.p`\n  ${setType(\"h\")};\n  font-weight: 800;\n  color: ${({ theme }) => theme.titleColor};\n  text-transform: uppercase;\n`;\n\nconst Tagline = styled.p`\n  ${setSpace(\"mbl\")};\n  ${setType(\"l\")};\n  font-weight: 600;\n  color: ${({ theme }) => theme.titleColor};\n`;\n\nconst Description = styled.div`\n  color: ${({ theme }) => theme.titleColor};\n  p {\n    &:not(:last-child) {\n      ${setSpace(\"mbm\")};\n    }\n  }\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    font-weight: 800;\n  }\n  a {\n    color: ${({ theme }) => theme.actionColor};\n  }\n  em {\n    font-style: italic;\n  }\n  strong {\n    color: ${({ theme }) => theme.titleColor};\n    font-weight: 800;\n  }\n  ul,\n  ol {\n    ${setType(\"s\")};\n  }\n  ul li:before {\n    ${setSpace(\"mrs\")};\n    color: ${({ theme }) => theme.color};\n    content: \"–\";\n    display: inline-block;\n  }\n  ol li {\n    list-style: decimal;\n  }\n  ${breakpoint.phone} {\n    ${setSpace(\"mbl\")};\n  }\n`;\n\nconst Meta = styled.p`\n  ${setType(\"s\")};\n  color: ${({ theme }) => theme.titleColor};\n  font-weight: 800;\n  text-transform: uppercase;\n`;\n\nconst Lists = styled.div`\n  ${setSpace(\"mtl\")};\n  ${setType(\"s\")};\n  color: ${({ theme }) => theme.titleColor};\n  display: flex;\n  & > * {\n    flex: 0 0 50%;\n  }\n  li:before {\n    ${setSpace(\"mrx\")};\n    color: ${({ theme }) => theme.dimmedColor};\n    content: \"—\";\n  }\n  i {\n    color: ${({ theme }) => theme.dimmedColor};\n  }\n`;\n\nexport default class ProjectItemTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const portfolioItem = this.props.data.markdownRemark;\n    const genericCover = this.props.data.defaultCover.edges[0].node\n      .childImageSharp;\n    const { frontmatter, html } = portfolioItem;\n    const {\n      application,\n      bifpresents,\n      cover,\n      date,\n      slides,\n      link,\n      needs,\n      code,\n      source,\n      tagline,\n      timeframe,\n      title\n    } = frontmatter;\n\n    const displayGallery = () => {\n      const images = [];\n      if (cover) {\n        images.push(cover.childImageSharp.fluid);\n      }\n      if (slides) {\n        slides.forEach(slide => images.push(slide.childImageSharp.fluid));\n      }\n      return <Gallery images={images} defaultImage={genericCover.fluid} />;\n    };\n\n    return (\n      <>\n        <Helmet {...this.props} title={title} />\n        <Layout {...this.props}>\n          <Header>\n            <span className=\"small\">BIFFUD Presents</span>\n            <h1 className=\"hero\">{bifpresents}</h1>\n            <span className=\"small\">{date}</span>\n          </Header>\n          <Body>\n            <Tile space=\"h\">\n              <BodyHd>\n                <div className=\"sideA\">\n                  <div className=\"name\">\n                    <Label>Project name</Label>\n                    <Name>{title}</Name>\n                  </div>\n                </div>\n                <div className=\"sideB\">\n                  <div className=\"time\">\n                    <Label>Timeframe</Label>\n                    <Meta>{timeframe}</Meta>\n                  </div>\n                  <div className=\"code\">\n                    <Label>Code</Label>\n                    <Meta>{code}</Meta>\n                  </div>\n                </div>\n              </BodyHd>\n              <BodyBd>\n                <div className=\"sideA\">\n                  <Label>Tagline</Label>\n                  <Tagline>{tagline}</Tagline>\n                  <Label>Description</Label>\n                  <Description dangerouslySetInnerHTML={{ __html: html }} />\n                </div>\n                <div className=\"sideB\">\n                  <Label>Proofs</Label>\n                  {displayGallery()}\n                  <Lists>\n                    {source || application ? (\n                      <div className=\"sideB\" style={{ padding: \"0\" }}>\n                        <Label>More Proofs</Label>\n                        <ul>\n                          {source ? (\n                            <li>\n                              <a href={source} target=\"_blank\">\n                                Source code\n                              </a>{\" \"}\n                              <Icon name=\"popout\" />\n                            </li>\n                          ) : null}\n                          {application ? (\n                            <li>\n                              <a href={application} target=\"_blank\">\n                                BIFFUD Application\n                              </a>{\" \"}\n                              <Icon name=\"popout\" />\n                            </li>\n                          ) : null}\n                        </ul>\n                      </div>\n                    ) : null}\n                    {Object.keys(needs).length > 0 ? (\n                      <div className=\"sideB\" style={{ padding: \"0\" }}>\n                        <Label>Needs</Label>\n                        <ul>\n                          {Object.keys(needs).map(need => {\n                            const dict = {\n                              code: \"Code\",\n                              graphic: \"Graphic Design\",\n                              money: \"Money\",\n                              users: \"Users\",\n                              uxui: \"UX / UI Design\"\n                            };\n                            if (needs[need]) {\n                              return (\n                                <li key={needs[need]}>\n                                  {need !== \"other\" ? dict[need] : needs[need]}\n                                </li>\n                              );\n                            }\n                            return null;\n                          })}\n                        </ul>\n                      </div>\n                    ) : null}\n                  </Lists>\n                </div>\n              </BodyBd>\n              <BodyFt>\n                <Actionbar>\n                  {link ? (\n                    <div>\n                      <Action button primary href={link}>\n                        Launch project\n                      </Action>\n                    </div>\n                  ) : null}\n                  <div>\n                    <Action\n                      button={!link}\n                      href=\"https://patreon.com/biffud\"\n                      primary={!link}\n                      target=\"_blank\"\n                    >\n                      Donate to support\n                    </Action>\n                  </div>\n                </Actionbar>\n              </BodyFt>\n            </Tile>\n          </Body>\n        </Layout>\n      </>\n    );\n  }\n}\n\nProjectItemTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query PortfolioItemsByUID($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        active\n        application\n        slides {\n          childImageSharp {\n            fluid(\n              maxWidth: 600\n              quality: 90\n              traceSVG: { color: \"lightgray\" }\n            ) {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n        bifpresents\n        date(formatString: \"MMM YYYY\")\n        link\n        code\n        source\n        tagline\n        timeframe\n        title\n        uid\n        needs {\n          code\n          graphic\n          money\n          uxui\n          users\n          other\n        }\n        cover {\n          childImageSharp {\n            fluid(\n              maxWidth: 600\n              quality: 90\n              traceSVG: { color: \"lightgray\" }\n            ) {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n      }\n    }\n    defaultCover: allFile(\n      filter: { relativePath: { eq: \"images/default-cover.png\" } }\n    ) {\n      edges {\n        node {\n          childImageSharp {\n            fluid(\n              maxWidth: 600\n              quality: 90\n              traceSVG: { color: \"lightgray\" }\n            ) {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nimport { setSpace } from \"ui/mixins\";\n\nconst Section = styled.div`\n  ${setSpace(\"mvk\")};\n  display: flex;\n  justify-content: center;\n  .el {\n    width: 100%;\n  }\n  &:not(:last-child) {\n    ${setSpace(\"pbk\")};\n  }\n`;\n\nexport default Section;\n","import { array, string } from \"prop-types\";\nimport Img from \"gatsby-image\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Tile } from \"ui/components\";\nimport { Header } from \"ui/partials\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport Section from \"./Section\";\n\nconst Element = styled(Section)``;\nconst Title = styled.h1`\n  &.hero {\n    ${setType(\"h\")};\n  }\n`;\nconst Items = styled.ul`\n  width: 100%;\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n    & > * {\n      grid-row-end: span 1;\n    }\n  }\n`;\nconst Item = styled.li`\n  ${breakpoint.phone} {\n    &:not(:last-child) {\n      ${setSpace(\"mbx\")};\n    }\n  }\n`;\nconst ItemTitle = styled.h3`\n  ${setSpace(\"mbm\")};\n`;\nconst ItemText = styled.div`\n  color: ${({ theme }) => theme.color};\n  strong {\n    font-weight: 600;\n  }\n`;\n\nconst Clients = props => {\n  const { clients, title, subtitle } = props;\n  return (\n    <Element as=\"section\">\n      <div className=\"el\">\n        <Header className=\"hd\">\n          <Title className=\"hero\">{title}</Title>\n          {subtitle ? <p className=\"para\">{subtitle}</p> : null}\n        </Header>\n        <Items>\n          {clients.map(({ node }) => {\n            const client = node.frontmatter;\n            return (\n              <Item key={node.uid}>\n                <Tile href={client.link} target=\"_blank\" as=\"a\">\n                  <ItemTitle>\n                    <Img\n                      fixed={client.logo.childImageSharp.fixed}\n                      alt={client.name}\n                    />\n                  </ItemTitle>\n                  <ItemText dangerouslySetInnerHTML={{ __html: node.html }} />\n                </Tile>\n              </Item>\n            );\n          })}\n        </Items>\n      </div>\n    </Element>\n  );\n};\n\nClients.propTypes = {\n  clients: array.isRequired,\n  subtitle: string.isRequired,\n  title: string.isRequired\n};\n\nexport default Clients;\n","import { array, string } from \"prop-types\";\nimport { Link } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { breakpoint } from \"ui/settings\";\nimport { Header } from \"ui/partials\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport { Tile, Icon } from \"ui/components\";\nimport Section from \"./Section\";\n\nconst Element = styled(Section)``;\nconst Title = styled.h1`\n  &.hero {\n    ${setType(\"h\")};\n  }\n`;\nconst Items = styled.ul`\n  width: 100%;\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fill, minmax(214px, 1fr));\n    margin-left: auto;\n    margin-right: auto;\n  }\n  ${breakpoint.desktopUp} {\n    grid-template-columns: repeat(auto-fill, minmax(291px, 1fr));\n  }\n`;\nconst Item = styled.li`\n  ${breakpoint.phone} {\n    &:not(:last-child) {\n      ${setSpace(\"mbx\")};\n    }\n  }\n`;\nconst ItemImage = styled.div`\n  ${setSpace(\"mbm\")};\n  border: 2px solid ${({ theme }) => theme.actionColor};\n  position: relative;\n  ${({ hasPlaceholder, theme }) =>\n    hasPlaceholder\n      ? `\n    .thinking {\n      color: ${theme.actionColor};\n      display: inline-block;\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%);\n      i {\n        font-size: 80px !important;\n      }\n  `\n      : ``};\n`;\nconst ItemTitle = styled.div`\n  align-items: flex-start;\n  display: flex;\n  justify-content: space-between;\n  h3,\n  span {\n    ${setType(\"m\")};\n    color: ${({ theme }) => theme.actionColor};\n    font-weight: 800;\n    text-transform: uppercase;\n  }\n  h3 {\n    max-width: 75%;\n  }\n  span {\n    display: none;\n  }\n  ${breakpoint.desktopUp} {\n    span {\n      display: inline-block;\n    }\n  }\n`;\nconst ItemText = styled.p`\n  ${setSpace(\"mts\")};\n`;\n\nconst Projects = props => {\n  const { projects, title, subtitle } = props;\n  return (\n    <Element as=\"section\">\n      <div className=\"el\">\n        <Header className=\"hd\">\n          <Title className=\"hero\">{title}</Title>\n          {subtitle ? <p className=\"para\">{subtitle}</p> : null}\n        </Header>\n        <Items>\n          {projects.map(({ node }) => {\n            const project = node.frontmatter;\n            return (\n              <Item key={node.uid}>\n                <Tile as={Link} to={`/projects/${project.uid}`}>\n                  <ItemImage hasPlaceholder={!project.cover}>\n                    <Img\n                      fluid={\n                        project.cover\n                          ? project.cover.childImageSharp.fluid\n                          : props.placeholder\n                      }\n                      alt={project.title}\n                    />\n                    {!project.cover ? (\n                      <span className=\"thinking\">\n                        <Icon name=\"thinking\" />\n                      </span>\n                    ) : null}\n                  </ItemImage>\n                  <ItemTitle>\n                    <h3 className=\"title\">{project.title}</h3>\n                    <span>\n                      <Icon name=\"arrow-right\" text=\"Read more…\" />\n                    </span>\n                  </ItemTitle>\n                  <ItemText>{project.tagline}</ItemText>\n                </Tile>\n              </Item>\n            );\n          })}\n        </Items>\n      </div>\n    </Element>\n  );\n};\n\nProjects.propTypes = {\n  projects: array.isRequired,\n  subtitle: string.isRequired,\n  title: string.isRequired\n};\n\nexport default Projects;\n","import { array, string } from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { breakpoint } from \"ui/settings\";\nimport { Header } from \"ui/partials\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport { Tile } from \"ui/components\";\nimport Section from \"./Section\";\n\nconst Element = styled(Section)``;\nconst Title = styled.h1`\n  &.hero {\n    ${setType(\"h\")};\n  }\n`;\nconst Items = styled.ul`\n  width: 100%;\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 10px;\n    grid-template-columns: repeat(auto-fill, minmax(330px, 1fr));\n    & > * {\n      grid-row-end: span 1;\n    }\n  }\n  ${breakpoint.desktopUp} {\n    grid-template-columns: repeat(auto-fill, minmax(221px, 1fr));\n  }\n`;\nconst Item = styled.li`\n  ${breakpoint.phone} {\n    &:not(:last-child) {\n      ${setSpace(\"mbx\")};\n    }\n  }\n`;\nconst ItemTitle = styled.h3`\n  ${setSpace(\"mbm\")};\n  ${setType(\"l\")};\n  font-weight: 800;\n`;\n\nconst Services = props => {\n  const { services, title, subtitle } = props;\n  return (\n    <Element as=\"section\">\n      <div className=\"el\">\n        <Header className=\"hd\">\n          <Title className=\"hero\">{title}</Title>\n          {subtitle ? <p className=\"para\">{subtitle}</p> : null}\n        </Header>\n        <Items>\n          {services.map((service, i) => (\n            <Item key={i}>\n              <Tile space=\"l\">\n                <ItemTitle className=\"TileTitle\">{service.title}</ItemTitle>\n                <p>{service.text}</p>\n              </Tile>\n            </Item>\n          ))}\n        </Items>\n      </div>\n    </Element>\n  );\n};\n\nServices.propTypes = {\n  services: array.isRequired,\n  subtitle: string.isRequired,\n  title: string.isRequired\n};\n\nexport default Services;\n","import { array, string } from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Tile } from \"ui/components\";\nimport { Header } from \"ui/partials\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport Section from \"./Section\";\n\nconst Element = styled(Section)``;\nconst Title = styled.h1`\n  &.hero {\n    ${setType(\"h\")};\n  }\n`;\nconst Items = styled.ul`\n  width: 100%;\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n    & > * {\n      grid-row-end: span 1;\n    }\n  }\n`;\nconst Item = styled.li`\n  height: 100%;\n  .quote {\n    ${setSpace(\"mbs\")};\n    ${setSpace(\"pal\")};\n    position: relative;\n    &:after,\n    &:before {\n      color: ${({ theme }) => theme.background};\n      ${setType(\"k\")};\n      position: absolute;\n    }\n    &:before {\n      content: \"“\";\n      top: 0;\n      left: 0;\n    }\n    &:after {\n      content: \"”\";\n      bottom: 0;\n      right: 0;\n    }\n  }\n  .source {\n    ${setType(\"s\")};\n    text-align: right;\n  }\n  ${breakpoint.phone} {\n    &:not(:last-child) {\n      ${setSpace(\"mbx\")};\n    }\n  }\n  ${({ span }) =>\n    span\n      ? `\n    grid-column: 1 / span 2;\n    grid-row: 1 / 2;\n    justify-self: stretch;\n    align-self: stretch;\n  `\n      : ``};\n`;\n\nconst Testimonials = props => {\n  const { testimonials, title, subtitle } = props;\n  return (\n    <Element as=\"section\">\n      <div className=\"el\">\n        <Header className=\"hd\">\n          <Title className=\"hero\">{title}</Title>\n          {subtitle ? <p className=\"para\">{subtitle}</p> : null}\n        </Header>\n        <Items>\n          {testimonials.map((testimonial, i) => (\n            <Item key={i} span={testimonial.span}>\n              <Tile>\n                <blockquote className=\"quote\">\n                  <p>{testimonial.text}</p>\n                </blockquote>\n                <p className=\"source\">— {testimonial.source}</p>\n              </Tile>\n            </Item>\n          ))}\n        </Items>\n      </div>\n    </Element>\n  );\n};\n\nTestimonials.propTypes = {\n  testimonials: array.isRequired,\n  subtitle: string.isRequired,\n  title: string.isRequired\n};\n\nexport default Testimonials;\n","import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\n\nimport { Action, Actionbar } from \"ui/components\";\nimport { Helmet, Layout, Pitch } from \"ui/partials\";\n\nimport Clients from \"./ofHome/Clients\";\nimport Projects from \"./ofHome/Projects\";\nimport Services from \"./ofHome/Services\";\nimport Testimonials from \"./ofHome/Testimonials\";\n\nexport default class HomeTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { frontmatter } = this.props.data.markdownRemark;\n    const { clients, projects, defaultCover } = this.props.data;\n    const genericCover = defaultCover.edges[0].node.childImageSharp;\n    return (\n      <>\n        <Helmet {...this.props} title={frontmatter.title} />\n        <Layout {...this.props}>\n          <Pitch>\n            <h1 className=\"hero\">{frontmatter.heading}</h1>\n            <Actionbar>\n              <Action button href=\"https://github.com/BadIdeaFactory/corporate/issues?q=is%3Aissue+is%3Aopen+label%3A%22project+application%22\" target=\"_blank\">\n                Submit an idea\n              </Action>\n              <Action href=\"https://patreon.com/biffud\" target=\"_blank\">Give us money</Action>\n              <span className=\"join\">or</span>\n              <Action to=\"contact\">Engage our services</Action>\n            </Actionbar>\n          </Pitch>\n          <Projects\n            placeholder={genericCover.fluid}\n            projects={projects.edges}\n            subtitle={frontmatter.projectsSubtitle}\n            title={frontmatter.projectsTitle}\n          />\n          <Clients\n            title={frontmatter.clientsTitle}\n            subtitle={frontmatter.clientsSubtitle}\n            clients={clients.edges}\n          />\n          <Services\n            title={frontmatter.servicesTitle}\n            subtitle={frontmatter.servicesSubtitle}\n            services={frontmatter.services}\n          />\n          <Services\n            title={frontmatter.goodatTitle}\n            subtitle={frontmatter.goodatSubtitle}\n            services={frontmatter.goodat}\n          />\n          <Testimonials\n            title={frontmatter.testimonialsTitle}\n            subtitle={frontmatter.testimonialsSubtitle}\n            testimonials={frontmatter.testimonials}\n          />\n        </Layout>\n      </>\n    );\n  }\n}\n\nHomeTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query HomeTplQuery($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        contactCta\n        projectsCta\n        servicesTitle\n        servicesSubtitle\n        services {\n          title\n          text\n        }\n        testimonialsTitle\n        testimonialsSubtitle\n        testimonials {\n          text\n          source\n          span\n        }\n        goodatTitle\n        goodatSubtitle\n        goodat {\n          title\n          text\n        }\n        clientsSubtitle\n        clientsTitle\n        projectsSubtitle\n        projectsTitle\n      }\n    }\n    defaultCover: allFile(\n      filter: { relativePath: { eq: \"images/default-cover.png\" } }\n    ) {\n      edges {\n        node {\n          childImageSharp {\n            fluid(\n              maxWidth: 800\n              maxHeight: 600\n              quality: 90\n              cropFocus: CENTER\n              traceSVG: { color: \"lightgray\" }\n            ) {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n      }\n    }\n    clients: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/pages/clients/.*client.md/\" } }\n      sort: { order: DESC, fields: [frontmatter___score] }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            uid\n            name\n            score\n            link\n            logo {\n              childImageSharp {\n                fixed(\n                  height: 40\n                  quality: 80\n                  traceSVG: { color: \"lightgray\" }\n                ) {\n                  ...GatsbyImageSharpFixed_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    projects: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/pages/projects/.*project.md/\" } }\n      limit: 3\n      sort: {\n        order: DESC\n        fields: [frontmatter___feature, frontmatter___score, frontmatter___date]\n      }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            uid\n            title\n            active\n            feature\n            tagline\n            code\n            cover {\n              childImageSharp {\n                fluid(\n                  maxWidth: 800\n                  cropFocus: CENTER\n                  maxHeight: 600\n                  quality: 90\n                  traceSVG: { color: \"lightgray\" }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import { func, object, shape } from \"prop-types\";\nimport Img from \"gatsby-image\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Action, Icon } from \"ui/components\";\nimport { breakpoint, time } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst Person = styled.li`\n  align-items: center;\n  background: white;\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  transition: box-shadow ${time.s}, transform ${time.s};\n  &:hover {\n    box-shadow: 6px 6px 0 0 ${({ theme }) => theme.actionDecor};\n    transform: translate(-1px, -1px);\n  }\n  ${breakpoint.tabletUp} {\n    ${setSpace(\"pan\")};\n    );\n  }\n`;\n\nconst PersonPic = styled.div`\n  background: ${({ theme, avatar }) => (avatar ? \"\" : theme.actionColor)};\n  border: 2px solid ${({ theme }) => theme.background};\n  flex: 0 0 ${100 / 3}%;\n`;\n\nconst PersonDetails = styled.div`\n  ${setSpace(\"phm\")};\n  ${setType(\"s\")};\n  ${breakpoint.phone} {\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n  }\n`;\n\nconst PersonName = styled.h3`\n  ${setType(\"s\")};\n  color: ${({ theme }) => theme.color};\n  span {\n    display: block;\n    &:first-child {\n      ${setType(\"m\")};\n      color: ${({ theme }) => theme.actionColor};\n      font-weight: 800;\n    }\n  }\n`;\n\nconst PersonLinks = styled.div`\n  ${setSpace(\"mts\")};\n  & > * {\n    ${setSpace(\"mrs\")};\n    line-height: 1em;\n  }\n  ${breakpoint.phone} {\n    display: none;\n  }\n`;\n\nconst Member = props => {\n  const { defaultAvatar } = props;\n  const { frontmatter } = props.data;\n  const { avatar, fname, github, lname, twitter } = frontmatter;\n  return (\n    <Person onClick={props.toggleModal} role=\"button\">\n      <PersonPic hasAvatar={avatar}>\n        <Img\n          fluid={avatar ? avatar.childImageSharp.fluid : defaultAvatar.fluid}\n        />\n      </PersonPic>\n      <PersonDetails>\n        <PersonName>\n          <span>{fname}</span> <span>{lname}</span>\n        </PersonName>\n        <PersonLinks>\n          {twitter ? (\n            <Action\n              onClick={e => e.stopPropagation()}\n              href={`https://twitter.com/${twitter}`}\n              rel=\"external\"\n              target=\"_blank noreferrer nofollow\"\n            >\n              <Icon name=\"twitter\" size=\"s\" />\n            </Action>\n          ) : null}\n          {github ? (\n            <Action\n              onClick={e => e.stopPropagation()}\n              href={`https://github.com/${github}`}\n              rel=\"external\"\n              target=\"_blank noreferrer nofollow\"\n            >\n              <Icon name=\"github\" size=\"s\" />\n            </Action>\n          ) : null}\n        </PersonLinks>\n      </PersonDetails>\n    </Person>\n  );\n};\n\nMember.propTypes = {\n  defaultAvatar: object.isRequired,\n  data: shape({\n    frontmatter: object.isRequired\n  }).isRequired,\n  toggleModal: func.isRequired\n};\n\nMember.defaultProps = {};\n\nexport default Member;\n","import { func, object, shape } from \"prop-types\";\nimport Img from \"gatsby-image\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Action, Copy, Icon, Modal } from \"ui/components\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst Person = styled.div`\n  ${setSpace(\"pbh\")};\n  ${breakpoint.tabletUp} {\n    display: flex;\n    flex-direction: row;\n  }\n`;\nconst PersonPic = styled.div`\n  background: ${({ hasAvatar, theme }) =>\n    !hasAvatar ? theme.actionColor : \"\"};\n  ${breakpoint.tabletUp} {\n    flex: 0 0 ${100 / 4}%;\n  }\n  ${breakpoint.phone} {\n    ${setSpace(\"mbl\")};\n    & > * {\n      margin-left: auto;\n      margin-right: auto;\n      max-width: 200px;\n    }\n  }\n`;\nconst PersonDetails = styled.div`\n  ${setType(\"s\")};\n  ${breakpoint.tabletUp} {\n    ${setSpace(\"pll\")};\n  }\n`;\nconst PersonName = styled.h2`\n  ${setType(\"l\")};\n  font-weight: 800;\n  color: ${({ theme }) => theme.titleColor};\n`;\nconst PersonBio = styled.div`\n  ${setSpace(\"mvm\")};\n  ${setType(\"m\")};\n  color: ${({ theme }) => theme.titleColor};\n`;\nconst PersonQuote = styled.div`\n  ${setSpace(\"mvm\")};\n`;\nconst PersonSocial = styled.div`\n  & > *:not(:first-child) {\n    ${setSpace(\"mlm\")};\n  }\n  & > *:not(:last-child) {\n    ${setSpace(\"mrm\")};\n  }\n`;\n\nconst Member = props => {\n  const { defaultAvatar } = props;\n  const { frontmatter, html } = props.data;\n  const { avatar, fname, github, lname, quote, twitter } = frontmatter;\n  return (\n    <Modal toggleModal={props.toggleModal}>\n      <Person>\n        <PersonPic hasAvatar={avatar}>\n          <Img\n            fluid={avatar ? avatar.childImageSharp.fluid : defaultAvatar.fluid}\n          />\n        </PersonPic>\n        <PersonDetails>\n          <PersonName>\n            {fname} {lname}\n          </PersonName>\n          <PersonBio>\n            <Copy dangerouslySetInnerHTML={{ __html: html }} />\n          </PersonBio>\n          <PersonQuote>{quote}</PersonQuote>\n          <PersonSocial>\n            <Action href={`https://github.com/${github}`} target=\"_blank\">\n              <Icon name=\"github\" /> Github\n            </Action>\n            <Action href={`https://twitter.com/${twitter}`} target=\"_blank\">\n              <Icon name=\"twitter\" /> Twitter\n            </Action>\n          </PersonSocial>\n        </PersonDetails>\n      </Person>\n    </Modal>\n  );\n};\n\nMember.propTypes = {\n  defaultAvatar: object.isRequired,\n  data: shape({\n    frontmatter: object.isRequired\n  }).isRequired,\n  toggleModal: func.isRequired\n};\n\nMember.defaultProps = {};\n\nexport default Member;\n","import { object, shape } from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { breakpoint, time, track } from \"ui/settings\";\nimport { fadeIn } from \"ui/animations\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport Person from \"./ofPeople/Person\";\nimport PersonModal from \"./ofPeople/PersonModal\";\n\nconst PeopleSection = styled.section`\n  ${setSpace(\"mbk\")};\n`;\n\nconst People = styled.ul`\n  animation: ${fadeIn} ${time.l} linear;\n  width: 100%;\n  display: grid;\n  grid-gap: 10px;\n  ${breakpoint.phone} {\n    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n  }\n  ${breakpoint.tabletUp} {\n    grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));\n  }\n`;\n\nconst PeopleIntro = styled.div`\n  ${setSpace(\"mbh\")};\n  text-align: center;\n  h2 {\n    ${setSpace(\"mbm\")};\n    ${setSpace(\"phs\")};\n    ${setSpace(\"pvx\")};\n    ${setType(\"s\")};\n    background: white;\n    color: ${({ theme }) => theme.actionColor};\n    display: inline-block;\n    font-weight: 800;\n    letter-spacing: ${track.m};\n    text-transform: uppercase;\n  }\n  p {\n    ${setType(\"l\")};\n    color: white;\n  }\n`;\n\nexport default class PeopleTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPerson: null\n    };\n    this.handleShowPerson = this.handleShowPerson.bind(this);\n  }\n\n  handleShowPerson(obj) {\n    this.setState(prevState => ({\n      currentPerson: prevState.currentPerson ? null : obj\n    }));\n  }\n\n  render() {\n    const { currentPerson } = this.state;\n    const { defaultAvatar, overlords, members, accomplices } = this.props.data;\n    const { frontmatter } = this.props.data.markdownRemark;\n    const genericAvatar = defaultAvatar.edges[0].node.childImageSharp;\n    return (\n      <>\n        <Helmet {...this.props} title={frontmatter.title} />\n        <Layout {...this.props}>\n          <Header>\n            <h1 className=\"hero\">{frontmatter.heading}</h1>\n            <p className=\"para\">{frontmatter.subheading}</p>\n          </Header>\n          <Body>\n            <PeopleSection>\n              <PeopleIntro>\n                <h2>{frontmatter.overlordsHeading}</h2>\n                <p>{frontmatter.overlordsDescr}</p>\n              </PeopleIntro>\n              <People>\n                {overlords.edges.map(({ node }) => (\n                  <Person\n                    data={node}\n                    defaultAvatar={genericAvatar}\n                    key={node.frontmatter.uid}\n                    toggleModal={e => this.handleShowPerson(node, e)}\n                  />\n                ))}\n              </People>\n            </PeopleSection>\n            <PeopleIntro>\n              <h2>{frontmatter.membersHeading}</h2>\n              <p>{frontmatter.membersDescr}</p>\n            </PeopleIntro>\n            <PeopleSection>\n              <People>\n                {members.edges.map(({ node }) => (\n                  <Person\n                    data={node}\n                    defaultAvatar={genericAvatar}\n                    key={node.frontmatter.uid}\n                    toggleModal={e => this.handleShowPerson(node, e)}\n                  />\n                ))}\n              </People>\n            </PeopleSection>\n            <PeopleSection>\n              <PeopleIntro>\n                <h2>{frontmatter.accomplicesHeading}</h2>\n                <p>{frontmatter.accomplicesDescr}</p>\n              </PeopleIntro>\n              <People>\n                {accomplices.edges.map(({ node }) => (\n                  <Person\n                    data={node}\n                    defaultAvatar={genericAvatar}\n                    key={node.frontmatter.uid}\n                    toggleModal={e => this.handleShowPerson(node, e)}\n                  />\n                ))}\n              </People>\n            </PeopleSection>\n          </Body>\n          {currentPerson !== null ? (\n            <PersonModal\n              toggleModal={this.handleShowPerson}\n              data={currentPerson}\n              defaultAvatar={genericAvatar}\n            />\n          ) : null}\n        </Layout>\n      </>\n    );\n  }\n}\n\nPeopleTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired,\n    overlords: object.isRequired,\n    members: object.isRequired,\n    accomplices: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query PeopleTplQuery($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n        accomplicesHeading\n        accomplicesDescr\n        membersHeading\n        membersDescr\n        overlordsHeading\n        overlordsDescr\n      }\n    }\n    defaultAvatar: allFile(\n      filter: { relativePath: { eq: \"images/default-avatar.png\" } }\n    ) {\n      edges {\n        node {\n          childImageSharp {\n            fluid(\n              maxWidth: 240\n              maxHeight: 300\n              quality: 90\n              traceSVG: { color: \"lightgray\" }\n            ) {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n      }\n    }\n    overlords: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//pages/people/bios/*/.*/*.md/\" }\n        frontmatter: { role: { elemMatch: { overlord: { eq: true } } } }\n      }\n      sort: { order: DESC, fields: [frontmatter___score] }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            fname\n            github\n            lname\n            quote\n            score\n            twitter\n            uid\n            avatar {\n              childImageSharp {\n                fluid(\n                  maxWidth: 240\n                  maxHeight: 300\n                  cropFocus: CENTER\n                  traceSVG: {\n                    color: \"#ffffff\"\n                    optTolerance: 0.1\n                    turdSize: 10\n                    turnPolicy: TURNPOLICY_MINORITY\n                  }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    members: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//pages/people/bios/*/.*/*.md/\" }\n        frontmatter: { role: { elemMatch: { member: { eq: true } } } }\n      }\n      sort: { order: DESC, fields: [frontmatter___score] }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            fname\n            github\n            lname\n            quote\n            score\n            twitter\n            uid\n            avatar {\n              childImageSharp {\n                fluid(\n                  maxWidth: 240\n                  maxHeight: 300\n                  cropFocus: CENTER\n                  traceSVG: {\n                    color: \"#ffffff\"\n                    optTolerance: 0.1\n                    turdSize: 10\n                    turnPolicy: TURNPOLICY_MINORITY\n                  }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    accomplices: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//pages/people/bios/*/.*/*.md/\" }\n        frontmatter: { role: { elemMatch: { accomplice: { eq: true } } } }\n      }\n      sort: { order: DESC, fields: [frontmatter___score, frontmatter___lname] }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            fname\n            github\n            lname\n            quote\n            score\n            twitter\n            uid\n            avatar {\n              childImageSharp {\n                fluid(\n                  maxWidth: 240\n                  maxHeight: 300\n                  cropFocus: CENTER\n                  traceSVG: {\n                    color: \"#ffffff\"\n                    optTolerance: 0.1\n                    turdSize: 10\n                    turnPolicy: TURNPOLICY_MINORITY\n                  }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { scatteredBif1, scatteredBif2, scatteredBif3 } from \"assets/images\";\nimport { color, font } from \"ui/settings\";\nimport { setType } from \"ui/mixins\";\n\nconst Sample = styled.div`\n  font-family: ${font.sans};\n  overflow: hidden;\n  position: relative;\n  h1,\n  p,\n  span {\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n    max-width: 1000px;\n  }\n  .PlxEl {\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    bottom: 0;\n    left: 0;\n    position: absolute;\n    right: 0;\n    top: 0;\n  }\n  .PlxEl1 {\n    background-image: url(${scatteredBif1});\n  }\n  .PlxEl2 {\n    background-image: url(${scatteredBif2});\n  }\n  .PlxEl3 {\n    background-image: url(${scatteredBif3});\n  }\n  h1 {\n    ${setType(\"h\")};\n    font-weight: 800;\n    font-style: italic;\n  }\n  span {\n    position: relative;\n    z-index: 100;\n    ${setType(\"s\")};\n  }\n  p {\n    ${setType(\"m\")};\n  }\n`;\n\nexport default class Playground extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { hexArray } = color;\n    return (\n      <>\n        {hexArray.map((color, i) => (\n          <Sample\n            key={i}\n            style={{\n              background: color,\n              color: \"white\",\n              padding: \"100px\",\n              fontWeight: \"bold\"\n            }}\n          >\n            <div className=\"PlxEl PlxEl1\" />\n            <div className=\"PlxEl PlxEl2\" />\n            <div className=\"PlxEl PlxEl3\" />\n            <span>{color}</span>\n            <h1>\n              Bad Idea Factory is a collective of chaotic creatives using\n              technology to make people thinking face emoji. We have been\n              working in this space for hundreds of thousands of years.\n            </h1>\n            <p>\n              Bad Idea Factory is a collective of chaotic creatives using\n              technology to make people thinking face emoji. We have been\n              working in this space for hundreds of thousands of years.\n            </p>\n          </Sample>\n        ))}\n      </>\n    );\n  }\n}\n\nPlayground.propTypes = {};\n","import React from \"react\";\n\nimport { Playground } from \"ui/templates\";\n\nexport default props => <Playground {...props} />;\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","'use strict';\n// B.2.3.6 String.prototype.fixed()\nrequire('./_string-html')('fixed', function (createHTML) {\n  return function fixed() {\n    return createHTML(this, 'tt', '', '');\n  };\n});\n"],"sourceRoot":""}