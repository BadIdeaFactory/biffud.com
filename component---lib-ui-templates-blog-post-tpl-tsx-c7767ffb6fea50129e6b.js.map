{"version":3,"file":"component---lib-ui-templates-blog-post-tpl-tsx-c7767ffb6fea50129e6b.js","mappings":"gKAOA,MAAMA,EAAoBA,KACxB,MAAM,EAACC,EAAW,EAAEC,IAAkBC,EAAAA,EAAAA,UAAiC,IAAhBC,KAAKC,UAE5D,SAASC,IACPJ,GAAgBK,GAAaA,EAA2B,GAAhBH,KAAKC,SAAgB,GAC/D,CAeA,OAbAG,EAAAA,EAAAA,YAAU,KACR,IAAIC,EAKJ,MAJsB,oBAAXC,SACTD,EAAQC,OAAOC,YAAYL,EAAM,MAG5B,KACiB,oBAAXI,QACTA,OAAOE,cAAcH,EACvB,CACD,GACA,IAEII,EAAAA,cAAA,YAAOZ,EAAYa,QAAQ,GAAU,EA4C9C,UAzCoBC,IAG0B,IAAAC,EAAA,IAHzB,KACnBC,KACGC,GACoCH,EACvC,MAAMI,EAAWF,EAAKG,gBAChB,YAAEC,EAAW,KAAEC,GAASH,QAAAA,EAAY,CAAC,GACrC,MAAEI,EAAK,KAAEC,EAAI,MAAEC,GAAUJ,QAAAA,EAAe,CAAC,EAE/C,OACER,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACa,EAAAA,GAAMC,OAAAC,OAAA,GAAKV,EAAK,CAAEO,MAAOA,QAAAA,EAAS,MACnCZ,EAAAA,cAACgB,EAAAA,GAAWX,EACVL,EAAAA,cAACiB,EAAAA,GAAM,KACLjB,EAAAA,cAAA,QAAMkB,UAAU,SAAQ,iBACRlB,EAAAA,cAACb,EAAiB,MAAG,YAErCa,EAAAA,cAAA,MAAIkB,UAAU,QAAQN,GACtBZ,EAAAA,cAAA,QAAMkB,UAAU,SAASP,IAE3BX,EAAAA,cAACmB,EAAAA,GAAI,CACHC,MAAO,CACLC,WAAY,OACZC,YAAa,OACbC,SAAU,UAGXb,SAAsB,QAAjBP,EAALO,EAAOc,uBAAe,IAAArB,GAAtBA,EAAwBsB,gBACvBzB,EAAAA,cAAC0B,EAAAA,EAAW,CACVC,MAAOjB,EAAMc,gBAAgBC,gBAC7BG,IAAKhB,QAAAA,EAAS,KAEd,KACJZ,EAAAA,cAAC6B,EAAAA,GAAI,CAACC,MAAM,KACV9B,EAAAA,cAAC+B,EAAAA,GAAI,CAACC,wBAAyB,CAAEC,OAAQxB,QAAAA,EAAQ,SAItD,C","sources":["webpack://biffud.com/./lib/ui/templates/BlogPostTpl.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { graphql, type PageProps } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Copy, Tile } from \"ui/components\";\n\nconst BlogPostReadTimer = () => {\n  const [readingTime, setReadingTime] = useState<number>(Math.random() * 300);\n\n  function tick() {\n    setReadingTime((previous) => previous + Math.random() * 15 - 4);\n  }\n\n  useEffect(() => {\n    let timer: number;\n    if (typeof window !== \"undefined\") {\n      timer = window.setInterval(tick, 3000);\n    }\n\n    return () => {\n      if (typeof window !== \"undefined\") {\n        window.clearInterval(timer);\n      }\n    };\n  }, []);\n\n  return <span>{readingTime.toFixed(2)}</span>;\n};\n\nconst BlogPostTpl = ({\n  data,\n  ...props\n}: PageProps<Queries.BlogPostsByUIDQuery>) => {\n  const blogPost = data.markdownRemark;\n  const { frontmatter, html } = blogPost ?? {};\n  const { cover, date, title } = frontmatter ?? {};\n\n  return (\n    <>\n      <Helmet {...props} title={title ?? \"\"} />\n      <Layout {...props}>\n        <Header>\n          <span className=\"small\">\n            Reading Time: <BlogPostReadTimer /> seconds\n          </span>\n          <h1 className=\"hero\">{title}</h1>\n          <span className=\"small\">{date}</span>\n        </Header>\n        <Body\n          style={{\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            maxWidth: \"900px\",\n          }}\n        >\n          {cover?.childImageSharp?.gatsbyImageData ? (\n            <GatsbyImage\n              image={cover.childImageSharp.gatsbyImageData}\n              alt={title ?? \"\"}\n            />\n          ) : null}\n          <Tile space=\"h\">\n            <Copy dangerouslySetInnerHTML={{ __html: html ?? \"\" }} />\n          </Tile>\n        </Body>\n      </Layout>\n    </>\n  );\n};\n\nexport default BlogPostTpl;\n\nexport const pageQuery = graphql`\n  query BlogPostsByUID($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        cover {\n          childImageSharp {\n            gatsbyImageData(\n              width: 900\n              quality: 90\n              placeholder: DOMINANT_COLOR\n              layout: CONSTRAINED\n            )\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["BlogPostReadTimer","readingTime","setReadingTime","useState","Math","random","tick","previous","useEffect","timer","window","setInterval","clearInterval","React","toFixed","_ref","_cover$childImageShar","data","props","blogPost","markdownRemark","frontmatter","html","cover","date","title","Helmet","Object","assign","Layout","Header","className","Body","style","marginLeft","marginRight","maxWidth","childImageSharp","gatsbyImageData","GatsbyImage","image","alt","Tile","space","Copy","dangerouslySetInnerHTML","__html"],"sourceRoot":""}