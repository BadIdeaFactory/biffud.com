{"version":3,"sources":["webpack:///./lib/ui/templates/MediaTpl.js"],"names":["MentionsList","styled","ol","withConfig","displayName","componentId","breakpoint","tabletUp","Mention","Tile","setType","phone","setSpace","_ref","highlight","MentionCover","div","_ref2","theme","actionColor","MentionHd","_ref3","MentionBd","_ref4","titleColor","Copy","MediaTpl","props","_this","_Component","call","this","state","render","mentions","data","frontmatter","markdownRemark","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","Fragment","ui_partials__WEBPACK_IMPORTED_MODULE_8__","Object","assign","title","className","heading","subheading","edges","map","_ref5","node","html","_node$frontmatter","cover","publication","source","as","ui_components__WEBPACK_IMPORTED_MODULE_9__","href","target","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","fluid","childImageSharp","alt","name","text","dangerouslySetInnerHTML","__html","Component","propTypes","shape","object","isRequired","pageQuery"],"mappings":"gSAWMA,EAAeC,IAAOC,GAAVC,WAAA,CAAAC,YAAA,yBAAAC,YAAA,YAAGJ,CAAH,kIACdK,IAAWC,UASTC,EAAUP,YAAOQ,KAAVN,WAAA,CAAAC,YAAA,oBAAAC,YAAA,YAAGJ,CAAH,4DACTS,YAAQ,KAGRJ,IAAWK,MACTC,YAAS,OAEX,SAAAC,GAAA,OAAAA,EAAGC,UACM,sHAUPC,EAAed,IAAOe,IAAVb,WAAA,CAAAC,YAAA,yBAAAC,YAAA,YAAGJ,CAAH,4CACdW,YAAS,OACS,SAAAK,GAAA,OAAAA,EAAGC,MAAkBC,cAIrCC,EAAYnB,IAAOe,IAAVb,WAAA,CAAAC,YAAA,sBAAAC,YAAA,YAAGJ,CAAH,8GAMTS,YAAQ,KACD,SAAAW,GAAA,OAAAA,EAAGH,MAAkBC,cAK5BG,EAAYrB,IAAOe,IAAVb,WAAA,CAAAC,YAAA,sBAAAC,YAAA,YAAGJ,CAAH,4BACXW,YAAS,OACF,SAAAW,GAAA,OAAAA,EAAGL,MAAkBM,YAC5BC,IACEb,YAAS,QAIMc,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKC,MAAQ,GAFIJ,8BAKnBK,kBAAS,IACCC,EAAaH,KAAKJ,MAAMQ,KAAxBD,SACAE,EAAgBL,KAAKJ,MAAMQ,KAAKE,eAAhCD,YACR,OACEE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAADC,OAAAC,OAAA,GAAYb,KAAKJ,MAAjB,CAAwBkB,MAAOT,EAAYS,SAC3CP,EAAAC,EAAAC,cAACE,EAAA,EAAWX,KAAKJ,MACfW,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,MAAIM,UAAU,QAAQV,EAAYW,SAClCT,EAAAC,EAAAC,cAAA,KAAGM,UAAU,QAAQV,EAAYY,aAEnCV,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACxC,EAAD,KACGkC,EAASe,MAAMC,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACbC,EAASD,EAATC,KADwBC,EAQ5BF,EAAKhB,YALPmB,EAH8BD,EAG9BC,MACAC,EAJ8BF,EAI9BE,YACAC,EAL8BH,EAK9BG,OACA3C,EAN8BwC,EAM9BxC,UACA+B,EAP8BS,EAO9BT,MAEF,OACEP,EAAAC,EAAAC,cAAChC,EAAD,CAASkD,GAAG,KAAK5C,UAAWA,GAC1BwB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAMC,KAAMH,EAAQI,OAAO,SAASH,GAAG,KACpCH,EACCjB,EAAAC,EAAAC,cAACzB,EAAD,KACEuB,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,CACEwB,MAAOR,EAAMS,gBAAgBD,MAC7BE,IAAKpB,KAGP,KACJP,EAAAC,EAAAC,cAACpB,EAAD,KACEkB,EAAAC,EAAAC,cAAA,MAAIM,UAAU,SAASD,GACvBP,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAMO,KAAK,SAASC,KAAK,wBAG7B7B,EAAAC,EAAAC,cAAClB,EAAD,KACG+B,EACCf,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAMS,wBAAyB,CAAEC,OAAQhB,MAEzC,KACJf,EAAAC,EAAAC,cAAA,eAAOgB,gBAnDOc,aAiEtC5C,EAAS6C,UAAY,CACnBpC,KAAMqC,gBAAM,CACVnC,eAAgBoC,SAAOC,WACvBxC,SAAUuC,SAAOC,aAChBA,YAGE,IAAMC,EAAS","file":"component---lib-ui-templates-media-tpl-js-999944a175baafd77849.js","sourcesContent":["import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport Img from \"gatsby-image\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Copy, Icon, Tile } from \"ui/components\";\n\nconst MentionsList = styled.ol`\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nconst Mention = styled(Tile)`\n  ${setType(\"m\")};\n  grid-row-end: span 1;\n  position: relative;\n  ${breakpoint.phone} {\n    ${setSpace(\"mbl\")};\n  }\n  ${({ highlight }) =>\n    highlight\n      ? `\n    grid-column: 1 / span 2;\n    grid-row: 1 / 2;\n    justify-self: stretch;\n    align-self: stretch;\n  `\n      : ``};\n`;\n\nconst MentionCover = styled.div`\n  ${setSpace(\"mbm\")};\n  border: 2px solid ${({ theme }) => theme.actionColor};\n  display: block;\n`;\n\nconst MentionHd = styled.div`\n  align-items: flex-start;\n  display: flex;\n  justify-content: space-between;\n  h2,\n  span {\n    ${setType(\"l\")};\n    color: ${({ theme }) => theme.actionColor};\n    font-weight: 800;\n  }\n`;\n\nconst MentionBd = styled.div`\n  ${setSpace(\"mts\")};\n  color: ${({ theme }) => theme.titleColor};\n  ${Copy} {\n    ${setSpace(\"mbs\")};\n  }\n`;\n\nexport default class MediaTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { mentions } = this.props.data;\n    const { frontmatter } = this.props.data.markdownRemark;\n    return (\n      <>\n        <Helmet {...this.props} title={frontmatter.title} />\n        <Layout {...this.props}>\n          <Header>\n            <h1 className=\"hero\">{frontmatter.heading}</h1>\n            <p className=\"para\">{frontmatter.subheading}</p>\n          </Header>\n          <Body>\n            <MentionsList>\n              {mentions.edges.map(({ node }) => {\n                const { html } = node;\n                const {\n                  cover,\n                  publication,\n                  source,\n                  highlight,\n                  title\n                } = node.frontmatter;\n                return (\n                  <Mention as=\"li\" highlight={highlight}>\n                    <Tile href={source} target=\"_blank\" as=\"a\">\n                      {cover ? (\n                        <MentionCover>\n                          <Img\n                            fluid={cover.childImageSharp.fluid}\n                            alt={title}\n                          />\n                        </MentionCover>\n                      ) : null}\n                      <MentionHd>\n                        <h2 className=\"title\">{title}</h2>\n                        <span>\n                          <Icon name=\"popout\" text=\"Read the article…\" />\n                        </span>\n                      </MentionHd>\n                      <MentionBd>\n                        {html ? (\n                          <>\n                            <Copy dangerouslySetInnerHTML={{ __html: html }} />\n                          </>\n                        ) : null}\n                        <p>by {publication}</p>\n                      </MentionBd>\n                    </Tile>\n                  </Mention>\n                );\n              })}\n            </MentionsList>\n          </Body>\n        </Layout>\n      </>\n    );\n  }\n}\n\nMediaTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired,\n    mentions: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query MediaTplQuery($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n      }\n    }\n    mentions: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"//pages/fame/.*mention.md/\" } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            date(formatString: \"MMMM YYYY\")\n            title\n            cover {\n              childImageSharp {\n                fluid(\n                  maxHeight: 240\n                  quality: 100\n                  traceSVG: { color: \"lightgray\" }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n            link\n            highlight\n            publication\n            source\n            uid\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}