{"version":3,"sources":["webpack:///./lib/ui/templates/FAQListingTpl.js"],"names":["Questions","styled","Tile","withConfig","displayName","componentId","setSpace","_ref","isActive","FAQListingTpl","props","_this","_Component","call","this","state","tab","switchTab","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1___default","str","setState","render","_this2","frontmatter","data","markdownRemark","membershipQuestions","membership","edges","node","html","partnershipQuestions","partnership","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","Fragment","ui_partials__WEBPACK_IMPORTED_MODULE_6__","Object","assign","title","className","heading","subheading","style","marginLeft","marginRight","maxWidth","ui_components__WEBPACK_IMPORTED_MODULE_7__","count","handleClick","partnershipTab","membershipTab","limit","dangerouslySetInnerHTML","__html","Component","propTypes","shape","object","isRequired","pageQuery"],"mappings":"qRASMA,EAAYC,YAAOC,KAAVC,WAAA,CAAAC,YAAA,2BAAAC,YAAA,gBAAGJ,CAAH,wEACXK,YAAS,OACA,SAAAC,GAAA,OAAAA,EAAGC,SAA2B,QAAU,SAMhCC,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKC,MAAQ,CACXC,IAAK,eAEPL,EAAKM,UAAYN,EAAKM,UAAUC,KAAfC,IAAAR,IALAA,sCAQnBM,UAAA,SAAUG,GACRN,KAAKO,SAAS,CAAEL,IAAKI,OAGvBE,OAAA,WAAS,IAAAC,EAAAT,KACCU,EAAgBV,KAAKJ,MAAMe,KAAKC,eAAhCF,YACFG,EAAsBb,KAAKJ,MAAMe,KAAKG,WAAWC,MAAM,GAAGC,KAAKC,KAC/DC,EAAuBlB,KAAKJ,MAAMe,KAAKQ,YAAYJ,MAAM,GAAGC,KAAKC,KACvE,OACEG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAADC,OAAAC,OAAA,GAAY1B,KAAKJ,MAAjB,CAAwB+B,MAAM,gCAC9BP,EAAAC,EAAAC,cAACE,EAAA,EAAWxB,KAAKJ,MACfwB,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,MAAIM,UAAU,QAAQlB,EAAYmB,SAClCT,EAAAC,EAAAC,cAAA,KAAGM,UAAU,QAAQlB,EAAYoB,aAEnCV,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEO,MAAO,CACLC,WAAY,OACZC,YAAa,OACbC,SAAU,UAGZd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMC,MAAO,GACXhB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEE,YAAa,kBAAM5B,EAAKN,UAAU,gBAClCT,SAA6B,gBAAnBM,KAAKC,MAAMC,KAEpBQ,EAAY4B,gBAEflB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEE,YAAa,kBAAM5B,EAAKN,UAAU,eAClCT,SAA6B,eAAnBM,KAAKC,MAAMC,KAEpBQ,EAAY6B,gBAGjBnB,EAAAC,EAAAC,cAACpC,EAAD,CAAWQ,SAA6B,gBAAnBM,KAAKC,MAAMC,IAAuBsC,OAAK,GAC1DpB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEM,wBAAyB,CAAEC,OAAQxB,MAGvCE,EAAAC,EAAAC,cAACpC,EAAD,CAAWQ,SAA6B,eAAnBM,KAAKC,MAAMC,IAAsBsC,OAAK,GACzDpB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMM,wBAAyB,CAAEC,OAAQ7B,aApDZ8B,aA6D3ChD,EAAciD,UAAY,CACxBjC,KAAMkC,gBAAM,CACVjC,eAAgBkC,SAAOC,WACvBjC,WAAYgC,SAAOC,WACnB5B,YAAa2B,SAAOC,aACnBA,YAGE,IAAMC,EAAS","file":"component---lib-ui-templates-faq-listing-tpl-js-6e0677e62ff3f559e417.js","sourcesContent":["import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Copy, Tabs, Tab, Tile } from \"ui/components\";\nimport { setSpace } from \"ui/mixins\";\n\nconst Questions = styled(Tile)`\n  ${setSpace(\"pah\")};\n  display: ${({ isActive }) => (isActive ? \"block\" : \"none\")};\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 900px;\n`;\n\nexport default class FAQListingTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tab: \"partnership\"\n    };\n    this.switchTab = this.switchTab.bind(this);\n  }\n\n  switchTab(str) {\n    this.setState({ tab: str });\n  }\n\n  render() {\n    const { frontmatter } = this.props.data.markdownRemark;\n    const membershipQuestions = this.props.data.membership.edges[0].node.html;\n    const partnershipQuestions = this.props.data.partnership.edges[0].node.html;\n    return (\n      <>\n        <Helmet {...this.props} title=\"Frequently Asked Questions\" />\n        <Layout {...this.props}>\n          <Header>\n            <h1 className=\"hero\">{frontmatter.heading}</h1>\n            <p className=\"para\">{frontmatter.subheading}</p>\n          </Header>\n          <Body\n            style={{\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              maxWidth: \"900px\"\n            }}\n          >\n            <Tabs count={2}>\n              <Tab\n                handleClick={() => this.switchTab(\"partnership\")}\n                isActive={this.state.tab === \"partnership\"}\n              >\n                {frontmatter.partnershipTab}\n              </Tab>\n              <Tab\n                handleClick={() => this.switchTab(\"membership\")}\n                isActive={this.state.tab === \"membership\"}\n              >\n                {frontmatter.membershipTab}\n              </Tab>\n            </Tabs>\n            <Questions isActive={this.state.tab === \"partnership\"} limit>\n              <Copy\n                dangerouslySetInnerHTML={{ __html: partnershipQuestions }}\n              />\n            </Questions>\n            <Questions isActive={this.state.tab === \"membership\"} limit>\n              <Copy dangerouslySetInnerHTML={{ __html: membershipQuestions }} />\n            </Questions>\n          </Body>\n        </Layout>\n      </>\n    );\n  }\n}\n\nFAQListingTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired,\n    membership: object.isRequired,\n    partnership: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query FAQTplQuery($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n        membershipTab\n        partnershipTab\n      }\n    }\n    membership: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//pages/question/membership/*/.*/*.md/\" }\n      }\n      sort: { order: ASC, fields: [frontmatter___score] }\n    ) {\n      edges {\n        node {\n          id\n          html\n        }\n      }\n    }\n    partnership: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//pages/question/partnership/*/.*/*.md/\" }\n      }\n      sort: { order: DESC, fields: [frontmatter___score] }\n    ) {\n      edges {\n        node {\n          id\n          html\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}