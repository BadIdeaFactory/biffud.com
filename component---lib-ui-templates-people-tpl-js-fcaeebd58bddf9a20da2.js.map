{"version":3,"file":"component---lib-ui-templates-people-tpl-js-fcaeebd58bddf9a20da2.js","mappings":"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","sources":["webpack://biffud.com/./lib/ui/templates/ofPeople/Person.js","webpack://biffud.com/./lib/ui/templates/ofPeople/PersonModal.js","webpack://biffud.com/./lib/ui/templates/PeopleTpl.js"],"sourcesContent":["import { func, object, shape } from \"prop-types\";\nimport Img from \"gatsby-image\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Action, Icon } from \"ui/components\";\nimport { breakpoint, time } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst Person = styled.li`\n  align-items: center;\n  background: white;\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  transition: box-shadow ${time.s}, transform ${time.s};\n  &:hover {\n    box-shadow: 6px 6px 0 0 ${({ theme }) => theme.actionDecor};\n    transform: translate(-1px, -1px);\n  }\n  ${breakpoint.tabletUp} {\n    ${setSpace(\"pan\")};\n    );\n  }\n`;\n\nconst PersonPic = styled.div`\n  background: ${({ theme, avatar }) => (avatar ? \"\" : theme.actionColor)};\n  border: 2px solid ${({ theme }) => theme.background};\n  flex: 0 0 ${100 / 3}%;\n`;\n\nconst PersonDetails = styled.div`\n  ${setSpace(\"phm\")};\n  ${setType(\"s\")};\n  ${breakpoint.phone} {\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n  }\n`;\n\nconst PersonName = styled.h3`\n  ${setType(\"s\")};\n  color: ${({ theme }) => theme.color};\n  span {\n    display: block;\n    &:first-child {\n      ${setType(\"m\")};\n      color: ${({ theme }) => theme.actionColor};\n      font-weight: 800;\n    }\n  }\n`;\n\nconst PersonLinks = styled.div`\n  ${setSpace(\"mts\")};\n  & > * {\n    ${setSpace(\"mrs\")};\n    line-height: 1em;\n  }\n  ${breakpoint.phone} {\n    display: none;\n  }\n`;\n\nconst Member = props => {\n  const { defaultAvatar } = props;\n  const { frontmatter } = props.data;\n  const {\n    avatar,\n    bluesky,\n    fname,\n    github,\n    lname,\n    mastodon,\n    twitter,\n    website\n  } = frontmatter;\n  return (\n    <Person onClick={props.toggleModal} role=\"button\">\n      <PersonPic hasAvatar={avatar}>\n        <Img\n          fluid={avatar ? avatar.childImageSharp.fluid : defaultAvatar.fluid}\n        />\n      </PersonPic>\n      <PersonDetails>\n        <PersonName>\n          <span>{fname}</span> <span>{lname}</span>\n        </PersonName>\n        <PersonLinks>\n          {website ? (\n            <Action\n              onClick={e => e.stopPropagation()}\n              href={`https://${website}/`}\n              rel=\"external noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <Icon name=\"website\" size=\"s\" />\n            </Action>\n          ) : null}\n          {bluesky ? (\n            <Action\n              onClick={e => e.stopPropagation()}\n              href={`https://bsky.app/profile/${bluesky}`}\n              rel=\"external noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <Icon name=\"bluesky\" size=\"s\" />\n            </Action>\n          ) : null}\n          {mastodon ? (\n            <Action\n              onClick={e => e.stopPropagation()}\n              href={`https://${mastodon}`}\n              rel=\"external noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <Icon name=\"mastodon\" size=\"s\" />\n            </Action>\n          ) : null}\n          {twitter ? (\n            <Action\n              onClick={e => e.stopPropagation()}\n              href={`https://twitter.com/${twitter}`}\n              rel=\"external noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <Icon name=\"twitter\" size=\"s\" />\n            </Action>\n          ) : null}\n          {github ? (\n            <Action\n              onClick={e => e.stopPropagation()}\n              href={`https://github.com/${github}`}\n              rel=\"external noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <Icon name=\"github\" size=\"s\" />\n            </Action>\n          ) : null}\n        </PersonLinks>\n      </PersonDetails>\n    </Person>\n  );\n};\n\nMember.propTypes = {\n  defaultAvatar: object.isRequired,\n  data: shape({\n    frontmatter: object.isRequired\n  }).isRequired,\n  toggleModal: func.isRequired\n};\n\nMember.defaultProps = {};\n\nexport default Member;\n","import { func, object, shape } from \"prop-types\";\nimport Img from \"gatsby-image\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Action, Copy, Icon, Modal } from \"ui/components\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst Person = styled.div`\n  ${setSpace(\"pbh\")};\n  ${breakpoint.tabletUp} {\n    display: flex;\n    flex-direction: row;\n  }\n`;\nconst PersonPic = styled.div`\n  background: ${({ hasAvatar, theme }) =>\n    !hasAvatar ? theme.actionColor : \"\"};\n  ${breakpoint.tabletUp} {\n    flex: 0 0 ${100 / 4}%;\n  }\n  ${breakpoint.phone} {\n    ${setSpace(\"mbl\")};\n    & > * {\n      margin-left: auto;\n      margin-right: auto;\n      max-width: 200px;\n    }\n  }\n`;\nconst PersonDetails = styled.div`\n  ${setType(\"s\")};\n  ${breakpoint.tabletUp} {\n    ${setSpace(\"pll\")};\n  }\n`;\nconst PersonName = styled.h2`\n  ${setType(\"l\")};\n  font-weight: 800;\n  color: ${({ theme }) => theme.titleColor};\n`;\nconst PersonBio = styled.div`\n  ${setSpace(\"mvm\")};\n  ${setType(\"m\")};\n  color: ${({ theme }) => theme.titleColor};\n`;\nconst PersonQuote = styled.div`\n  ${setSpace(\"mvm\")};\n`;\nconst PersonSocial = styled.div`\n  & > *:not(:first-child) {\n    ${setSpace(\"mlm\")};\n  }\n  & > *:not(:last-child) {\n    ${setSpace(\"mrm\")};\n  }\n`;\n\nconst Member = props => {\n  const { defaultAvatar } = props;\n  const { frontmatter, html } = props.data;\n  const {\n    avatar,\n    bluesky,\n    fname,\n    github,\n    lname,\n    mastodon,\n    quote,\n    twitter,\n    website\n  } = frontmatter;\n  return (\n    <Modal toggleModal={props.toggleModal}>\n      <Person>\n        <PersonPic hasAvatar={avatar}>\n          <Img\n            fluid={avatar ? avatar.childImageSharp.fluid : defaultAvatar.fluid}\n          />\n        </PersonPic>\n        <PersonDetails>\n          <PersonName>\n            {fname} {lname}\n          </PersonName>\n          <PersonBio>\n            <Copy dangerouslySetInnerHTML={{ __html: html }} />\n          </PersonBio>\n          <PersonQuote>{quote}</PersonQuote>\n          <PersonSocial>\n            {website && (\n              <Action\n                href={`https://${website}/`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"website\" /> Website\n              </Action>\n            )}\n            {bluesky && (\n              <Action\n                href={`https://bsky.app/profile/${bluesky}`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"bluesky\" /> Bluesky\n              </Action>\n            )}\n            {mastodon && (\n              <Action\n                href={`https://${mastodon}`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"mastodon\" /> Mastodon\n              </Action>\n            )}\n            {twitter && (\n              <Action\n                href={`https://twitter.com/${twitter}`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"twitter\" /> Twitter\n              </Action>\n            )}\n            {github && (\n              <Action\n                href={`https://github.com/${github}`}\n                rel=\"external noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Icon name=\"github\" /> GitHub\n              </Action>\n            )}\n          </PersonSocial>\n        </PersonDetails>\n      </Person>\n    </Modal>\n  );\n};\n\nMember.propTypes = {\n  defaultAvatar: object.isRequired,\n  data: shape({\n    frontmatter: object.isRequired\n  }).isRequired,\n  toggleModal: func.isRequired\n};\n\nMember.defaultProps = {};\n\nexport default Member;\n","import { object, shape } from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { breakpoint, time, track } from \"ui/settings\";\nimport { fadeIn } from \"ui/animations\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport Person from \"./ofPeople/Person\";\nimport PersonModal from \"./ofPeople/PersonModal\";\n\nconst PeopleSection = styled.section`\n  ${setSpace(\"mbk\")};\n`;\n\nconst People = styled.ul`\n  animation: ${fadeIn} ${time.l} linear;\n  width: 100%;\n  display: grid;\n  grid-gap: 10px;\n  ${breakpoint.phone} {\n    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n  }\n  ${breakpoint.tabletUp} {\n    grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));\n  }\n`;\n\nconst PeopleIntro = styled.div`\n  ${setSpace(\"mbh\")};\n  text-align: center;\n  h2 {\n    ${setSpace(\"mbm\")};\n    ${setSpace(\"phs\")};\n    ${setSpace(\"pvx\")};\n    ${setType(\"s\")};\n    background: white;\n    color: ${({ theme }) => theme.actionColor};\n    display: inline-block;\n    font-weight: 800;\n    letter-spacing: ${track.m};\n    text-transform: uppercase;\n  }\n  p {\n    ${setType(\"l\")};\n    color: white;\n  }\n`;\n\nexport default class PeopleTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPerson: null\n    };\n    this.handleShowPerson = this.handleShowPerson.bind(this);\n  }\n\n  handleShowPerson(obj) {\n    this.setState(prevState => ({\n      currentPerson: prevState.currentPerson ? null : obj\n    }));\n  }\n\n  render() {\n    const { currentPerson } = this.state;\n    const { defaultAvatar, overlords, members, accomplices } = this.props.data;\n    const { frontmatter } = this.props.data.markdownRemark;\n    const genericAvatar = defaultAvatar.edges[0].node.childImageSharp;\n    return (\n      <>\n        <Helmet {...this.props} title={frontmatter.title} />\n        <Layout {...this.props}>\n          <Header>\n            <h1 className=\"hero\">{frontmatter.heading}</h1>\n            <p className=\"para\">{frontmatter.subheading}</p>\n          </Header>\n          <Body>\n            <PeopleSection>\n              <PeopleIntro>\n                <h2>{frontmatter.overlordsHeading}</h2>\n                <p>{frontmatter.overlordsDescr}</p>\n              </PeopleIntro>\n              <People>\n                {overlords.edges.map(({ node }) => (\n                  <Person\n                    data={node}\n                    defaultAvatar={genericAvatar}\n                    key={node.frontmatter.uid}\n                    toggleModal={e => this.handleShowPerson(node, e)}\n                  />\n                ))}\n              </People>\n            </PeopleSection>\n            <PeopleIntro>\n              <h2>{frontmatter.membersHeading}</h2>\n              <p>{frontmatter.membersDescr}</p>\n            </PeopleIntro>\n            <PeopleSection>\n              <People>\n                {members.edges.map(({ node }) => (\n                  <Person\n                    data={node}\n                    defaultAvatar={genericAvatar}\n                    key={node.frontmatter.uid}\n                    toggleModal={e => this.handleShowPerson(node, e)}\n                  />\n                ))}\n              </People>\n            </PeopleSection>\n            <PeopleSection>\n              <PeopleIntro>\n                <h2>{frontmatter.accomplicesHeading}</h2>\n                <p>{frontmatter.accomplicesDescr}</p>\n              </PeopleIntro>\n              <People>\n                {accomplices.edges.map(({ node }) => (\n                  <Person\n                    data={node}\n                    defaultAvatar={genericAvatar}\n                    key={node.frontmatter.uid}\n                    toggleModal={e => this.handleShowPerson(node, e)}\n                  />\n                ))}\n              </People>\n            </PeopleSection>\n          </Body>\n          {currentPerson !== null ? (\n            <PersonModal\n              toggleModal={this.handleShowPerson}\n              data={currentPerson}\n              defaultAvatar={genericAvatar}\n            />\n          ) : null}\n        </Layout>\n      </>\n    );\n  }\n}\n\nPeopleTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired,\n    overlords: object.isRequired,\n    members: object.isRequired,\n    accomplices: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query PeopleTplQuery($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n        accomplicesHeading\n        accomplicesDescr\n        membersHeading\n        membersDescr\n        overlordsHeading\n        overlordsDescr\n      }\n    }\n    defaultAvatar: allFile(\n      filter: { relativePath: { eq: \"images/default-avatar.png\" } }\n    ) {\n      edges {\n        node {\n          childImageSharp {\n            fluid(\n              maxWidth: 240\n              maxHeight: 300\n              quality: 90\n              traceSVG: { color: \"lightgray\" }\n            ) {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n      }\n    }\n    overlords: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//pages/people/bios/*/.*/*.md/\" }\n        frontmatter: { role: { elemMatch: { overlord: { eq: true } } } }\n      }\n      sort: { order: DESC, fields: [frontmatter___score] }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            bluesky\n            fname\n            github\n            lname\n            mastodon\n            quote\n            score\n            twitter\n            website\n            uid\n            avatar {\n              childImageSharp {\n                fluid(\n                  maxWidth: 240\n                  maxHeight: 300\n                  cropFocus: CENTER\n                  traceSVG: {\n                    color: \"#ffffff\"\n                    optTolerance: 0.1\n                    turdSize: 10\n                    turnPolicy: TURNPOLICY_MINORITY\n                  }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    members: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//pages/people/bios/*/.*/*.md/\" }\n        frontmatter: { role: { elemMatch: { member: { eq: true } } } }\n      }\n      sort: { order: DESC, fields: [frontmatter___score] }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            bluesky\n            fname\n            github\n            lname\n            mastodon\n            quote\n            score\n            twitter\n            website\n            uid\n            avatar {\n              childImageSharp {\n                fluid(\n                  maxWidth: 240\n                  maxHeight: 300\n                  cropFocus: CENTER\n                  traceSVG: {\n                    color: \"#ffffff\"\n                    optTolerance: 0.1\n                    turdSize: 10\n                    turnPolicy: TURNPOLICY_MINORITY\n                  }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    accomplices: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//pages/people/bios/*/.*/*.md/\" }\n        frontmatter: { role: { elemMatch: { accomplice: { eq: true } } } }\n      }\n      sort: { order: DESC, fields: [frontmatter___score, frontmatter___lname] }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            bluesky\n            fname\n            github\n            lname\n            mastodon\n            quote\n            score\n            twitter\n            website\n            uid\n            avatar {\n              childImageSharp {\n                fluid(\n                  maxWidth: 240\n                  maxHeight: 300\n                  cropFocus: CENTER\n                  traceSVG: {\n                    color: \"#ffffff\"\n                    optTolerance: 0.1\n                    turdSize: 10\n                    turnPolicy: TURNPOLICY_MINORITY\n                  }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["Person","styled","time","theme","actionDecor","breakpoint","setSpace","PersonPic","avatar","actionColor","background","PersonDetails","setType","PersonName","color","PersonLinks","Member","props","defaultAvatar","frontmatter","data","bluesky","fname","github","lname","mastodon","twitter","website","onClick","toggleModal","role","hasAvatar","fluid","childImageSharp","e","stopPropagation","href","rel","target","name","size","defaultProps","titleColor","PersonBio","PersonQuote","PersonSocial","html","quote","dangerouslySetInnerHTML","__html","PeopleSection","People","fadeIn","PeopleIntro","track","PeopleTpl","state","currentPerson","handleShowPerson","bind","obj","this","setState","prevState","render","overlords","members","accomplices","markdownRemark","genericAvatar","edges","node","title","className","heading","subheading","overlordsHeading","overlordsDescr","map","key","uid","membersHeading","membersDescr","accomplicesHeading","accomplicesDescr","PersonModal","Component"],"sourceRoot":""}