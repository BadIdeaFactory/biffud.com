{"version":3,"file":"component---lib-ui-templates-project-listing-tpl-tsx-53cf74036b7f9432ba52.js","mappings":"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","sources":["webpack://biffud.com/./lib/ui/templates/ProjectListingTpl.tsx"],"sourcesContent":["import React from \"react\";\nimport { graphql, Link, type PageProps } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport styled from \"styled-components\";\n\nimport { Icon, Tile } from \"ui/components\";\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst Projects = styled.ol`\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 40px;\n    grid-template-columns: repeat(auto-fill, minmax(340px, 1fr));\n    margin-left: auto;\n    margin-right: auto;\n  }\n  ${breakpoint.desktopUp} {\n    grid-template-columns: repeat(auto-fill, minmax(380px, 1fr));\n  }\n`;\n\nconst Flag = styled.span`\n  ${setType(\"x\")};\n  ${setSpace(\"mlx\")};\n  color: ${({ theme }) => theme.dimmedColor};\n  font-weight: 800;\n  text-transform: uppercase;\n`;\n\nconst Project = styled.li`\n  grid-row-end: span 1;\n  ${breakpoint.phone} {\n    ${setSpace(\"mbl\")};\n  }\n  ${breakpoint.tabletUp} {\n    &:nth-child(even) {\n      transform: translateY(30px);\n    }\n  }\n`;\n\ninterface ProjectCoverProps {\n  readonly $hasPlaceholder: boolean;\n}\n\nconst ProjectCover = styled.div<ProjectCoverProps>`\n  ${setSpace(\"mbm\")};\n  border: 2px solid ${({ theme }) => theme.actionColor};\n  position: relative;\n  ${({ $hasPlaceholder, theme }) =>\n    $hasPlaceholder\n      ? `\n  .thinking {\n    color: ${theme.actionColor};\n    display: inline-block;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    i {\n      font-size: 80px !important;\n    }\n  }`\n      : ``};\n`;\n\nconst ProjectHd = styled.div`\n  ${setSpace(\"mbm\")};\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  span {\n    font-weight: 800;\n    text-transform: uppercase;\n  }\n  span.code {\n    align-items: center;\n    color: ${({ theme }) => theme.titleColor};\n    display: flex;\n  }\n  span.date {\n    color: ${({ theme }) => theme.dimmedColor};\n  }\n`;\n\nconst ProjectBd = styled.div`\n  align-items: flex-start;\n  display: flex;\n  justify-content: space-between;\n  h2,\n  span {\n    ${setType(\"l\")};\n    color: ${({ theme }) => theme.actionColor};\n    font-weight: 800;\n    text-transform: uppercase;\n  }\n  h2 {\n    max-width: 75%;\n  }\n  span {\n    display: none;\n  }\n  ${breakpoint.desktopUp} {\n    span {\n      display: inline-block;\n    }\n  }\n`;\n\nconst ProjectFt = styled.div`\n  color: ${({ theme }) => theme.titleColor};\n  p.summary {\n    ${setSpace(\"mts\")};\n  }\n`;\n\nconst ProjectListingTpl = (props: PageProps<Queries.ProjectsTplQuery>) => {\n  const { defaultCover, projects, markdownRemark } = props.data;\n  const genericCover = defaultCover.edges[0].node.childImageSharp;\n  const { frontmatter } = markdownRemark ?? {};\n\n  return (\n    <>\n      <Helmet {...props} title={frontmatter?.title ?? \"\"} />\n      <Layout {...props}>\n        <Header>\n          <h1 className=\"hero\">{frontmatter?.heading}</h1>\n          <p className=\"para\">{frontmatter?.subheading}</p>\n        </Header>\n        <Body>\n          <Projects>\n            {projects.edges.map(({ node }) => {\n              const { active, cover, date, code, tagline, title, uid } =\n                node.frontmatter ?? {};\n\n              return (\n                <Project key={uid} as=\"li\">\n                  <Tile as={Link} to={`/projects/${uid}`}>\n                    <ProjectHd>\n                      <span className=\"code\">\n                        {code} {!active ? <Flag>(Hibernated)</Flag> : null}\n                      </span>\n                      <span className=\"date\">{date}</span>\n                    </ProjectHd>\n                    <ProjectCover $hasPlaceholder={!cover}>\n                      <GatsbyImage\n                        image={\n                          cover?.childImageSharp?.gatsbyImageData\n                            ? cover.childImageSharp.gatsbyImageData\n                            : genericCover!.gatsbyImageData\n                        }\n                        alt={title ?? \"\"}\n                      />\n                      {!cover ? (\n                        <span className=\"thinking\">\n                          <Icon name=\"thinking\" size=\"h\" />\n                        </span>\n                      ) : null}\n                    </ProjectCover>\n                    <ProjectBd>\n                      <h2 className=\"title\">{title}</h2>\n                      <span>\n                        <Icon name=\"arrow-right\" text=\"Read moreâ€¦\" />\n                      </span>\n                    </ProjectBd>\n                    <ProjectFt>\n                      <p className=\"summary\">{tagline}</p>\n                    </ProjectFt>\n                  </Tile>\n                </Project>\n              );\n            })}\n          </Projects>\n        </Body>\n      </Layout>\n    </>\n  );\n};\n\nexport default ProjectListingTpl;\n\nexport const pageQuery = graphql`\n  query ProjectsTpl($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n      }\n    }\n    defaultCover: allFile(\n      filter: { relativePath: { eq: \"images/default-cover.png\" } }\n    ) {\n      edges {\n        node {\n          childImageSharp {\n            gatsbyImageData(\n              width: 600\n              quality: 90\n              placeholder: DOMINANT_COLOR\n              layout: CONSTRAINED\n            )\n          }\n        }\n      }\n    }\n    projects: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/pages/projects/.*project.md/\" } }\n      sort: [{ frontmatter: { score: DESC } }, { frontmatter: { date: ASC } }]\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            uid\n            date(formatString: \"MMM YYYY\")\n            title\n            active\n            tagline\n            code\n            cover {\n              childImageSharp {\n                gatsbyImageData(\n                  width: 600\n                  quality: 90\n                  placeholder: DOMINANT_COLOR\n                  layout: CONSTRAINED\n                )\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["Projects","styled","ol","withConfig","displayName","componentId","breakpoint","tabletUp","desktopUp","Flag","span","setType","setSpace","_ref","theme","dimmedColor","Project","li","phone","ProjectCover","div","_ref2","actionColor","_ref3","$hasPlaceholder","ProjectHd","_ref4","titleColor","_ref5","ProjectBd","_ref6","ProjectFt","_ref7","props","_frontmatter$title","defaultCover","projects","markdownRemark","data","genericCover","edges","node","childImageSharp","frontmatter","React","Helmet","Object","assign","title","Layout","Header","className","heading","subheading","Body","map","_ref8","_node$frontmatter","_cover$childImageShar","active","cover","date","code","tagline","uid","key","as","Tile","Link","to","GatsbyImage","image","gatsbyImageData","alt","Icon","name","size","text"],"sourceRoot":""}