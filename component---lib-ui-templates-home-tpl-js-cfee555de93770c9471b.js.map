{"version":3,"file":"component---lib-ui-templates-home-tpl-js-cfee555de93770c9471b.js","mappings":"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","sources":["webpack://biffud.com/./lib/ui/templates/ofHome/Section.js","webpack://biffud.com/./lib/ui/templates/ofHome/Clients.js","webpack://biffud.com/./lib/ui/templates/ofHome/Projects.js","webpack://biffud.com/./lib/ui/templates/ofHome/Services.js","webpack://biffud.com/./lib/ui/templates/ofHome/Testimonials.js","webpack://biffud.com/./lib/ui/templates/HomeTpl.js"],"sourcesContent":["import styled from \"styled-components\";\n\nimport { setSpace } from \"ui/mixins\";\n\nconst Section = styled.div`\n  ${setSpace(\"mvk\")};\n  display: flex;\n  justify-content: center;\n  .el {\n    width: 100%;\n  }\n  &:not(:last-child) {\n    ${setSpace(\"pbk\")};\n  }\n`;\n\nexport default Section;\n","import { array, string } from \"prop-types\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Tile } from \"ui/components\";\nimport { Header } from \"ui/partials\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport Section from \"./Section\";\n\nconst Element = styled(Section)``;\nconst Title = styled.h1`\n  &.hero {\n    ${setType(\"h\")};\n  }\n`;\nconst Items = styled.ul`\n  width: 100%;\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n    & > * {\n      grid-row-end: span 1;\n    }\n  }\n`;\nconst Item = styled.li`\n  ${breakpoint.phone} {\n    &:not(:last-child) {\n      ${setSpace(\"mbx\")};\n    }\n  }\n`;\nconst ItemTitle = styled.h3`\n  ${setSpace(\"mbm\")};\n`;\nconst ItemText = styled.div`\n  color: ${({ theme }) => theme.color};\n  strong {\n    font-weight: 600;\n  }\n`;\n\nfunction Clients(props) {\n  const { clients, title, subtitle } = props;\n  return (\n    <Element as=\"section\">\n      <div className=\"el\">\n        <Header className=\"hd\">\n          <Title className=\"hero\">{title}</Title>\n          {subtitle ? <p className=\"para\">{subtitle}</p> : null}\n        </Header>\n        <Items>\n          {clients.map(({ node }) => {\n            const client = node.frontmatter;\n            return (\n              <Item key={node.id}>\n                <Tile href={client.link} target=\"_blank\" as=\"a\">\n                  <ItemTitle>\n                    <GatsbyImage image={client.logo.childImageSharp.gatsbyImageData} alt={client.name} />\n                  </ItemTitle>\n                  <ItemText dangerouslySetInnerHTML={{ __html: node.html }} />\n                </Tile>\n              </Item>\n            );\n          })}\n        </Items>\n      </div>\n    </Element>\n  );\n}\n\nClients.propTypes = {\n  clients: array.isRequired,\n  subtitle: string.isRequired,\n  title: string.isRequired\n};\n\nexport default Clients;\n","import { array, string } from \"prop-types\";\nimport { Link } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { breakpoint } from \"ui/settings\";\nimport { Header } from \"ui/partials\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport { Tile, Icon } from \"ui/components\";\nimport Section from \"./Section\";\n\nconst Element = styled(Section)``;\nconst Title = styled.h1`\n  &.hero {\n    ${setType(\"h\")};\n  }\n`;\nconst Items = styled.ul`\n  width: 100%;\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fill, minmax(214px, 1fr));\n    margin-left: auto;\n    margin-right: auto;\n  }\n  ${breakpoint.desktopUp} {\n    grid-template-columns: repeat(auto-fill, minmax(291px, 1fr));\n  }\n`;\nconst Item = styled.li`\n  ${breakpoint.phone} {\n    &:not(:last-child) {\n      ${setSpace(\"mbx\")};\n    }\n  }\n`;\nconst ItemImage = styled.div`\n  ${setSpace(\"mbm\")};\n  border: 2px solid ${({ theme }) => theme.actionColor};\n  position: relative;\n  ${({ $hasPlaceholder, theme }) =>\n    $hasPlaceholder\n      ? `\n    .thinking {\n      color: ${theme.actionColor};\n      display: inline-block;\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%);\n      i {\n        font-size: 80px !important;\n      }\n  `\n      : ``};\n`;\nconst ItemTitle = styled.div`\n  align-items: flex-start;\n  display: flex;\n  justify-content: space-between;\n  h3,\n  span {\n    ${setType(\"m\")};\n    color: ${({ theme }) => theme.actionColor};\n    font-weight: 800;\n    text-transform: uppercase;\n  }\n  h3 {\n    max-width: 75%;\n  }\n  span {\n    display: none;\n  }\n  ${breakpoint.desktopUp} {\n    span {\n      display: inline-block;\n    }\n  }\n`;\nconst ItemText = styled.p`\n  ${setSpace(\"mts\")};\n`;\n\nfunction Projects(props) {\n  const { projects, title, subtitle } = props;\n  return (\n    <Element as=\"section\">\n      <div className=\"el\">\n        <Header className=\"hd\">\n          <Title className=\"hero\">{title}</Title>\n          {subtitle ? <p className=\"para\">{subtitle}</p> : null}\n        </Header>\n        <Items>\n          {projects.map(({ node }) => {\n            const project = node.frontmatter;\n            return (\n              <Item key={node.id}>\n                <Tile as={Link} to={`/projects/${project.uid}`}>\n                  <ItemImage $hasPlaceholder={!project.cover}>\n                    <GatsbyImage\n                      image={project.cover\n                        ? project.cover.childImageSharp.gatsbyImageData\n                        : props.placeholder}\n                      alt={project.title}\n                    />\n                    {!project.cover ? (\n                      <span className=\"thinking\">\n                        <Icon name=\"thinking\" />\n                      </span>\n                    ) : null}\n                  </ItemImage>\n                  <ItemTitle>\n                    <h3 className=\"title\">{project.title}</h3>\n                    <span>\n                      <Icon name=\"arrow-right\" text=\"Read more…\" />\n                    </span>\n                  </ItemTitle>\n                  <ItemText>{project.tagline}</ItemText>\n                </Tile>\n              </Item>\n            );\n          })}\n        </Items>\n      </div>\n    </Element>\n  );\n}\n\nProjects.propTypes = {\n  projects: array.isRequired,\n  subtitle: string.isRequired,\n  title: string.isRequired\n};\n\nexport default Projects;\n","import { array, string } from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { breakpoint } from \"ui/settings\";\nimport { Header } from \"ui/partials\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport { Tile } from \"ui/components\";\nimport Section from \"./Section\";\n\nconst Element = styled(Section)``;\nconst Title = styled.h1`\n  &.hero {\n    ${setType(\"h\")};\n  }\n`;\nconst Items = styled.ul`\n  width: 100%;\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 10px;\n    grid-template-columns: repeat(auto-fill, minmax(330px, 1fr));\n    & > * {\n      grid-row-end: span 1;\n    }\n  }\n  ${breakpoint.desktopUp} {\n    grid-template-columns: repeat(auto-fill, minmax(221px, 1fr));\n  }\n`;\nconst Item = styled.li`\n  ${breakpoint.phone} {\n    &:not(:last-child) {\n      ${setSpace(\"mbx\")};\n    }\n  }\n`;\nconst ItemTitle = styled.h3`\n  ${setSpace(\"mbm\")};\n  ${setType(\"l\")};\n  font-weight: 800;\n`;\n\nfunction Services(props) {\n  const { services, title, subtitle } = props;\n  return (\n    <Element as=\"section\">\n      <div className=\"el\">\n        <Header className=\"hd\">\n          <Title className=\"hero\">{title}</Title>\n          {subtitle ? <p className=\"para\">{subtitle}</p> : null}\n        </Header>\n        <Items>\n          {services.map((service, i) => (\n            <Item key={i}>\n              <Tile space=\"l\">\n                <ItemTitle className=\"TileTitle\">{service.title}</ItemTitle>\n                <p>{service.text}</p>\n              </Tile>\n            </Item>\n          ))}\n        </Items>\n      </div>\n    </Element>\n  );\n}\n\nServices.propTypes = {\n  services: array.isRequired,\n  subtitle: string.isRequired,\n  title: string.isRequired\n};\n\nexport default Services;\n","import { array, string } from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Tile } from \"ui/components\";\nimport { Header } from \"ui/partials\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport Section from \"./Section\";\n\nconst Element = styled(Section)``;\nconst Title = styled.h1`\n  &.hero {\n    ${setType(\"h\")};\n  }\n`;\nconst Items = styled.ul`\n  width: 100%;\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n    & > * {\n      grid-row-end: span 1;\n    }\n  }\n`;\nconst Item = styled.li`\n  height: 100%;\n  .quote {\n    ${setSpace(\"mbs\")};\n    ${setSpace(\"pal\")};\n    position: relative;\n    &:after,\n    &:before {\n      color: ${({ theme }) => theme.background};\n      ${setType(\"k\")};\n      position: absolute;\n    }\n    &:before {\n      content: \"“\";\n      top: 0;\n      left: 0;\n    }\n    &:after {\n      content: \"”\";\n      bottom: 0;\n      right: 0;\n    }\n  }\n  .source {\n    ${setType(\"s\")};\n    text-align: right;\n  }\n  ${breakpoint.phone} {\n    &:not(:last-child) {\n      ${setSpace(\"mbx\")};\n    }\n  }\n  ${({ $span }) =>\n    $span ? `\n    grid-column: 1 / span 2;\n    grid-row: 1 / 2;\n    justify-self: stretch;\n    align-self: stretch;\n  `\n      : ``};\n`;\n\nfunction Testimonials(props) {\n  const { testimonials, title, subtitle } = props;\n  return (\n    <Element as=\"section\">\n      <div className=\"el\">\n        <Header className=\"hd\">\n          <Title className=\"hero\">{title}</Title>\n          {subtitle ? <p className=\"para\">{subtitle}</p> : null}\n        </Header>\n        <Items>\n          {testimonials.map((testimonial, i) => (\n            <Item key={i} $span={testimonial.span}>\n              <Tile>\n                <blockquote className=\"quote\">\n                  <p>{testimonial.text}</p>\n                </blockquote>\n                <p className=\"source\">— {testimonial.source}</p>\n              </Tile>\n            </Item>\n          ))}\n        </Items>\n      </div>\n    </Element>\n  );\n}\n\nTestimonials.propTypes = {\n  testimonials: array.isRequired,\n  subtitle: string.isRequired,\n  title: string.isRequired\n};\n\nexport default Testimonials;\n","import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\n\nimport { Action, Actionbar } from \"ui/components\";\nimport { Helmet, Layout, Pitch } from \"ui/partials\";\n\nimport Clients from \"./ofHome/Clients\";\nimport Projects from \"./ofHome/Projects\";\nimport Services from \"./ofHome/Services\";\nimport Testimonials from \"./ofHome/Testimonials\";\n\nexport default class HomeTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { frontmatter } = this.props.data.markdownRemark;\n    const { clients, projects, defaultCover } = this.props.data;\n    const genericCover = defaultCover.edges[0].node.childImageSharp;\n    return (\n      <>\n        <Helmet {...this.props} title={frontmatter.title} />\n        <Layout {...this.props}>\n          <Pitch>\n            <h1 className=\"hero\">{frontmatter.heading}</h1>\n            <Actionbar>\n              <Action button href=\"https://github.com/BadIdeaFactory/corporate/issues?q=is%3Aissue+is%3Aopen+label%3A%22project+application%22\" target=\"_blank\">\n                Submit an idea\n              </Action>\n              <Action href=\"https://patreon.com/biffud\" target=\"_blank\">Give us money</Action>\n              <span className=\"join\">or</span>\n              <Action to=\"contact\">Engage our services</Action>\n            </Actionbar>\n          </Pitch>\n          <Projects\n            placeholder={genericCover.gatsbyImageData}\n            projects={projects.edges}\n            subtitle={frontmatter.projectsSubtitle}\n            title={frontmatter.projectsTitle}\n          />\n          <Clients\n            title={frontmatter.clientsTitle}\n            subtitle={frontmatter.clientsSubtitle}\n            clients={clients.edges}\n          />\n          <Services\n            title={frontmatter.servicesTitle}\n            subtitle={frontmatter.servicesSubtitle}\n            services={frontmatter.services}\n          />\n          <Services\n            title={frontmatter.goodatTitle}\n            subtitle={frontmatter.goodatSubtitle}\n            services={frontmatter.goodat}\n          />\n          <Testimonials\n            title={frontmatter.testimonialsTitle}\n            subtitle={frontmatter.testimonialsSubtitle}\n            testimonials={frontmatter.testimonials}\n          />\n        </Layout>\n      </>\n    );\n  }\n}\n\nHomeTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`query HomeTplQuery($uid: String!) {\n  markdownRemark(frontmatter: {uid: {eq: $uid}}) {\n    html\n    frontmatter {\n      uid\n      title\n      heading\n      contactCta\n      projectsCta\n      servicesTitle\n      servicesSubtitle\n      services {\n        title\n        text\n      }\n      testimonialsTitle\n      testimonialsSubtitle\n      testimonials {\n        text\n        source\n        span\n      }\n      goodatTitle\n      goodatSubtitle\n      goodat {\n        title\n        text\n      }\n      clientsSubtitle\n      clientsTitle\n      projectsSubtitle\n      projectsTitle\n    }\n  }\n  defaultCover: allFile(filter: {relativePath: {eq: \"images/default-cover.png\"}}) {\n    edges {\n      node {\n        childImageSharp {\n          gatsbyImageData(\n            width: 800\n            height: 600\n            quality: 90\n            placeholder: DOMINANT_COLOR\n            transformOptions: {cropFocus: CENTER}\n            layout: CONSTRAINED\n          )\n        }\n      }\n    }\n  }\n  clients: allMarkdownRemark(\n    filter: {fileAbsolutePath: {regex: \"/pages/clients/.*client.md/\"}}\n    sort: {frontmatter: {score: DESC}}\n  ) {\n    edges {\n      node {\n        id\n        html\n        frontmatter {\n          uid\n          name\n          score\n          link\n          logo {\n            childImageSharp {\n              gatsbyImageData(\n                height: 40\n                quality: 80\n                placeholder: DOMINANT_COLOR\n                layout: FIXED\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n  projects: allMarkdownRemark(\n    filter: {fileAbsolutePath: {regex: \"/pages/projects/.*project.md/\"}}\n    limit: 3\n    sort: [{frontmatter: {feature: DESC}}, {frontmatter: {score: ASC}}, {frontmatter: {date: ASC}}]\n  ) {\n    edges {\n      node {\n        id\n        frontmatter {\n          uid\n          title\n          active\n          feature\n          tagline\n          code\n          cover {\n            childImageSharp {\n              gatsbyImageData(\n                width: 800\n                height: 600\n                quality: 90\n                placeholder: DOMINANT_COLOR\n                transformOptions: {cropFocus: CENTER}\n                layout: CONSTRAINED\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n}`;\n"],"names":["styled","div","withConfig","displayName","componentId","setSpace","Element","Section","Title","h1","setType","Items","ul","breakpoint","tabletUp","Item","li","phone","ItemTitle","h3","ItemText","_ref","theme","color","props","clients","title","subtitle","React","as","className","Header","map","_ref2","node","client","frontmatter","key","id","Tile","href","link","target","GatsbyImage","image","logo","childImageSharp","gatsbyImageData","alt","name","dangerouslySetInnerHTML","__html","html","desktopUp","ItemImage","actionColor","$hasPlaceholder","_ref3","p","projects","_ref4","project","Link","to","uid","cover","placeholder","Icon","text","tagline","services","service","i","space","background","$span","testimonials","testimonial","span","source","HomeTpl","_Component","_this","call","state","_inheritsLoose","prototype","render","this","data","markdownRemark","defaultCover","genericCover","edges","Helmet","Object","assign","Layout","Pitch","heading","Actionbar","Action","button","Projects","projectsSubtitle","projectsTitle","Clients","clientsTitle","clientsSubtitle","Services","servicesTitle","servicesSubtitle","goodatTitle","goodatSubtitle","goodat","Testimonials","testimonialsTitle","testimonialsSubtitle","Component"],"sourceRoot":""}