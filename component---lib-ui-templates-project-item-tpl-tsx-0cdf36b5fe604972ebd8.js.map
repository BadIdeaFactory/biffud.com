{"version":3,"file":"component---lib-ui-templates-project-item-tpl-tsx-0cdf36b5fe604972ebd8.js","mappings":"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","sources":["webpack://biffud.com/./lib/ui/templates/ProjectItemTpl.tsx"],"sourcesContent":["import React from \"react\";\nimport { graphql, type PageProps } from \"gatsby\";\nimport styled from \"styled-components\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Actionbar, Action, Icon, Gallery, Tile } from \"ui/components\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst Flex = styled.div`\n  ${breakpoint.tabletUp} {\n    display: flex;\n    & div.sideA,\n    & div.sideB {\n      flex: 0 0 50%;\n    }\n    & div.sideA {\n      ${setSpace(\"prl\")};\n    }\n    & div.sideB {\n      ${setSpace(\"pll\")};\n    }\n  }\n`;\n\nconst BodyHd = styled(Flex)`\n  ${setSpace(\"mbl\")};\n  ${breakpoint.tabletUp} {\n    display: flex;\n  }\n  & div.sideB {\n    display: flex;\n  }\n  & div.time,\n  & div.code {\n    flex: 0 0 50%;\n  }\n  ${breakpoint.phone} {\n    & div.sideB {\n      ${setSpace(\"mtl\")}\n    }\n  }\n`;\n\nconst BodyBd = styled(Flex)`\n  ${setSpace(\"mvl\")};\n  a {\n    color: ${({ theme }) => theme.actionColor};\n    text-decoration: underline;\n  }\n`;\n\nconst BodyFt = styled.div`\n  ${setSpace(\"mth\")};\n  ${setType(\"s\")};\n`;\n\nconst Label = styled.h2`\n  ${setSpace(\"mbs\")};\n  ${setType(\"s\")};\n  color: ${({ theme }) => theme.dimmedColor};\n`;\n\nconst Name = styled.p`\n  ${setType(\"h\")};\n  font-weight: 800;\n  color: ${({ theme }) => theme.titleColor};\n  text-transform: uppercase;\n`;\n\nconst Tagline = styled.p`\n  ${setSpace(\"mbl\")};\n  ${setType(\"l\")};\n  font-weight: 600;\n  color: ${({ theme }) => theme.titleColor};\n`;\n\nconst Description = styled.div`\n  color: ${({ theme }) => theme.titleColor};\n  p {\n    &:not(:last-child) {\n      ${setSpace(\"mbm\")};\n    }\n  }\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    font-weight: 800;\n  }\n  a {\n    color: ${({ theme }) => theme.actionColor};\n  }\n  em {\n    font-style: italic;\n  }\n  strong {\n    color: ${({ theme }) => theme.titleColor};\n    font-weight: 800;\n  }\n  ul,\n  ol {\n    ${setType(\"s\")};\n  }\n  ul li:before {\n    ${setSpace(\"mrs\")};\n    color: ${({ theme }) => theme.color};\n    content: \"–\";\n    display: inline-block;\n  }\n  ol li {\n    list-style: decimal;\n  }\n  ${breakpoint.phone} {\n    ${setSpace(\"mbl\")};\n  }\n`;\n\nconst Meta = styled.p`\n  ${setType(\"s\")};\n  color: ${({ theme }) => theme.titleColor};\n  font-weight: 800;\n  text-transform: uppercase;\n`;\n\nconst Awards = styled.div`\n  ${setSpace(\"mtl\")};\n  ${setType(\"s\")};\n  color: ${({ theme }) => theme.titleColor};\n  li:before {\n    ${setSpace(\"mrx\")};\n    color: ${({ theme }) => theme.dimmedColor};\n    content: \"—\";\n  }\n  strong {\n    font-weight: 600;\n  }\n  i {\n    color: ${({ theme }) => theme.dimmedColor};\n  }\n`;\n\nconst Lists = styled.div`\n  ${setSpace(\"mtl\")};\n  ${setType(\"s\")};\n  color: ${({ theme }) => theme.titleColor};\n  display: flex;\n  & > * {\n    flex: 0 0 50%;\n  }\n  li:before {\n    ${setSpace(\"mrx\")};\n    color: ${({ theme }) => theme.dimmedColor};\n    content: \"—\";\n  }\n  i {\n    color: ${({ theme }) => theme.dimmedColor};\n  }\n`;\n\nconst ProjectItemTpl = (props: PageProps<Queries.PortfolioItemsByUIDQuery>) => {\n  const portfolioItem = props.data.markdownRemark;\n  const genericCover = props.data.defaultCover.edges[0].node.childImageSharp;\n  const { frontmatter, html } = portfolioItem ?? {};\n  const {\n    application,\n    awards,\n    bifpresents,\n    cover,\n    date,\n    slides,\n    link,\n    needs,\n    code,\n    source,\n    tagline,\n    timeframe,\n    title,\n  } = frontmatter ?? {};\n\n  const displayGallery = () => {\n    const images = [];\n    if (cover?.childImageSharp?.gatsbyImageData) {\n      images.push(cover.childImageSharp.gatsbyImageData);\n    }\n    if (slides) {\n      slides.forEach((slide) =>\n        images.push(slide?.childImageSharp?.gatsbyImageData)\n      );\n    }\n    return (\n      <Gallery images={images} defaultImage={genericCover!.gatsbyImageData} />\n    );\n  };\n\n  return (\n    <>\n      <Helmet {...props} title={title ?? \"\"} />\n      <Layout {...props}>\n        <Header>\n          <span className=\"small\">BIFFUD Presents</span>\n          <h1 className=\"hero\">{bifpresents}</h1>\n          <span className=\"small\">{date}</span>\n        </Header>\n        <Body>\n          <Tile space=\"h\">\n            <BodyHd>\n              <div className=\"sideA\">\n                <div className=\"name\">\n                  <Label>Project name</Label>\n                  <Name>{title}</Name>\n                </div>\n              </div>\n              <div className=\"sideB\">\n                <div className=\"time\">\n                  <Label>Timeframe</Label>\n                  <Meta>{timeframe}</Meta>\n                </div>\n                <div className=\"code\">\n                  <Label>Code</Label>\n                  <Meta>{code}</Meta>\n                </div>\n              </div>\n            </BodyHd>\n            <BodyBd>\n              <div className=\"sideA\">\n                <Label>Tagline</Label>\n                <Tagline>{tagline}</Tagline>\n                <Label>Description</Label>\n                <Description dangerouslySetInnerHTML={{ __html: html ?? \"\"}} />\n              </div>\n              <div className=\"sideB\">\n                <Label>Proofs of existence</Label>\n                {displayGallery()}\n                {awards && awards.length > 0 && (\n                  <Awards>\n                    <Label>Proofs of excellence</Label>\n                    <ul>\n                      {awards.map(({ name, url, description }, i) => {\n                        if (!name) return null;\n                        const AwardName = url ? (\n                          <>\n                            <a\n                              href={url}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              <strong>{name}</strong>\n                            </a>{\" \"}\n                            <Icon name=\"popout\" />\n                          </>\n                        ) : (\n                          <strong>{name}</strong>\n                        );\n\n                        return (\n                          <li key={`${name}_${i}`}>\n                            {AwardName}\n                            {description ? ` ${description}` : \"\"}\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  </Awards>\n                )}\n                <Lists>\n                  {source || application ? (\n                    <div className=\"sideB\" style={{ padding: \"0\" }}>\n                      <Label>More proofs</Label>\n                      <ul>\n                        {source ? (\n                          <li>\n                            <a\n                              href={source}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              Source code\n                            </a>{\" \"}\n                            <Icon name=\"popout\" />\n                          </li>\n                        ) : null}\n                        {application ? (\n                          <li>\n                            <a\n                              href={application}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              BIFFUD Application\n                            </a>{\" \"}\n                            <Icon name=\"popout\" />\n                          </li>\n                        ) : null}\n                      </ul>\n                    </div>\n                  ) : null}\n                  {Object.keys(needs).length > 0 ? (\n                    <div className=\"sideB\" style={{ padding: \"0\" }}>\n                      <Label>Needs</Label>\n                      <ul>\n                        {Object.keys(needs).map((need) => {\n                          const dict = {\n                            code: \"Code\",\n                            graphic: \"Graphic Design\",\n                            money: \"Money\",\n                            users: \"Users\",\n                            uxui: \"UX / UI Design\",\n                          };\n                          if (needs[need]) {\n                            return (\n                              <li key={need}>\n                                {need !== \"other\" ? dict[need] : needs[need]}\n                              </li>\n                            );\n                          }\n                          return null;\n                        })}\n                      </ul>\n                    </div>\n                  ) : null}\n                </Lists>\n              </div>\n            </BodyBd>\n            <BodyFt>\n              <Actionbar>\n                {link ? (\n                  <div>\n                    <Action button primary href={link}>\n                      Launch project\n                    </Action>\n                  </div>\n                ) : null}\n                <div>\n                  <Action href=\"https://patreon.com/biffud\" target=\"_blank\">\n                    Donate to support\n                  </Action>\n                </div>\n              </Actionbar>\n            </BodyFt>\n          </Tile>\n        </Body>\n      </Layout>\n    </>\n  );\n};\n\nexport default ProjectItemTpl;\n\nexport const pageQuery = graphql`\n  query PortfolioItemsByUID($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        active\n        application\n        slides {\n          childImageSharp {\n            gatsbyImageData(\n              width: 600\n              quality: 90\n              placeholder: DOMINANT_COLOR\n              layout: CONSTRAINED\n            )\n          }\n        }\n        bifpresents\n        date(formatString: \"MMM YYYY\")\n        link\n        code\n        source\n        tagline\n        timeframe\n        title\n        uid\n        awards {\n          name\n          url\n          description\n        }\n        needs {\n          code\n          graphic\n          money\n          uxui\n          users\n          other\n        }\n        cover {\n          childImageSharp {\n            gatsbyImageData(\n              width: 600\n              quality: 90\n              placeholder: DOMINANT_COLOR\n              layout: CONSTRAINED\n            )\n          }\n        }\n      }\n    }\n    defaultCover: allFile(\n      filter: { relativePath: { eq: \"images/default-cover.png\" } }\n    ) {\n      edges {\n        node {\n          childImageSharp {\n            gatsbyImageData(\n              width: 600\n              quality: 90\n              placeholder: DOMINANT_COLOR\n              layout: CONSTRAINED\n            )\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["Flex","styled","div","withConfig","displayName","componentId","breakpoint","tabletUp","setSpace","BodyHd","phone","BodyBd","_ref","theme","actionColor","BodyFt","setType","Label","h2","_ref2","dimmedColor","Name","p","_ref3","titleColor","Tagline","_ref4","Description","_ref5","_ref6","_ref7","_ref8","color","Meta","_ref9","Awards","_ref10","_ref11","_ref12","Lists","_ref13","_ref14","_ref15","props","portfolioItem","data","markdownRemark","genericCover","defaultCover","edges","node","childImageSharp","frontmatter","html","application","awards","bifpresents","cover","date","slides","link","needs","code","source","tagline","timeframe","title","React","Helmet","Object","assign","Layout","Header","className","Body","Tile","space","dangerouslySetInnerHTML","__html","displayGallery","_cover$childImageShar","images","gatsbyImageData","push","forEach","slide","_slide$childImageShar","Gallery","defaultImage","length","map","_ref16","i","name","url","description","AwardName","href","target","rel","Icon","key","style","padding","keys","need","dict","graphic","money","users","uxui","Actionbar","Action","button","primary"],"sourceRoot":""}