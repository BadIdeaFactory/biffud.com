{"version":3,"file":"component---lib-ui-templates-blog-post-tpl-js-dfc5c4d9a96e725ecf12.js","mappings":"gNAM2C,IAEtBA,EAAW,SAAAC,GAC9B,SAAAD,EAAYE,GAAQ,IAADC,EACjBA,EAAAF,EAAAG,KAAA,KAAMF,IAAM,KACZ,MAAMG,EAA8B,IAAhBC,KAAKC,SAMvB,MALoB,oBAAXC,SACTL,EAAKM,KAAON,EAAKM,KAAKC,KAAIP,IAE5BA,EAAKQ,MAAQ,CACXN,eACAF,CACJ,EAACS,EAAAA,EAAAA,GAAAZ,EAAAC,GAAA,IAAAY,EAAAb,EAAAc,UAsCA,OAtCAD,EAEDJ,KAAA,WACEM,KAAKC,UAASC,IAAS,CACrBZ,YAAaY,EAAUZ,YAA8B,GAAhBC,KAAKC,SAAgB,KAE9D,EAACM,EAEDK,OAAA,WACE,MAAMC,EAAWJ,KAAKb,MAAMkB,KAAKC,gBAC3B,YAAEC,EAAW,KAAEC,GAASJ,GACxB,MAAEK,EAAK,KAAEC,EAAI,MAAEC,GAAUJ,EAC/B,OAAOK,EAAAA,cAAAA,EAAAA,SAAA,KACLA,EAAAA,cAACC,EAAAA,GAAMC,OAAAC,OAAA,GAAKf,KAAKb,MAAK,CAAEwB,MAAOA,KAC/BC,EAAAA,cAACI,EAAAA,GAAWhB,KAAKb,MACfyB,EAAAA,cAACK,EAAAA,GAAM,KACLL,EAAAA,cAAA,QAAMM,UAAU,SAAQ,iBACPlB,KAAKJ,MAAMN,YAAY6B,QAAQ,GAAG,YAEnDP,EAAAA,cAAA,MAAIM,UAAU,QAAQP,GACtBC,EAAAA,cAAA,QAAMM,UAAU,SAASR,IAE3BE,EAAAA,cAACQ,EAAAA,GAAI,CACHC,MAAO,CACLC,WAAY,OACZC,YAAa,OACbC,SAAU,UAGXf,EACCG,EAAAA,cAACa,EAAAA,EAAW,CAACC,MAAOjB,EAAMkB,gBAAgBC,gBAAiBC,IAAKlB,IAC9D,KACJC,EAAAA,cAACkB,EAAAA,GAAI,CAACC,MAAM,KACVnB,EAAAA,cAACoB,EAAAA,GAAI,CAACC,wBAAyB,CAAEC,OAAQ1B,QAKnD,EAACvB,CAAA,CAhD6B,CAASkD,EAAAA,U","sources":["webpack://biffud.com/./lib/ui/templates/BlogPostTpl.js"],"sourcesContent":["import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Copy, Tile } from \"ui/components\";\n\nexport default class BlogPostTpl extends Component {\n  constructor(props) {\n    super(props);\n    const readingTime = Math.random() * 300;\n    if (typeof window !== \"undefined\") {\n      this.tick = this.tick.bind(this);\n    }\n    this.state = {\n      readingTime\n    };\n  }\n\n  tick() {\n    this.setState(prevState => ({\n      readingTime: prevState.readingTime + Math.random() * 15 - 4\n    }));\n  }\n\n  render() {\n    const blogPost = this.props.data.markdownRemark;\n    const { frontmatter, html } = blogPost;\n    const { cover, date, title } = frontmatter;\n    return <>\n      <Helmet {...this.props} title={title} />\n      <Layout {...this.props}>\n        <Header>\n          <span className=\"small\">\n            Reading Time: {this.state.readingTime.toFixed(2)} seconds\n          </span>\n          <h1 className=\"hero\">{title}</h1>\n          <span className=\"small\">{date}</span>\n        </Header>\n        <Body\n          style={{\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            maxWidth: \"900px\"\n          }}\n        >\n          {cover ? (\n            <GatsbyImage image={cover.childImageSharp.gatsbyImageData} alt={title} />\n          ) : null}\n          <Tile space=\"h\">\n            <Copy dangerouslySetInnerHTML={{ __html: html }} />\n          </Tile>\n        </Body>\n      </Layout>\n    </>;\n  }\n}\n\nBlogPostTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`query BlogPostsByUID($uid: String!) {\n  markdownRemark(frontmatter: {uid: {eq: $uid}}) {\n    html\n    frontmatter {\n      uid\n      date(formatString: \"MMMM DD, YYYY\")\n      title\n      cover {\n        childImageSharp {\n          gatsbyImageData(\n            width: 900\n            quality: 90\n            placeholder: DOMINANT_COLOR\n            layout: CONSTRAINED\n          )\n        }\n      }\n    }\n  }\n}`;\n"],"names":["BlogPostTpl","_Component","props","_this","call","readingTime","Math","random","window","tick","bind","state","_inheritsLoose","_proto","prototype","this","setState","prevState","render","blogPost","data","markdownRemark","frontmatter","html","cover","date","title","React","Helmet","Object","assign","Layout","Header","className","toFixed","Body","style","marginLeft","marginRight","maxWidth","GatsbyImage","image","childImageSharp","gatsbyImageData","alt","Tile","space","Copy","dangerouslySetInnerHTML","__html","Component"],"sourceRoot":""}