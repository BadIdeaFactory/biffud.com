{"version":3,"file":"component---lib-ui-templates-media-tpl-tsx-6034c485589764aea1c0.js","mappings":"8LAUA,MAAMA,EAAeC,EAAAA,QAAOC,GAAEC,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAATJ,CAAS,kIAC1BK,EAAAA,GAAWC,UAaTC,GAAUP,EAAAA,EAAAA,SAAOQ,EAAAA,IAAKN,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAZJ,CAAY,6DACxBS,EAAAA,EAAAA,IAAQ,KAGRJ,EAAAA,GAAWK,OACTC,EAAAA,EAAAA,IAAS,QAEXC,IAAA,IAAC,WAAEC,GAAYD,EAAA,OACfC,EACI,qIAMA,EAAE,IAGJC,EAAed,EAAAA,QAAOe,IAAGb,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAVJ,CAAU,6CAC3BW,EAAAA,EAAAA,IAAS,QACSK,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,WAAW,IAIhDC,EAAYnB,EAAAA,QAAOe,IAAGb,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAVJ,CAAU,+GAMtBS,EAAAA,EAAAA,IAAQ,MACDW,IAAA,IAAC,MAAEH,GAAOG,EAAA,OAAKH,EAAMC,WAAW,IAKvCG,EAAYrB,EAAAA,QAAOe,IAAGb,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAVJ,CAAU,6BACxBW,EAAAA,EAAAA,IAAS,QACFW,IAAA,IAAC,MAAEL,GAAOK,EAAA,OAAKL,EAAMM,UAAU,GACtCC,EAAAA,IACEb,EAAAA,EAAAA,IAAS,QA0Df,UAtDkBc,IAA4C,IAAAC,EAAAC,EAC5D,MAAM,SAAEC,GAAaH,EAAMI,MACrB,YAAEC,GAAyC,QAA5BJ,EAAGD,EAAMI,KAAKE,sBAAc,IAAAL,EAAAA,EAAI,CAAC,EAEtD,OACEM,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACC,EAAAA,GAAMC,OAAAC,OAAA,GAAKV,EAAK,CAAEW,MAAyB,QAApBT,EAAEG,aAAW,EAAXA,EAAaM,aAAK,IAAAT,EAAAA,EAAI,MAChDK,EAAAA,cAACK,EAAAA,GAAWZ,EACVO,EAAAA,cAACM,EAAAA,GAAM,KACLN,EAAAA,cAAA,MAAIO,UAAU,QAAQT,aAAW,EAAXA,EAAaU,SACnCR,EAAAA,cAAA,KAAGO,UAAU,QAAQT,aAAW,EAAXA,EAAaW,aAEpCT,EAAAA,cAACU,EAAAA,GAAI,KACHV,EAAAA,cAACjC,EAAY,KACV6B,EAASe,MAAMC,KAAIC,IAAc,IAAAC,EAAAC,EAAA,IAAb,KAAEC,GAAMH,EAC3B,MAAM,KAAEI,GAASD,GACX,MAAEE,EAAK,YAAEC,EAAW,OAAEC,EAAM,UAAEC,EAAS,MAAEjB,GAC7B,QADoCU,EACpDE,EAAKlB,mBAAW,IAAAgB,EAAAA,EAAI,CAAC,EAEvB,OACEd,EAAAA,cAACzB,EAAO,CAAC+C,GAAG,KAAKzC,WAAYwC,SAAAA,EAAoBE,IAAKnB,GACpDJ,EAAAA,cAACxB,EAAAA,GAAI,CAACgD,KAAMJ,EAAQK,OAAO,SAASH,GAAG,KACpCJ,SAAsB,QAAjBH,EAALG,EAAOQ,uBAAe,IAAAX,GAAtBA,EAAwBY,gBACvB3B,EAAAA,cAAClB,EAAY,KACXkB,EAAAA,cAAC4B,EAAAA,EAAW,CACVC,MAAOX,EAAMQ,gBAAgBC,gBAC7BG,IAAK1B,QAAAA,EAAS,MAGhB,KACJJ,EAAAA,cAACb,EAAS,KACRa,EAAAA,cAAA,MAAIO,UAAU,SAASH,GACvBJ,EAAAA,cAAA,YACEA,EAAAA,cAAC+B,EAAAA,GAAI,CAACC,KAAK,SAASC,KAAK,wBAG7BjC,EAAAA,cAACX,EAAS,KACP4B,EACCjB,EAAAA,cAACR,EAAAA,GAAI,CAAC0C,wBAAyB,CAAEC,OAAQlB,KACvC,KAEJjB,EAAAA,cAAA,SAAG,MAAImB,KAGH,OAMnB,C","sources":["webpack://biffud.com/./lib/ui/templates/MediaTpl.tsx"],"sourcesContent":["import React from \"react\";\nimport { graphql, type PageProps } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport styled from \"styled-components\";\n\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Copy, Icon, Tile } from \"ui/components\";\n\nconst MentionsList = styled.ol`\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\ninterface MentionProps {\n  readonly $highlight: boolean;\n}\n\nconst Mention = styled(Tile)<MentionProps>`\n  ${setType(\"m\")};\n  grid-row-end: span 1;\n  position: relative;\n  ${breakpoint.phone} {\n    ${setSpace(\"mbl\")};\n  }\n  ${({ $highlight }) =>\n    $highlight\n      ? `\n        grid-column: 1 / span 2;\n        grid-row: 1 / 2;\n        justify-self: stretch;\n        align-self: stretch;\n      `\n      : ``};\n`;\n\nconst MentionCover = styled.div`\n  ${setSpace(\"mbm\")};\n  border: 2px solid ${({ theme }) => theme.actionColor};\n  display: block;\n`;\n\nconst MentionHd = styled.div`\n  align-items: flex-start;\n  display: flex;\n  justify-content: space-between;\n  h2,\n  span {\n    ${setType(\"l\")};\n    color: ${({ theme }) => theme.actionColor};\n    font-weight: 800;\n  }\n`;\n\nconst MentionBd = styled.div`\n  ${setSpace(\"mts\")};\n  color: ${({ theme }) => theme.titleColor};\n  ${Copy} {\n    ${setSpace(\"mbs\")};\n  }\n`;\n\nconst MediaTpl = (props: PageProps<Queries.MediaTplQuery>) => {\n  const { mentions } = props.data;\n  const { frontmatter } = props.data.markdownRemark ?? {};\n\n  return (\n    <>\n      <Helmet {...props} title={frontmatter?.title ?? \"\"} />\n      <Layout {...props}>\n        <Header>\n          <h1 className=\"hero\">{frontmatter?.heading}</h1>\n          <p className=\"para\">{frontmatter?.subheading}</p>\n        </Header>\n        <Body>\n          <MentionsList>\n            {mentions.edges.map(({ node }) => {\n              const { html } = node;\n              const { cover, publication, source, highlight, title } =\n                node.frontmatter ?? {};\n\n              return (\n                <Mention as=\"li\" $highlight={highlight ?? false} key={title}>\n                  <Tile href={source} target=\"_blank\" as=\"a\">\n                    {cover?.childImageSharp?.gatsbyImageData ? (\n                      <MentionCover>\n                        <GatsbyImage\n                          image={cover.childImageSharp.gatsbyImageData}\n                          alt={title ?? \"\"}\n                        />\n                      </MentionCover>\n                    ) : null}\n                    <MentionHd>\n                      <h2 className=\"title\">{title}</h2>\n                      <span>\n                        <Icon name=\"popout\" text=\"Read the article…\" />\n                      </span>\n                    </MentionHd>\n                    <MentionBd>\n                      {html ? (\n                        <Copy dangerouslySetInnerHTML={{ __html: html }} />\n                      ) : null}\n                      {/* eslint-disable-next-line no-irregular-whitespace */}\n                      <p>by {publication}</p>\n                    </MentionBd>\n                  </Tile>\n                </Mention>\n              );\n            })}\n          </MentionsList>\n        </Body>\n      </Layout>\n    </>\n  );\n};\n\nexport default MediaTpl;\n\nexport const pageQuery = graphql`\n  query MediaTpl($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n      }\n    }\n    mentions: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"//pages/fame/.*mention.md/\" } }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            date(formatString: \"MMMM YYYY\")\n            title\n            cover {\n              childImageSharp {\n                gatsbyImageData(\n                  height: 240\n                  quality: 100\n                  placeholder: DOMINANT_COLOR\n                  layout: FULL_WIDTH\n                )\n              }\n            }\n            link\n            highlight\n            publication\n            source\n            uid\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["MentionsList","styled","ol","withConfig","displayName","componentId","breakpoint","tabletUp","Mention","Tile","setType","phone","setSpace","_ref","$highlight","MentionCover","div","_ref2","theme","actionColor","MentionHd","_ref3","MentionBd","_ref4","titleColor","Copy","props","_props$data$markdownR","_frontmatter$title","mentions","data","frontmatter","markdownRemark","React","Helmet","Object","assign","title","Layout","Header","className","heading","subheading","Body","edges","map","_ref5","_node$frontmatter","_cover$childImageShar","node","html","cover","publication","source","highlight","as","key","href","target","childImageSharp","gatsbyImageData","GatsbyImage","image","alt","Icon","name","text","dangerouslySetInnerHTML","__html"],"sourceRoot":""}