{"version":3,"file":"component---lib-ui-templates-home-tpl-tsx-2a9fd0bbc61066eabe0c.js","mappings":"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","sources":["webpack://biffud.com/./lib/ui/templates/ofHome/Section.tsx","webpack://biffud.com/./lib/ui/templates/ofHome/Clients.tsx","webpack://biffud.com/./lib/ui/templates/ofHome/Projects.tsx","webpack://biffud.com/./lib/ui/templates/ofHome/Services.tsx","webpack://biffud.com/./lib/ui/templates/ofHome/Testimonials.tsx","webpack://biffud.com/./lib/ui/templates/HomeTpl.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nimport { setSpace } from \"ui/mixins\";\n\nconst Section = styled.div`\n  ${setSpace(\"mvk\")};\n  display: flex;\n  justify-content: center;\n  .el {\n    width: 100%;\n  }\n  &:not(:last-child) {\n    ${setSpace(\"pbk\")};\n  }\n`;\n\nexport default Section;\n","import React from \"react\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport styled from \"styled-components\";\n\nimport { Tile } from \"ui/components\";\nimport { Header } from \"ui/partials\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport Section from \"./Section\";\n\nconst Element = styled(Section)``;\nconst Title = styled.h1`\n  &.hero {\n    ${setType(\"h\")};\n  }\n`;\nconst Items = styled.ul`\n  width: 100%;\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n    & > * {\n      grid-row-end: span 1;\n    }\n  }\n`;\nconst Item = styled.li`\n  ${breakpoint.phone} {\n    &:not(:last-child) {\n      ${setSpace(\"mbx\")};\n    }\n  }\n`;\nconst ItemTitle = styled.h3`\n  ${setSpace(\"mbm\")};\n`;\nconst ItemText = styled.div`\n  color: ${({ theme }) => theme.color};\n  strong {\n    font-weight: 600;\n  }\n`;\n\ninterface ClientsProps {\n  clients: Queries.HomeTplQuery[\"clients\"][\"edges\"];\n  subtitle: string;\n  title: string;\n}\n\nfunction Clients(props: ClientsProps) {\n  const { clients, title, subtitle } = props;\n\n  return (\n    <Element as=\"section\">\n      <div className=\"el\">\n        <Header className=\"hd\">\n          <Title className=\"hero\">{title}</Title>\n          {subtitle ? <p className=\"para\">{subtitle}</p> : null}\n        </Header>\n        <Items>\n          {clients.map(({ node }) => {\n            const client = node.frontmatter;\n            return (\n              <Item key={node.id}>\n                <Tile href={client.link} target=\"_blank\" as=\"a\">\n                  <ItemTitle>\n                    <GatsbyImage\n                      image={client.logo.childImageSharp.gatsbyImageData}\n                      alt={client?.name ?? \"\"}\n                    />\n                  </ItemTitle>\n                  <ItemText\n                    dangerouslySetInnerHTML={{ __html: node.html ?? \"\" }}\n                  />\n                </Tile>\n              </Item>\n            );\n          })}\n        </Items>\n      </div>\n    </Element>\n  );\n}\n\nexport default Clients;\n","import { Link } from \"gatsby\";\nimport { GatsbyImage, type IGatsbyImageData } from \"gatsby-plugin-image\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { breakpoint } from \"ui/settings\";\nimport { Header } from \"ui/partials\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport { Tile, Icon } from \"ui/components\";\nimport Section from \"./Section\";\n\nconst Element = styled(Section)``;\nconst Title = styled.h1`\n  &.hero {\n    ${setType(\"h\")};\n  }\n`;\nconst Items = styled.ul`\n  width: 100%;\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fill, minmax(214px, 1fr));\n    margin-left: auto;\n    margin-right: auto;\n  }\n  ${breakpoint.desktopUp} {\n    grid-template-columns: repeat(auto-fill, minmax(291px, 1fr));\n  }\n`;\nconst Item = styled.li`\n  ${breakpoint.phone} {\n    &:not(:last-child) {\n      ${setSpace(\"mbx\")};\n    }\n  }\n`;\n\ninterface ItemImageProps {\n  readonly $hasPlaceholder: boolean;\n}\n\nconst ItemImage = styled.div<ItemImageProps>`\n  ${setSpace(\"mbm\")};\n  border: 2px solid ${({ theme }) => theme.actionColor};\n  position: relative;\n  ${({ $hasPlaceholder, theme }) =>\n    $hasPlaceholder\n      ? `\n    .thinking {\n      color: ${theme.actionColor};\n      display: inline-block;\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%);\n      i {\n        font-size: 80px !important;\n      }\n  `\n      : ``};\n`;\nconst ItemTitle = styled.div`\n  align-items: flex-start;\n  display: flex;\n  justify-content: space-between;\n  h3,\n  span {\n    ${setType(\"m\")};\n    color: ${({ theme }) => theme.actionColor};\n    font-weight: 800;\n    text-transform: uppercase;\n  }\n  h3 {\n    max-width: 75%;\n  }\n  span {\n    display: none;\n  }\n  ${breakpoint.desktopUp} {\n    span {\n      display: inline-block;\n    }\n  }\n`;\nconst ItemText = styled.p`\n  ${setSpace(\"mts\")};\n`;\n\ninterface ProjectsProps {\n  placeholder: IGatsbyImageData;\n  projects: ProjectList;\n  subtitle: string;\n  title: string;\n}\n\nfunction Projects(props: ProjectsProps) {\n  const { projects, title, subtitle } = props;\n  return (\n    <Element as=\"section\">\n      <div className=\"el\">\n        <Header className=\"hd\">\n          <Title className=\"hero\">{title}</Title>\n          {subtitle ? <p className=\"para\">{subtitle}</p> : null}\n        </Header>\n        <Items>\n          {projects.map(({ node }) => {\n            const project = node.frontmatter;\n\n            if (project === null) {\n              return null;\n            }\n\n            return (\n              <Item key={node.id}>\n                <Tile as={Link} to={`/projects/${project.uid}`}>\n                  <ItemImage $hasPlaceholder={!project.cover}>\n                    <GatsbyImage\n                      image={\n                        project.cover?.childImageSharp?.gatsbyImageData\n                          ? project.cover.childImageSharp.gatsbyImageData\n                          : props.placeholder\n                      }\n                      alt={project.title ?? \"\"}\n                    />\n                    {!project.cover ? (\n                      <span className=\"thinking\">\n                        <Icon name=\"thinking\" />\n                      </span>\n                    ) : null}\n                  </ItemImage>\n                  <ItemTitle>\n                    <h3 className=\"title\">{project.title}</h3>\n                    <span>\n                      <Icon name=\"arrow-right\" text=\"Read more…\" />\n                    </span>\n                  </ItemTitle>\n                  <ItemText>{project.tagline}</ItemText>\n                </Tile>\n              </Item>\n            );\n          })}\n        </Items>\n      </div>\n    </Element>\n  );\n}\n\nexport default Projects;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { breakpoint } from \"ui/settings\";\nimport { Header } from \"ui/partials\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport { Tile } from \"ui/components\";\nimport Section from \"./Section\";\n\nconst Element = styled(Section)``;\nconst Title = styled.h1`\n  &.hero {\n    ${setType(\"h\")};\n  }\n`;\nconst Items = styled.ul`\n  width: 100%;\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 10px;\n    grid-template-columns: repeat(auto-fill, minmax(330px, 1fr));\n    & > * {\n      grid-row-end: span 1;\n    }\n  }\n  ${breakpoint.desktopUp} {\n    grid-template-columns: repeat(auto-fill, minmax(221px, 1fr));\n  }\n`;\nconst Item = styled.li`\n  ${breakpoint.phone} {\n    &:not(:last-child) {\n      ${setSpace(\"mbx\")};\n    }\n  }\n`;\nconst ItemTitle = styled.h3`\n  ${setSpace(\"mbm\")};\n  ${setType(\"l\")};\n  font-weight: 800;\n`;\n\ninterface ServicesProps {\n  services: {\n    title: string;\n    text: string;\n  }[];\n  subtitle?: string;\n  title?: string;\n}\n\nfunction Services(props: ServicesProps) {\n  const { services, title, subtitle } = props;\n\n  return (\n    <Element as=\"section\">\n      <div className=\"el\">\n        <Header className=\"hd\">\n          <Title className=\"hero\">{title}</Title>\n          {subtitle ? <p className=\"para\">{subtitle}</p> : null}\n        </Header>\n        <Items>\n          {services.map((service, i) => (\n            <Item key={i}>\n              <Tile space=\"l\">\n                <ItemTitle className=\"TileTitle\">{service.title}</ItemTitle>\n                <p>{service.text}</p>\n              </Tile>\n            </Item>\n          ))}\n        </Items>\n      </div>\n    </Element>\n  );\n}\n\nexport default Services;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Tile } from \"ui/components\";\nimport { Header } from \"ui/partials\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport Section from \"./Section\";\n\nconst Element = styled(Section)``;\nconst Title = styled.h1`\n  &.hero {\n    ${setType(\"h\")};\n  }\n`;\nconst Items = styled.ul`\n  width: 100%;\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n    & > * {\n      grid-row-end: span 1;\n    }\n  }\n`;\n\ninterface ItemProp {\n  readonly $span: boolean\n}\n\nconst Item = styled.li<ItemProp>`\n  height: 100%;\n  .quote {\n    ${setSpace(\"mbs\")};\n    ${setSpace(\"pal\")};\n    position: relative;\n    &:after,\n    &:before {\n      color: ${({ theme }) => theme.background};\n      ${setType(\"k\")};\n      position: absolute;\n    }\n    &:before {\n      content: \"“\";\n      top: 0;\n      left: 0;\n    }\n    &:after {\n      content: \"”\";\n      bottom: 0;\n      right: 0;\n    }\n  }\n  .source {\n    ${setType(\"s\")};\n    text-align: right;\n  }\n  ${breakpoint.phone} {\n    &:not(:last-child) {\n      ${setSpace(\"mbx\")};\n    }\n  }\n  ${({ $span }) =>\n    $span ? `\n    grid-column: 1 / span 2;\n    grid-row: 1 / 2;\n    justify-self: stretch;\n    align-self: stretch;\n  `\n      : ``};\n`;\n\ninterface TestimonialsProps {\n  testimonials: {\n    source: string;\n    text: string;\n    span: boolean;\n  }[];\n  subtitle?: string;\n  title?: string;\n}\n\nfunction Testimonials(props: TestimonialsProps) {\n  const { testimonials, title, subtitle } = props;\n\n  return (\n    <Element as=\"section\">\n      <div className=\"el\">\n        <Header className=\"hd\">\n          <Title className=\"hero\">{title}</Title>\n          {subtitle ? <p className=\"para\">{subtitle}</p> : null}\n        </Header>\n        <Items>\n          {testimonials.map((testimonial, i) => (\n            <Item key={i} $span={testimonial.span}>\n              <Tile>\n                <blockquote className=\"quote\">\n                  <p>{testimonial.text}</p>\n                </blockquote>\n                <p className=\"source\">— {testimonial.source}</p>\n              </Tile>\n            </Item>\n          ))}\n        </Items>\n      </div>\n    </Element>\n  );\n}\n\nexport default Testimonials;\n","import React from \"react\";\nimport { graphql, type PageProps } from \"gatsby\";\n\nimport { Action, Actionbar } from \"ui/components\";\nimport { Helmet, Layout, Pitch } from \"ui/partials\";\n\nimport Clients from \"./ofHome/Clients\";\nimport Projects from \"./ofHome/Projects\";\nimport Services from \"./ofHome/Services\";\nimport Testimonials from \"./ofHome/Testimonials\";\n\nconst HomeTpl = (props: PageProps<Queries.HomeTplQuery>) => {\n  const { frontmatter } = props.data.markdownRemark ?? {};\n  const { clients, projects, defaultCover } = props.data;\n  const genericCover = defaultCover.edges[0].node.childImageSharp;\n\n  return (\n    <>\n      <Helmet {...props} title={frontmatter?.title ?? \"\"} />\n      <Layout {...props}>\n        <Pitch>\n          <h1 className=\"hero\">{frontmatter?.heading}</h1>\n          <Actionbar>\n            <Action\n              button\n              href=\"https://github.com/BadIdeaFactory/corporate/issues?q=is%3Aissue+is%3Aopen+label%3A%22project+application%22\"\n              target=\"_blank\"\n            >\n              Submit an idea\n            </Action>\n            <Action href=\"https://patreon.com/biffud\" target=\"_blank\">\n              Give us money\n            </Action>\n            <span className=\"join\">or</span>\n            <Action to=\"contact\">Engage our services</Action>\n          </Actionbar>\n        </Pitch>\n        <Projects\n          placeholder={genericCover?.gatsbyImageData}\n          projects={projects.edges}\n          subtitle={frontmatter?.projectsSubtitle}\n          title={frontmatter?.projectsTitle}\n        />\n        <Clients\n          title={frontmatter?.clientsTitle ?? \"\"}\n          subtitle={frontmatter?.clientsSubtitle ?? \"\"}\n          clients={clients.edges}\n        />\n        <Services\n          title={frontmatter?.servicesTitle}\n          subtitle={frontmatter?.servicesSubtitle}\n          services={frontmatter?.services}\n        />\n        <Services\n          title={frontmatter?.goodatTitle}\n          subtitle={frontmatter?.goodatSubtitle}\n          services={frontmatter?.goodat}\n        />\n        <Testimonials\n          title={frontmatter?.testimonialsTitle}\n          subtitle={frontmatter?.testimonialsSubtitle}\n          testimonials={frontmatter?.testimonials}\n        />\n      </Layout>\n    </>\n  );\n};\n\nexport default HomeTpl;\n\nexport const pageQuery = graphql`\n  query HomeTpl($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        contactCta\n        projectsCta\n        servicesTitle\n        servicesSubtitle\n        services {\n          title\n          text\n        }\n        testimonialsTitle\n        testimonialsSubtitle\n        testimonials {\n          text\n          source\n          span\n        }\n        goodatTitle\n        goodatSubtitle\n        goodat {\n          title\n          text\n        }\n        clientsSubtitle\n        clientsTitle\n        projectsSubtitle\n        projectsTitle\n      }\n    }\n    defaultCover: allFile(\n      filter: { relativePath: { eq: \"images/default-cover.png\" } }\n    ) {\n      edges {\n        node {\n          childImageSharp {\n            gatsbyImageData(\n              width: 800\n              height: 600\n              quality: 90\n              placeholder: DOMINANT_COLOR\n              transformOptions: { cropFocus: CENTER }\n              layout: CONSTRAINED\n            )\n          }\n        }\n      }\n    }\n    clients: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/pages/clients/.*client.md/\" } }\n      sort: { frontmatter: { score: DESC } }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            uid\n            name\n            score\n            link\n            logo {\n              childImageSharp {\n                gatsbyImageData(\n                  height: 40\n                  quality: 80\n                  placeholder: DOMINANT_COLOR\n                  layout: FIXED\n                )\n              }\n            }\n          }\n        }\n      }\n    }\n    projects: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/pages/projects/.*project.md/\" } }\n      limit: 3\n      sort: [\n        { frontmatter: { feature: DESC } }\n        { frontmatter: { score: ASC } }\n        { frontmatter: { date: ASC } }\n      ]\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            uid\n            title\n            active\n            feature\n            tagline\n            code\n            cover {\n              childImageSharp {\n                gatsbyImageData(\n                  width: 800\n                  height: 600\n                  quality: 90\n                  placeholder: DOMINANT_COLOR\n                  transformOptions: { cropFocus: CENTER }\n                  layout: CONSTRAINED\n                )\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["styled","div","withConfig","displayName","componentId","setSpace","Element","Section","Title","h1","setType","Items","ul","breakpoint","tabletUp","Item","li","phone","ItemTitle","h3","ItemText","_ref","theme","color","props","clients","title","subtitle","React","as","className","Header","map","_ref2","_client$name","_node$html","node","client","frontmatter","key","id","Tile","href","link","target","GatsbyImage","image","logo","childImageSharp","gatsbyImageData","alt","name","dangerouslySetInnerHTML","__html","html","desktopUp","ItemImage","actionColor","$hasPlaceholder","_ref3","p","projects","_ref4","_project$cover","_project$cover$childI","_project$title","project","Link","to","uid","cover","placeholder","Icon","text","tagline","services","service","i","space","background","$span","testimonials","testimonial","span","source","_props$data$markdownR","_frontmatter$title","_frontmatter$clientsT","_frontmatter$clientsS","data","markdownRemark","defaultCover","genericCover","edges","Helmet","Object","assign","Layout","Pitch","heading","Actionbar","Action","button","Projects","projectsSubtitle","projectsTitle","Clients","clientsTitle","clientsSubtitle","Services","servicesTitle","servicesSubtitle","goodatTitle","goodatSubtitle","goodat","Testimonials","testimonialsTitle","testimonialsSubtitle"],"sourceRoot":""}