{"version":3,"file":"component---lib-ui-templates-faq-listing-tpl-js-20278204d0b319e29556.js","mappings":"yNASA,MAAMA,GAAYC,EAAAA,EAAAA,SAAOC,EAAAA,IAAKC,WAAA,CAAAC,YAAA,2BAAAC,YAAA,gBAAZJ,CAAY,yEAC1BK,EAAAA,EAAAA,IAAS,QACAC,IAAA,IAAC,UAAEC,GAAWD,EAAA,OAAMC,EAAY,QAAU,MAAM,IAI3D,IAEmBC,EAAa,SAAAC,GAChC,SAAAD,EAAYE,GAAQ,IAADC,EAK0B,OAJ3CA,EAAAF,EAAAG,KAAA,KAAMF,IAAM,MACPG,MAAQ,CACXC,IAAK,eAEPH,EAAKI,UAAYJ,EAAKI,UAAUC,KAAIL,GAAOA,CAC7C,EAACM,EAAAA,EAAAA,GAAAT,EAAAC,GAAA,IAAAS,EAAAV,EAAAW,UAmDA,OAnDAD,EAEDH,UAAA,SAAUK,GACRC,KAAKC,SAAS,CAAER,IAAKM,GACvB,EAACF,EAEDK,OAAA,WACE,MAAM,YAAEC,GAAgBH,KAAKX,MAAMe,KAAKC,eAClCC,EAAsBN,KAAKX,MAAMe,KAAKG,WAAWC,MAAM,GAAGC,KAAKC,KAC/DC,EAAuBX,KAAKX,MAAMe,KAAKQ,YAAYJ,MAAM,GAAGC,KAAKC,KACvE,OACEG,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACC,EAAAA,GAAMC,OAAAC,OAAA,GAAKhB,KAAKX,MAAK,CAAE4B,MAAM,gCAC9BJ,EAAAA,cAACK,EAAAA,GAAWlB,KAAKX,MACfwB,EAAAA,cAACM,EAAAA,GAAM,KACLN,EAAAA,cAAA,MAAIO,UAAU,QAAQjB,EAAYkB,SAClCR,EAAAA,cAAA,KAAGO,UAAU,QAAQjB,EAAYmB,aAEnCT,EAAAA,cAACU,EAAAA,GAAI,CACHC,MAAO,CACLC,WAAY,OACZC,YAAa,OACbC,SAAU,UAGZd,EAAAA,cAACe,EAAAA,GAAI,CAACC,MAAO,GACXhB,EAAAA,cAACiB,EAAAA,GAAG,CACFC,YAAaA,IAAM/B,KAAKN,UAAU,eAClCsC,SAA6B,gBAAnBhC,KAAKR,MAAMC,KAEpBU,EAAY8B,gBAEfpB,EAAAA,cAACiB,EAAAA,GAAG,CACFC,YAAaA,IAAM/B,KAAKN,UAAU,cAClCsC,SAA6B,eAAnBhC,KAAKR,MAAMC,KAEpBU,EAAY+B,gBAGjBrB,EAAAA,cAACnC,EAAS,CAACQ,UAA8B,gBAAnBc,KAAKR,MAAMC,KAC/BoB,EAAAA,cAACsB,EAAAA,GAAI,CACHC,wBAAyB,CAAEC,OAAQ1B,MAGvCE,EAAAA,cAACnC,EAAS,CAACQ,UAA8B,eAAnBc,KAAKR,MAAMC,KAC/BoB,EAAAA,cAACsB,EAAAA,GAAI,CAACC,wBAAyB,CAAEC,OAAQ/B,QAMrD,EAACnB,CAAA,CA1D+B,CAASmD,EAAAA,U","sources":["webpack://biffud.com/./lib/ui/templates/FAQListingTpl.js"],"sourcesContent":["import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Copy, Tabs, Tab, Tile } from \"ui/components\";\nimport { setSpace } from \"ui/mixins\";\n\nconst Questions = styled(Tile)`\n  ${setSpace(\"pah\")};\n  display: ${({ $isActive }) => ($isActive ? \"block\" : \"none\")};\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 900px;\n`;\n\nexport default class FAQListingTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tab: \"partnership\"\n    };\n    this.switchTab = this.switchTab.bind(this);\n  }\n\n  switchTab(str) {\n    this.setState({ tab: str });\n  }\n\n  render() {\n    const { frontmatter } = this.props.data.markdownRemark;\n    const membershipQuestions = this.props.data.membership.edges[0].node.html;\n    const partnershipQuestions = this.props.data.partnership.edges[0].node.html;\n    return (\n      <>\n        <Helmet {...this.props} title=\"Frequently Asked Questions\" />\n        <Layout {...this.props}>\n          <Header>\n            <h1 className=\"hero\">{frontmatter.heading}</h1>\n            <p className=\"para\">{frontmatter.subheading}</p>\n          </Header>\n          <Body\n            style={{\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              maxWidth: \"900px\"\n            }}\n          >\n            <Tabs count={2}>\n              <Tab\n                handleClick={() => this.switchTab(\"partnership\")}\n                isActive={this.state.tab === \"partnership\"}\n              >\n                {frontmatter.partnershipTab}\n              </Tab>\n              <Tab\n                handleClick={() => this.switchTab(\"membership\")}\n                isActive={this.state.tab === \"membership\"}\n              >\n                {frontmatter.membershipTab}\n              </Tab>\n            </Tabs>\n            <Questions $isActive={this.state.tab === \"partnership\"}>\n              <Copy\n                dangerouslySetInnerHTML={{ __html: partnershipQuestions }}\n              />\n            </Questions>\n            <Questions $isActive={this.state.tab === \"membership\"}>\n              <Copy dangerouslySetInnerHTML={{ __html: membershipQuestions }} />\n            </Questions>\n          </Body>\n        </Layout>\n      </>\n    );\n  }\n}\n\nFAQListingTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired,\n    membership: object.isRequired,\n    partnership: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query FAQTplQuery($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n        membershipTab\n        partnershipTab\n      }\n    }\n    membership: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//pages/question/membership/*/.*/*.md/\" }\n      }\n      sort: { frontmatter: { score: ASC } }\n    ) {\n      edges {\n        node {\n          id\n          html\n        }\n      }\n    }\n    partnership: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//pages/question/partnership/*/.*/*.md/\" }\n      }\n      sort: { frontmatter: { score: DESC } }\n    ) {\n      edges {\n        node {\n          id\n          html\n        }\n      }\n    }\n  }\n`;\n"],"names":["Questions","styled","Tile","withConfig","displayName","componentId","setSpace","_ref","$isActive","FAQListingTpl","_Component","props","_this","call","state","tab","switchTab","bind","_inheritsLoose","_proto","prototype","str","this","setState","render","frontmatter","data","markdownRemark","membershipQuestions","membership","edges","node","html","partnershipQuestions","partnership","React","Helmet","Object","assign","title","Layout","Header","className","heading","subheading","Body","style","marginLeft","marginRight","maxWidth","Tabs","count","Tab","handleClick","isActive","partnershipTab","membershipTab","Copy","dangerouslySetInnerHTML","__html","Component"],"sourceRoot":""}