{"version":3,"file":"component---lib-ui-templates-media-tpl-js-d6d58f38856f70f0b1b5.js","mappings":"2OAWMA,EAAeC,EAAAA,QAAAA,GAAAA,WAAH,iEAAGA,CAAH,kIACdC,EAAAA,GAAAA,UASEC,GAAUF,EAAAA,EAAAA,SAAOG,EAAAA,IAAV,uEAAGH,CAAH,6DACTI,EAAAA,EAAAA,IAAQ,KAGRH,EAAAA,GAAAA,OACEI,EAAAA,EAAAA,IAAS,QAEX,qBAAGC,UACM,uHAUPC,EAAeP,EAAAA,QAAAA,IAAAA,WAAH,iEAAGA,CAAH,6CACdK,EAAAA,EAAAA,IAAS,QACS,qBAAGG,MAAkBC,eAIrCC,EAAYV,EAAAA,QAAAA,IAAAA,WAAH,8DAAGA,CAAH,+GAMTI,EAAAA,EAAAA,IAAQ,MACD,qBAAGI,MAAkBC,eAK5BE,EAAYX,EAAAA,QAAAA,IAAAA,WAAH,8DAAGA,CAAH,6BACXK,EAAAA,EAAAA,IAAS,QACF,qBAAGG,MAAkBI,aAC5BC,EAAAA,IACER,EAAAA,EAAAA,IAAS,QAIMS,EAAAA,SAAAA,GACnB,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,GAFI,EA6DlB,OA9DkBF,EAAAA,EAAAA,GAAAA,EAAAA,GAIlB,YAEDG,OAAA,WACE,IAAQC,EAAaC,KAAKJ,MAAMK,KAAxBF,SACAG,EAAgBF,KAAKJ,MAAMK,KAAKE,eAAhCD,YACR,OACE,gCACE,gBAAC,KAAD,iBAAYF,KAAKJ,MAAjB,CAAwBQ,MAAOF,EAAYE,SAC3C,gBAAC,KAAWJ,KAAKJ,MACf,gBAAC,KAAD,KACE,sBAAIS,UAAU,QAAQH,EAAYI,SAClC,qBAAGD,UAAU,QAAQH,EAAYK,aAEnC,gBAAC,KAAD,KACE,gBAAC3B,EAAD,KACGmB,EAASS,MAAMC,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACbC,EAASD,EAATC,KACR,EAMID,EAAKR,YALPU,EADF,EACEA,MACAC,EAFF,EAEEA,YACAC,EAHF,EAGEA,OACA3B,EAJF,EAIEA,UACAiB,EALF,EAKEA,MAEF,OACE,gBAACrB,EAAD,CAASgC,GAAG,KAAK5B,UAAWA,GAC1B,gBAAC,KAAD,CAAM6B,KAAMF,EAAQG,OAAO,SAASF,GAAG,KACpCH,EACC,gBAACxB,EAAD,KACE,gBAAC,IAAD,CACE8B,MAAON,EAAMO,gBAAgBD,MAC7BE,IAAKhB,KAGP,KACJ,gBAACb,EAAD,KACE,sBAAIc,UAAU,SAASD,GACvB,4BACE,gBAAC,KAAD,CAAMiB,KAAK,SAASC,KAAK,wBAG7B,gBAAC9B,EAAD,KACGmB,EACC,gCACE,gBAAC,KAAD,CAAMY,wBAAyB,CAAEC,OAAQb,MAEzC,KACJ,+BAAOE,cAW5B,EA9DkBlB,CAAiB8B,EAAAA","sources":["webpack://biffud.com/./lib/ui/templates/MediaTpl.js"],"sourcesContent":["import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport Img from \"gatsby-image\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Copy, Icon, Tile } from \"ui/components\";\n\nconst MentionsList = styled.ol`\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nconst Mention = styled(Tile)`\n  ${setType(\"m\")};\n  grid-row-end: span 1;\n  position: relative;\n  ${breakpoint.phone} {\n    ${setSpace(\"mbl\")};\n  }\n  ${({ highlight }) =>\n    highlight\n      ? `\n    grid-column: 1 / span 2;\n    grid-row: 1 / 2;\n    justify-self: stretch;\n    align-self: stretch;\n  `\n      : ``};\n`;\n\nconst MentionCover = styled.div`\n  ${setSpace(\"mbm\")};\n  border: 2px solid ${({ theme }) => theme.actionColor};\n  display: block;\n`;\n\nconst MentionHd = styled.div`\n  align-items: flex-start;\n  display: flex;\n  justify-content: space-between;\n  h2,\n  span {\n    ${setType(\"l\")};\n    color: ${({ theme }) => theme.actionColor};\n    font-weight: 800;\n  }\n`;\n\nconst MentionBd = styled.div`\n  ${setSpace(\"mts\")};\n  color: ${({ theme }) => theme.titleColor};\n  ${Copy} {\n    ${setSpace(\"mbs\")};\n  }\n`;\n\nexport default class MediaTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { mentions } = this.props.data;\n    const { frontmatter } = this.props.data.markdownRemark;\n    return (\n      <>\n        <Helmet {...this.props} title={frontmatter.title} />\n        <Layout {...this.props}>\n          <Header>\n            <h1 className=\"hero\">{frontmatter.heading}</h1>\n            <p className=\"para\">{frontmatter.subheading}</p>\n          </Header>\n          <Body>\n            <MentionsList>\n              {mentions.edges.map(({ node }) => {\n                const { html } = node;\n                const {\n                  cover,\n                  publication,\n                  source,\n                  highlight,\n                  title\n                } = node.frontmatter;\n                return (\n                  <Mention as=\"li\" highlight={highlight}>\n                    <Tile href={source} target=\"_blank\" as=\"a\">\n                      {cover ? (\n                        <MentionCover>\n                          <Img\n                            fluid={cover.childImageSharp.fluid}\n                            alt={title}\n                          />\n                        </MentionCover>\n                      ) : null}\n                      <MentionHd>\n                        <h2 className=\"title\">{title}</h2>\n                        <span>\n                          <Icon name=\"popout\" text=\"Read the article…\" />\n                        </span>\n                      </MentionHd>\n                      <MentionBd>\n                        {html ? (\n                          <>\n                            <Copy dangerouslySetInnerHTML={{ __html: html }} />\n                          </>\n                        ) : null}\n                        <p>by {publication}</p>\n                      </MentionBd>\n                    </Tile>\n                  </Mention>\n                );\n              })}\n            </MentionsList>\n          </Body>\n        </Layout>\n      </>\n    );\n  }\n}\n\nMediaTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired,\n    mentions: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query MediaTplQuery($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n      }\n    }\n    mentions: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"//pages/fame/.*mention.md/\" } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            date(formatString: \"MMMM YYYY\")\n            title\n            cover {\n              childImageSharp {\n                fluid(\n                  maxHeight: 240\n                  quality: 100\n                  traceSVG: { color: \"lightgray\" }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n            link\n            highlight\n            publication\n            source\n            uid\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["MentionsList","styled","breakpoint","Mention","Tile","setType","setSpace","highlight","MentionCover","theme","actionColor","MentionHd","MentionBd","titleColor","Copy","MediaTpl","props","state","render","mentions","this","data","frontmatter","markdownRemark","title","className","heading","subheading","edges","map","node","html","cover","publication","source","as","href","target","fluid","childImageSharp","alt","name","text","dangerouslySetInnerHTML","__html","Component"],"sourceRoot":""}