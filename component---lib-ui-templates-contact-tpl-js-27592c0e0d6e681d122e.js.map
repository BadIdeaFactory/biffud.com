{"version":3,"file":"component---lib-ui-templates-contact-tpl-js-27592c0e0d6e681d122e.js","mappings":"uNASMA,GAAgBC,EAAAA,EAAAA,SAAOC,EAAAA,IAAV,gFAAGD,CAAH,qIACfE,EAAAA,EAAAA,IAAS,QASPC,EAASH,EAAAA,QAAAA,GAAAA,WAAH,8DAAGA,CAAH,0BACRE,EAAAA,EAAAA,IAAS,QAIPE,EAAaJ,EAAAA,QAAAA,GAAAA,WAAH,kEAAGA,CAAH,iBACZE,EAAAA,EAAAA,IAAS,QAEPA,EAAAA,EAAAA,IAAS,QAIMG,EAAAA,SAAAA,GACnB,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,GAFI,EA+ElB,OAhFkBF,EAAAA,EAAAA,GAAAA,EAAAA,GAIlB,YAEDG,OAAA,WACE,IAAQC,EAAgBC,KAAKJ,MAAMK,KAAKC,eAAhCH,YAENI,EAMEJ,EANFI,MACAC,EAKEL,EALFK,WACAC,EAIEN,EAJFM,WACAC,EAGEP,EAHFO,UACAC,EAEER,EAFFQ,UACAC,EACET,EADFS,SAEF,OACE,gCACE,gBAAC,KAAD,iBAAYR,KAAKJ,MAAjB,CAAwBa,MAAOV,EAAYU,SAC3C,gBAAC,KAAWT,KAAKJ,MACf,gBAAC,KAAD,KACE,gBAAC,KAAD,KACE,sBAAIc,UAAU,QAAQX,EAAYY,SAClC,qBAAGD,UAAU,QAAQX,EAAYa,aAEnC,gBAACvB,EAAD,KACE,gBAAC,KAAD,CAAQwB,QAAM,EAACC,YAAU,EAACX,MAAOA,IACjC,gBAACV,EAAD,KACGa,EACC,gBAACZ,EAAD,KACE,gBAAC,KAAD,CAAQqB,KAAI,uBAAyBT,GACnC,gBAAC,KAAD,CAAMU,KAAK,UAAUC,KAAK,MACzBX,IAGH,KACHE,EACC,gBAACd,EAAD,KACE,gBAAC,KAAD,CAAQqB,KAAI,sBAAwBP,EAAYS,KAAK,KACnD,gBAAC,KAAD,CAAMD,KAAK,WACVR,IAGH,KACHH,EACC,gBAACX,EAAD,KACE,gBAAC,KAAD,CACEqB,KAAI,wBAA0BV,EAC9BY,KAAK,KAEL,gBAAC,KAAD,CAAMD,KAAK,aACVX,IAGH,KACHE,EACC,gBAACb,EAAD,KACE,gBAAC,KAAD,CAAQqB,KAAI,uBAAyBR,EAAaU,KAAK,KACrD,gBAAC,KAAD,CAAMD,KAAK,YACVT,IAGH,KACHH,EACC,gBAACV,EAAD,KACE,gBAAC,KAAD,CACEqB,KAAI,wBAA0BX,EAC9Ba,KAAK,KAEL,gBAAC,KAAD,CAAMD,KAAK,aACVZ,IAGH,WAOjB,EAhFkBT,CAAmBuB,EAAAA","sources":["webpack://biffud.com/./lib/ui/templates/ContactTpl.js"],"sourcesContent":["import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Action, Icon, Tile } from \"ui/components\";\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { setSpace } from \"ui/mixins\";\n\nconst ContactHolder = styled(Tile)`\n  ${setSpace(\"pah\")};\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 600px;\n  text-align: center;\n`;\nconst Social = styled.ul`\n  ${setSpace(\"mtl\")};\n  text-align: left;\n`;\n\nconst SocialItem = styled.li`\n  ${setSpace(\"mts\")};\n  i {\n    ${setSpace(\"mrs\")};\n  }\n`;\n\nexport default class ContactTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { frontmatter } = this.props.data.markdownRemark;\n    const {\n      email,\n      facebookid,\n      linkedinid,\n      twitterid,\n      myspaceid,\n      githubid\n    } = frontmatter;\n    return (\n      <>\n        <Helmet {...this.props} title={frontmatter.title} />\n        <Layout {...this.props}>\n          <Body>\n            <Header>\n              <h1 className=\"hero\">{frontmatter.heading}</h1>\n              <p className=\"para\">{frontmatter.subheading}</p>\n            </Header>\n            <ContactHolder>\n              <Action button obfuscated email={email} />\n              <Social>\n                {twitterid ? (\n                  <SocialItem>\n                    <Action href={`https://twitter.com/${twitterid}`}>\n                      <Icon name=\"twitter\" size=\"s\" />\n                      {twitterid}\n                    </Action>\n                  </SocialItem>\n                ) : null}\n                {githubid ? (\n                  <SocialItem>\n                    <Action href={`https://github.com/${githubid}`} size=\"s\">\n                      <Icon name=\"github\" />\n                      {githubid}\n                    </Action>\n                  </SocialItem>\n                ) : null}\n                {linkedinid ? (\n                  <SocialItem>\n                    <Action\n                      href={`https://linkedin.com/${linkedinid}`}\n                      size=\"s\"\n                    >\n                      <Icon name=\"linkedin\" />\n                      {linkedinid}\n                    </Action>\n                  </SocialItem>\n                ) : null}\n                {myspaceid ? (\n                  <SocialItem>\n                    <Action href={`https://myspace.com/${myspaceid}`} size=\"s\">\n                      <Icon name=\"myspace\" />\n                      {myspaceid}\n                    </Action>\n                  </SocialItem>\n                ) : null}\n                {facebookid ? (\n                  <SocialItem>\n                    <Action\n                      href={`https://facebook.com/${facebookid}`}\n                      size=\"s\"\n                    >\n                      <Icon name=\"facebook\" />\n                      {facebookid}\n                    </Action>\n                  </SocialItem>\n                ) : null}\n              </Social>\n            </ContactHolder>\n          </Body>\n        </Layout>\n      </>\n    );\n  }\n}\n\nContactTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query ContactTplQuery($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n        email\n        facebookid\n        twitterid\n        githubid\n      }\n    }\n  }\n`;\n"],"names":["ContactHolder","styled","Tile","setSpace","Social","SocialItem","ContactTpl","props","state","render","frontmatter","this","data","markdownRemark","email","facebookid","linkedinid","twitterid","myspaceid","githubid","title","className","heading","subheading","button","obfuscated","href","name","size","Component"],"sourceRoot":""}