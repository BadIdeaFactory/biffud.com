{"version":3,"file":"component---lib-ui-templates-project-listing-tpl-js-c5c02f29e0a8afa685ca.js","mappings":"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","sources":["webpack://biffud.com/./lib/ui/templates/ProjectListingTpl.js"],"sourcesContent":["import { graphql, Link } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Icon, Tile } from \"ui/components\";\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { breakpoint } from \"ui/settings\";\nimport { setSpace, setType } from \"ui/mixins\";\n\nconst Projects = styled.ol`\n  ${breakpoint.tabletUp} {\n    display: grid;\n    grid-gap: 40px;\n    grid-template-columns: repeat(auto-fill, minmax(340px, 1fr));\n    margin-left: auto;\n    margin-right: auto;\n  }\n  ${breakpoint.desktopUp} {\n    grid-template-columns: repeat(auto-fill, minmax(380px, 1fr));\n  }\n`;\n\nconst Flag = styled.span`\n  ${setType(\"x\")};\n  ${setSpace(\"mlx\")};\n  color: ${({ theme }) => theme.dimmedColor};\n  font-weight: 800;\n  text-transform: uppercase;\n`;\n\nconst Project = styled.li`\n  grid-row-end: span 1;\n  ${breakpoint.phone} {\n    ${setSpace(\"mbl\")};\n  }\n  ${breakpoint.tabletUp} {\n    &:nth-child(even) {\n      transform: translateY(30px);\n    }\n  }\n`;\n\nconst ProjectCover = styled.div`\n  ${setSpace(\"mbm\")};\n  border: 2px solid ${({ theme }) => theme.actionColor};\n  position: relative;\n  ${({ $hasPlaceholder, theme }) =>\n    $hasPlaceholder\n      ? `\n  .thinking {\n    color: ${theme.actionColor};\n    display: inline-block;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    i {\n      font-size: 80px !important;\n    }\n  }`\n      : ``};\n`;\n\nconst ProjectHd = styled.div`\n  ${setSpace(\"mbm\")};\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  span {\n    font-weight: 800;\n    text-transform: uppercase;\n  }\n  span.code {\n    align-items: center;\n    color: ${({ theme }) => theme.titleColor};\n    display: flex;\n  }\n  span.date {\n    color: ${({ theme }) => theme.dimmedColor};\n  }\n`;\n\nconst ProjectBd = styled.div`\n  align-items: flex-start;\n  display: flex;\n  justify-content: space-between;\n  h2,\n  span {\n    ${setType(\"l\")};\n    color: ${({ theme }) => theme.actionColor};\n    font-weight: 800;\n    text-transform: uppercase;\n  }\n  h2 {\n    max-width: 75%;\n  }\n  span {\n    display: none;\n  }\n  ${breakpoint.desktopUp} {\n    span {\n      display: inline-block;\n    }\n  }\n`;\n\nconst ProjectFt = styled.div`\n  color: ${({ theme }) => theme.titleColor};\n  p.summary {\n    ${setSpace(\"mts\")};\n  }\n`;\n\nexport default class ProjectListingTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { defaultCover, projects, markdownRemark } = this.props.data;\n    const genericCover = defaultCover.edges[0].node.childImageSharp;\n    const { frontmatter } = markdownRemark;\n    return <>\n      <Helmet {...this.props} title={frontmatter.title} />\n      <Layout {...this.props}>\n        <Header>\n          <h1 className=\"hero\">{frontmatter.heading}</h1>\n          <p className=\"para\">{frontmatter.subheading}</p>\n        </Header>\n        <Body>\n          <Projects>\n            {projects.edges.map(({ node }) => {\n              const {\n                active,\n                cover,\n                date,\n                code,\n                tagline,\n                title,\n                uid\n              } = node.frontmatter;\n              return (\n                <Project key={uid} as=\"li\">\n                  <Tile as={Link} to={`/projects/${uid}`}>\n                    <ProjectHd>\n                      <span className=\"code\">\n                        {code} {!active ? <Flag>(Hibernated)</Flag> : null}\n                      </span>\n                      <span className=\"date\">{date}</span>\n                    </ProjectHd>\n                    <ProjectCover $hasPlaceholder={!cover}>\n                      <GatsbyImage\n                        image={cover\n                          ? cover.childImageSharp.gatsbyImageData\n                          : genericCover.gatsbyImageData}\n                        alt={title}\n                      />\n                      {!cover ? (\n                        <span className=\"thinking\">\n                          <Icon name=\"thinking\" size=\"h\" />\n                        </span>\n                      ) : null}\n                    </ProjectCover>\n                    <ProjectBd>\n                      <h2 className=\"title\">{title}</h2>\n                      <span>\n                        <Icon name=\"arrow-right\" text=\"Read moreâ€¦\" />\n                      </span>\n                    </ProjectBd>\n                    <ProjectFt>\n                      <p className=\"summary\">{tagline}</p>\n                    </ProjectFt>\n                  </Tile>\n                </Project>\n              );\n            })}\n          </Projects>\n        </Body>\n      </Layout>\n    </>;\n  }\n}\n\nProjectListingTpl.propTypes = {\n  data: shape({\n    projects: object.isRequired,\n    markdownRemark: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`query ProjectsTplQuery($uid: String!) {\n  markdownRemark(frontmatter: {uid: {eq: $uid}}) {\n    html\n    frontmatter {\n      uid\n      title\n      heading\n      subheading\n    }\n  }\n  defaultCover: allFile(filter: {relativePath: {eq: \"images/default-cover.png\"}}) {\n    edges {\n      node {\n        childImageSharp {\n          gatsbyImageData(\n            width: 600\n            quality: 90\n            placeholder: DOMINANT_COLOR\n            layout: CONSTRAINED\n          )\n        }\n      }\n    }\n  }\n  projects: allMarkdownRemark(\n    filter: {fileAbsolutePath: {regex: \"/pages/projects/.*project.md/\"}}\n    sort: [{frontmatter: {score: DESC}}, {frontmatter: {date: ASC}}]\n  ) {\n    edges {\n      node {\n        id\n        frontmatter {\n          uid\n          date(formatString: \"MMM YYYY\")\n          title\n          active\n          tagline\n          code\n          cover {\n            childImageSharp {\n              gatsbyImageData(\n                width: 600\n                quality: 90\n                placeholder: DOMINANT_COLOR\n                layout: CONSTRAINED\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n}`;\n"],"names":["Projects","styled","ol","withConfig","displayName","componentId","breakpoint","tabletUp","desktopUp","Flag","span","setType","setSpace","_ref","theme","dimmedColor","Project","li","phone","ProjectCover","div","_ref2","actionColor","_ref3","$hasPlaceholder","ProjectHd","_ref4","titleColor","_ref5","ProjectBd","_ref6","ProjectFt","_ref7","ProjectListingTpl","_Component","props","_this","call","state","_inheritsLoose","prototype","render","defaultCover","projects","markdownRemark","this","data","genericCover","edges","node","childImageSharp","frontmatter","React","Helmet","Object","assign","title","Layout","Header","className","heading","subheading","Body","map","_ref8","active","cover","date","code","tagline","uid","key","as","Tile","Link","to","GatsbyImage","image","gatsbyImageData","alt","Icon","name","size","text","Component"],"sourceRoot":""}