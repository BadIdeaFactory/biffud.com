{"version":3,"sources":["webpack:///./lib/ui/templates/FAQListingTpl.js"],"names":["Questions","styled","Tile","setSpace","isActive","FAQListingTpl","props","state","tab","switchTab","bind","str","this","setState","render","frontmatter","data","markdownRemark","membershipQuestions","membership","edges","node","html","partnershipQuestions","partnership","title","className","heading","subheading","style","marginLeft","marginRight","maxWidth","count","handleClick","partnershipTab","membershipTab","limit","dangerouslySetInnerHTML","__html","Component","pageQuery"],"mappings":"uQASA,IAAMA,EAAYC,YAAOC,KAAV,+EAAGD,CAAH,wEACXE,YAAS,QACA,qBAAGC,SAA2B,QAAU,UAMhCC,E,oBACnB,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CACXC,IAAK,eAEP,EAAKC,UAAY,EAAKA,UAAUC,K,yHAAf,KALA,E,kHAQnBD,UAAA,SAAUE,GACRC,KAAKC,SAAS,CAAEL,IAAKG,K,EAGvBG,OAAA,WAAU,IAAD,OACCC,EAAgBH,KAAKN,MAAMU,KAAKC,eAAhCF,YACFG,EAAsBN,KAAKN,MAAMU,KAAKG,WAAWC,MAAM,GAAGC,KAAKC,KAC/DC,EAAuBX,KAAKN,MAAMU,KAAKQ,YAAYJ,MAAM,GAAGC,KAAKC,KACvE,OACE,oCACE,kBAAC,IAAD,iBAAYV,KAAKN,MAAjB,CAAwBmB,MAAM,gCAC9B,kBAAC,IAAWb,KAAKN,MACf,kBAAC,IAAD,KACE,wBAAIoB,UAAU,QAAQX,EAAYY,SAClC,uBAAGD,UAAU,QAAQX,EAAYa,aAEnC,kBAAC,IAAD,CACEC,MAAO,CACLC,WAAY,OACZC,YAAa,OACbC,SAAU,UAGZ,kBAAC,IAAD,CAAMC,MAAO,GACX,kBAAC,IAAD,CACEC,YAAa,kBAAM,EAAKzB,UAAU,gBAClCL,SAA6B,gBAAnBQ,KAAKL,MAAMC,KAEpBO,EAAYoB,gBAEf,kBAAC,IAAD,CACED,YAAa,kBAAM,EAAKzB,UAAU,eAClCL,SAA6B,eAAnBQ,KAAKL,MAAMC,KAEpBO,EAAYqB,gBAGjB,kBAACpC,EAAD,CAAWI,SAA6B,gBAAnBQ,KAAKL,MAAMC,IAAuB6B,OAAK,GAC1D,kBAAC,IAAD,CACEC,wBAAyB,CAAEC,OAAQhB,MAGvC,kBAACvB,EAAD,CAAWI,SAA6B,eAAnBQ,KAAKL,MAAMC,IAAsB6B,OAAK,GACzD,kBAAC,IAAD,CAAMC,wBAAyB,CAAEC,OAAQrB,U,GApDZsB,aAqE9BC,EAAS","file":"component---lib-ui-templates-faq-listing-tpl-js-046e130e10c30b339356.js","sourcesContent":["import { graphql } from \"gatsby\";\nimport { object, shape } from \"prop-types\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Body, Header, Helmet, Layout } from \"ui/partials\";\nimport { Copy, Tabs, Tab, Tile } from \"ui/components\";\nimport { setSpace } from \"ui/mixins\";\n\nconst Questions = styled(Tile)`\n  ${setSpace(\"pah\")};\n  display: ${({ isActive }) => (isActive ? \"block\" : \"none\")};\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 900px;\n`;\n\nexport default class FAQListingTpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tab: \"partnership\"\n    };\n    this.switchTab = this.switchTab.bind(this);\n  }\n\n  switchTab(str) {\n    this.setState({ tab: str });\n  }\n\n  render() {\n    const { frontmatter } = this.props.data.markdownRemark;\n    const membershipQuestions = this.props.data.membership.edges[0].node.html;\n    const partnershipQuestions = this.props.data.partnership.edges[0].node.html;\n    return (\n      <>\n        <Helmet {...this.props} title=\"Frequently Asked Questions\" />\n        <Layout {...this.props}>\n          <Header>\n            <h1 className=\"hero\">{frontmatter.heading}</h1>\n            <p className=\"para\">{frontmatter.subheading}</p>\n          </Header>\n          <Body\n            style={{\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              maxWidth: \"900px\"\n            }}\n          >\n            <Tabs count={2}>\n              <Tab\n                handleClick={() => this.switchTab(\"partnership\")}\n                isActive={this.state.tab === \"partnership\"}\n              >\n                {frontmatter.partnershipTab}\n              </Tab>\n              <Tab\n                handleClick={() => this.switchTab(\"membership\")}\n                isActive={this.state.tab === \"membership\"}\n              >\n                {frontmatter.membershipTab}\n              </Tab>\n            </Tabs>\n            <Questions isActive={this.state.tab === \"partnership\"} limit>\n              <Copy\n                dangerouslySetInnerHTML={{ __html: partnershipQuestions }}\n              />\n            </Questions>\n            <Questions isActive={this.state.tab === \"membership\"} limit>\n              <Copy dangerouslySetInnerHTML={{ __html: membershipQuestions }} />\n            </Questions>\n          </Body>\n        </Layout>\n      </>\n    );\n  }\n}\n\nFAQListingTpl.propTypes = {\n  data: shape({\n    markdownRemark: object.isRequired,\n    membership: object.isRequired,\n    partnership: object.isRequired\n  }).isRequired\n};\n\nexport const pageQuery = graphql`\n  query FAQTplQuery($uid: String!) {\n    markdownRemark(frontmatter: { uid: { eq: $uid } }) {\n      html\n      frontmatter {\n        uid\n        title\n        heading\n        subheading\n        membershipTab\n        partnershipTab\n      }\n    }\n    membership: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//pages/question/membership/*/.*/*.md/\" }\n      }\n      sort: { order: ASC, fields: [frontmatter___score] }\n    ) {\n      edges {\n        node {\n          id\n          html\n        }\n      }\n    }\n    partnership: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//pages/question/partnership/*/.*/*.md/\" }\n      }\n      sort: { order: DESC, fields: [frontmatter___score] }\n    ) {\n      edges {\n        node {\n          id\n          html\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}